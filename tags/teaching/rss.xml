<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>teaching on C&#39;est la Z</title>
    <link>https://cestlaz.github.io/tags/teaching/</link>
    <description>C&#39;est la Z (teaching)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 17 Feb 2023 10:00:05 -0400</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/tags/teaching/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>Motivating Students in CS Class</title>
      <link>https://cestlaz.github.io/post/motivating-students/</link>
      <pubDate>Fri, 17 Feb 2023 10:00:05 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/motivating-students/</guid>
      <description>&lt;p&gt;
A teacher in one of my networks posted a question earlier today -
&amp;#34;have you had any challenges or trouble with motivating kids in your
classes?&amp;#34;&lt;/p&gt;
&lt;p&gt;
Not a new question and  I&amp;#39;m sure for any teacher with any level of
experience the answer is a resounding &lt;strong&gt;yes&lt;/strong&gt;. I don&amp;#39;t care who you
are. Not all of your students are motivated all the time.&lt;/p&gt;
&lt;p&gt;
This can particularly be a problem when a teacher switches over from
teaching an elective or selective to a required class but it might not
be. I had to deal with this when I was able to get Stuy to require the
intro course I designed. It was an adjustment but not really too big a
deal. If anything, more students ended up getting turned on to CS than
turned off and since even as an elective, there were always some
unmotivated students. The adjustment was overcoming the reticence of
students being &amp;#34;forced&amp;#34; to be there as opposed to students who might
have taken an elective for the wrong reasons.&lt;/p&gt;
&lt;p&gt;
Anyway, back to the problem.&lt;/p&gt;
&lt;p&gt;
CS can be many things but in K12 it frequently involves programming
and since that was what the initial question was referring to, we&amp;#39;ll
stick to that.&lt;/p&gt;
&lt;p&gt;
Some students will be motivated by programming in and of
itself. They might see it as a creative art. That&amp;#39;s great but they&amp;#39;re
the easy ones.&lt;/p&gt;
&lt;p&gt;
Beyond that, programming is usually used for one of two
things. Solving problems and/or building things. You could also add
for telling stories or communicating ideas but you might put those
under building things.&lt;/p&gt;
&lt;p&gt;
Looking at programming through those lenses can also motivate more
students.&lt;/p&gt;
&lt;p&gt;
From there, we get to the fine tuning.&lt;/p&gt;
&lt;p&gt;
What will scratch a student&amp;#39;s itch. They might not care for coding but
they might have some problem they want to solve of thing they want to
build. When I was very young and just teaching myself to program I was
of an age when a favored pastime was making fun of your friend&amp;#39;s
mother. So, what did my clique do? We wrote &amp;#34;The Mother Game&amp;#34; - a
stupid little program to insult each others moms. True, we were
already motivated since we were teaching ourselves but we went much
farther doing that silly game than if we were solving some textbook
problem.&lt;/p&gt;
&lt;p&gt;
Sometimes collaboration can help. Of friends and I who wroet &amp;#34;The
Mother Game,&amp;#34; two of us were techies but one wasn&amp;#39;t but the third got
caught up in the group activity.&lt;/p&gt;
&lt;p&gt;
Of course we still have to remember that one size will not fit
all. Something that motivates student A might not motivate student B
and what motivates the teacher will almost certainly not motivate
everyone in class (I&amp;#39;m looking at you, gamification people). Sure,
games are fun for some but not everyone. Same with sports, current
events, fashion and any other topic. As a teacher you can mix it up
and give individual choice when possible and all of that can help.&lt;/p&gt;
&lt;p&gt;
One thing to remember though is that even when we&amp;#39;re having trouble
motivating all of our students we still have it much easier in that
regard than many other subject teachers. A language teacher is
limited by their class level&amp;#39;s vocabulary. In math, you can solve
problems but only with the math they&amp;#39;ve learned so far which we know
rarely translates to natural motivation. I love history but many
students don&amp;#39;t and history classes are frequently very strictly
constrained so teachers might not have the freedom they want to
motivate as many students as they could otherwise.&lt;/p&gt;
&lt;p&gt;
And of course, public school teachers with large classes will have a
&lt;strong&gt;much&lt;/strong&gt; harder time than private school teachers who only meet with a
handful at a time.&lt;/p&gt;
&lt;p&gt;
Before closing, I should also mention that some teachers will have an
easier time than others due to their own personalities. Some teachers
are charismatic or otherwise succeed by &amp;#34;force of personality.&amp;#34; It
seems that students more want to please some teachers than others and
that is also a form of motivation. I&amp;#39;m not saying it&amp;#39;s a great long
term one but I do want to acknowledge it.&lt;/p&gt;
&lt;p&gt;
So, to close I also want to remind teachers that no matter what you do
you are &lt;strong&gt;not&lt;/strong&gt; going to motivate all students and &lt;strong&gt;not&lt;/strong&gt; all the
time. You might read facebook posts by miracle teachers who only share
successes or &amp;#34;thought leaders&amp;#34; who talk the talk but don&amp;#39;t walk the
walk but the truth is nobody bats 1000. In baseball, you can fail at
the plate two third of the time and you&amp;#39;re a hall of famer. Good
teachers will do better than that but as I said, nobody bats 1000. Win
as much as you can but don&amp;#39;t beat yourself up because you can&amp;#39;t reach
everyone all the time. Strive to do better throughout your career and
when the dust settles you&amp;#39;ll see that your successes far outweigh the
times when you weren&amp;#39;t as happy with your results.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>First Day Final Semester</title>
      <link>https://cestlaz.github.io/post/first-day-last-semester/</link>
      <pubDate>Fri, 27 Jan 2023 09:49:07 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/first-day-last-semester/</guid>
      <description>&lt;p&gt;
So, yesterday was the first day of the semester. Since I&amp;#39;m retiring,
it&amp;#39;s my last first day at Hunter.&lt;/p&gt;
&lt;p&gt;
Felt pretty good. I think knowing that I&amp;#39;ll get a break after the term
has alleviated some of the burnout for now.&lt;/p&gt;
&lt;p&gt;
What will I be focusing on in class this last time around?&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m teaching three classes.&lt;/p&gt;
&lt;p&gt;
First up is my undergraduate data structures. To be honest, I&amp;#39;m not
looking at anything special there - just business as usual. I enjoyed
working with this group last semester in their CS1 class so this is
just a continuation. I&amp;#39;ll try to bring the usual extras I bring to DS
classes - interesting applications of the data structures and
algorithms and work on prepping for the technical interview but I
don&amp;#39;t think I&amp;#39;ll be paying attention to anything different than any
other semester.&lt;/p&gt;
&lt;p&gt;
My CS1 recitation though, is going to take more thought. Of the three
undergraduate classes I cycle through, CS0 in Python, this CS1
lab/recitation, and Data Structures, this class is the one where I
have and exercise the most freedom. I do a good deal of work with the
class on practical programming and software engineering as well as
looking at some more advanced topics than the regular
sections. Passing off my data structures class to the &amp;#34;next guy&amp;#34; will
be pretty straightforward but this class has been customized enough
that I have to really thin about and document what should be kept
regardless of the new instructor and what&amp;#39;s really extraneous. &lt;/p&gt;
&lt;p&gt;
We can probably drop the CS extras I do - as much as I like them, the
truth is that another CS instructor might prefer other advanced
topics.&lt;/p&gt;
&lt;p&gt;
The Software Engineering stuff, though, I think I&amp;#39;ve been doing
particularly well and should probably be kept as is. I&amp;#39;ve really got
to document all of this and prepare for the hand off.&lt;/p&gt;
&lt;p&gt;
My third class is a topics class for the Masters students and working
teachers in my certification program. That should be fun. Last year, I
enjoyed all the student presentations and got some great new ideas
should I teach any of the topics in the future. this time around
should be the same.&lt;/p&gt;
&lt;p&gt;
The thing I have to focus on is that I have to make sure to document
the aspects of the class that will potentially be tested on the
forthcoming CST. That&amp;#39;s the states Content Specialty Test. This group
will probably be exempt since they&amp;#39;ll finish off before the exam is
released but future cohorts will have to sit for the exam in order to
earn their state CS certification. I&amp;#39;ll have to document all the
little annoying things that could be on the exam for future reference
so that the next person running the program makes sure they&amp;#39;re all
covered when next this class runs.&lt;/p&gt;
&lt;p&gt;
So that&amp;#39;s pretty much it.&lt;/p&gt;
&lt;p&gt;
First week down and twelve more to go.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>teachGPT</title>
      <link>https://cestlaz.github.io/post/teachgpt/</link>
      <pubDate>Thu, 12 Jan 2023 07:45:56 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teachgpt/</guid>
      <description>
&lt;p&gt;
So, since we discussed &lt;a href=&#34;https://cestlaz.github.io/post/cheatgpt/&#34;&gt;cheating and chatGPT&lt;/a&gt; and decided that there
shouldn&amp;#39;t be a ban, how can it or similar tools be used productively?&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
General use
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;The first go to seems to be as an alternative search engine. It hasn&amp;#39;t
been uncommon seeing people say they use chatGPT instead of searching
StackOverflow. This makes sense. ChatGPT gives answers and the natural
language interface can make it easier to form some questions or ask
for results in a particular format. Interesting though is that it
seems, and I have no evidence for this, that people will more accept a
&amp;#34;written text&amp;#34; answer from chatGPT as factual as opposed to a listed
search result. This is worth thinking about since chatGPT doesn&amp;#39;t
always give correct answers to questions so buyer beware.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
In non CS classes
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
For more interesting ideas, I&amp;#39;ll start outside of my comfort zone -
non CS classes. One of the big fears of chatGPT is that it will write
student essays. Why not leverage that as a feature, not a bug. As
chatGPT to write an essay and then have students analyze and critique
it.&lt;/p&gt;
&lt;p&gt;
We&amp;#39;ve all seen stories on how chatGPT sometimes gets the facts
wrong. How about leveraging that? Do some fact checking.&lt;/p&gt;
&lt;p&gt;
I asked chatGPT to write an essay and to include at least three
errors. It created a reasonable essays and at the bottom listed the
errors. Of cousre, there could always be more. Take those essays and
have the students not only critique but fact check. Better, don&amp;#39;t
initially fact check but have students build arguments based on the
documents you give them and let them learn to be critical of resources
when they discover they&amp;#39;re not always correct.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m sure there are many more creative ways one can leverage generative
systems like chatGPT in educational settings but now let&amp;#39;s move to CS
classes.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
In CS classes
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
I wondered if chatGPT could help create problems. I asked it to create
a parsons problem. That was an epic fail. It gave me a Java program in
order. I guess I could then scramble the lines but that wasn&amp;#39;t the
point.&lt;/p&gt;
&lt;p&gt;
On the other hand, the answers it gave could be used as code tracing
examples so there may be some value there.&lt;/p&gt;
&lt;p&gt;
I also asked it to generate test questions and small programming
assignments but I didn&amp;#39;t find the output useful.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
What else?
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
There&amp;#39;s also been talk about creating lessons to either support or one
day replace teachers and with this, we&amp;#39;re a &lt;strong&gt;long&lt;/strong&gt; ways off.&lt;/p&gt;
&lt;p&gt;
I asked chatGPT to write lesson plans on a number CS and non CS topics
and each time the result was the same.&lt;/p&gt;
&lt;p&gt;
I got a formulaic lesson plan that technically covered the material
but I found them less than worthless. Yes, technically one could kind
of sort of work off the lesson plan but they were bare bones - no
interesting motivations, questions, possible tangents, or examples. No
potential segues or pitfalls and certainly nothing specific for any
teacher&amp;#39;s actual students.&lt;/p&gt;
&lt;p&gt;
To a non teacher the lesson plans might look alright but to any decent
teacher, they&amp;#39;re worthless. If you&amp;#39;re a teacher, you already know the
bare bones outline of any given lesson and if you don&amp;#39;t you shouldn&amp;#39;t
be teaching that subject. What makes the lesson work is everything on
top of the bare bones skeleton - the motivations, the examples, the
activities and here, chatGPT is of no help.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
The killer app
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
So far, it looks like chatGPT can be useful but it certainly has
limitations. I did find, however, the chatGPT killer app for
education. By find, I mean I saw someone else tweet out the
idea. Sorry I can&amp;#39;t give credit but I didn&amp;#39;t end up saving the link.&lt;/p&gt;
&lt;p&gt;
ChatGPT can be used to create all the garbage that administrators and
politicians insist are important in education but are crap.&lt;/p&gt;
&lt;p&gt;
Hey, chatGPT: &amp;#34;Write me a lesson plan introducing loops that aligns to
the New York State Computer Science and Digital Literacy Standards.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Hey, chatGPT: &amp;#34;Write me a sub lesson plan on conditional statements in
Java.&amp;#34;&lt;/p&gt;
&lt;p&gt;
These are great. Sure, they&amp;#39;re lousy lesson plans but they&amp;#39;ll have the
references to the standards that administrators and other education
reformers love and now teachers don&amp;#39;t have to waste their time on it.&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s the killer app!!!!!!!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-6&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
Final thoughts
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-6&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
So there it is. A few thoughts on how we can productively use tools
like chatGPT. I&amp;#39;m sure there are more and better ones out there and
I&amp;#39;d love to hear about them so feel free to share yours.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Cheating</title>
      <link>https://cestlaz.github.io/post/cheating/</link>
      <pubDate>Tue, 03 Jan 2023 14:30:36 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cheating/</guid>
      <description>&lt;p&gt;
I said in my last post that I wanted to write about chatGPT. The way I
see it, chatGPT is affecting teachers in four areas. First, students
using it to cheat, second the possibility of students using it as a
constructive tool. Third, teachers using it as a resource for lesson
planning or similar, and fourth, down the road, another tool to
replace teachers.&lt;/p&gt;
&lt;p&gt;
Before I dive into any of those, I thought I&amp;#39;d spend a post talking
about cheating in general. I&amp;#39;ve written about cheating &lt;a href=&#34;https://cestlaz.github.io/post/cheating-on-projects/&#34;&gt;before&lt;/a&gt; but
that was a few years ago so I thought I&amp;#39;d revisit things in light of
chatGPT and other resources students can use to cut corners.&lt;/p&gt;
&lt;p&gt;
Cheating has always been a big topic in education. Some teachers let
it slide, some are hardliners but it&amp;#39;s a front and center topic. It&amp;#39;s
also a topic that&amp;#39;s difficult to address. One reason is that our
society tolerates and even celebrates cheating at many levels. Time
and again we see that the rules are only for the little people. Not a
great basis if you want to encourage rule following in the classroom.&lt;/p&gt;
&lt;p&gt;
In my opinion, cheating is going to happen and usually it&amp;#39;s not worth
stressing about but more on that later.&lt;/p&gt;
&lt;p&gt;
Why do student cheat?&lt;/p&gt;
&lt;p&gt;
Some cheat because they don&amp;#39;t care about the class and find it as an
easy way out but I&amp;#39;d like to think that most students don&amp;#39;t follow
this path. Many cheaters do it out of desperation - they &lt;strong&gt;need&lt;/strong&gt; to get
a good grade because of their parents, college applications,
expectations or otherwise. The system they&amp;#39;re in dictates that it is
unacceptable to get a low grade and so they&amp;#39;re backed into a
corner. Similarly, students are at times so overburdened that they
can&amp;#39;t complete all the work or adequately prepare for assessments -
this can also lead to cheating.&lt;/p&gt;
&lt;p&gt;
Another case is that students in some cultures view what some would
call cheating as collaboration and this one can be tricky as to a many
people it&amp;#39;s a matter of degree and in my opinion, collaboration should
be encouraged.&lt;/p&gt;
&lt;p&gt;
I do have to admit that there is another category that I played a part
in back in high school - in my group, if we respected a teacher, we
never cheated - we&amp;#39;d just take our lumps. If we didn&amp;#39;t we might cheat,
usually to see how far we could go and what we could get away with -
in all cases, to be honest, we worked hard to learn the material and
the cheating part was just a game - not so much trying to get answers
we needed on tests but more, can we communicate information undetected
during an exam.&lt;/p&gt;
&lt;p&gt;
So, what do we do?&lt;/p&gt;
&lt;p&gt;
Some teachers take a hard line but I&amp;#39;m not comfortable with
this. Repercussions for cheating are harsh and can range from a slap
on the wrist which isn&amp;#39;t worth it to failing a course or even
expulsion. Those last two are pretty big and I&amp;#39;ve known in my life a
number of people who were falsely accused of academic dishonesty. I&amp;#39;d
rather miss a few of the cheats rather than punish the innocent.&lt;/p&gt;
&lt;p&gt;
I usually will let it slide unless I know 100%. I&amp;#39;ll take certain
measures to limit cheating as outlined in my earlier linked post but
more of my efforts are to create a positive environment - encourage
collaboration with attribution - try not to overburden students with
gratuitous work - make it okay to &amp;#34;fail&amp;#34; so long as you eventually get
to where you need to go and so on. Of course, it&amp;#39;s not perfect. I&amp;#39;m
still in a system that gives letter or number grades and everything
has to settle down to a grade by end of term. I&amp;#39;d like to think that
the culture I push minimizes cheating but you can&amp;#39;t really know.&lt;/p&gt;
&lt;p&gt;
In any event, there really is some truth the old line &amp;#34;you&amp;#39;re only
cheating yourself.&amp;#34; At least in CS. If a student cheats through a
class, they&amp;#39;ll likely not take the next one. So what, they got one
undeserved A grade. In the greater scheme of things it&amp;#39;s not going to
make a difference. If they don&amp;#39;t learn the material, they&amp;#39;re not going
to get the job and even if they do, they won&amp;#39;t be able to do the job
and, well, if they can do the job, then maybe what they cheated on
wasn&amp;#39;t so important after all.&lt;/p&gt;
&lt;p&gt;
Now, it&amp;#39;s true that we do have to try to minimize cheating - hopefully
by creating a positive culture because the majority of students DO
have to learn the basics and we can&amp;#39;t have everyone cheating through
everything but I really don&amp;#39;t think that&amp;#39;s an issue. For me, it&amp;#39;s try
to make the environment conducive to not cheating and then not worry
about it too much.&lt;/p&gt;
&lt;p&gt;
One last note is that while I try to do this, I do get irked when a
student cheats and I really get irked when students try to &amp;#34;work the
system&amp;#34; to get grades they don&amp;#39;t deserve. I try to remind myself that,
as the saying goes &amp;#34;it&amp;#39;s not personal, it&amp;#39;s just business&amp;#34; and I think
that&amp;#39;s a good thing for all of us to remember. To fix this, we have to
fix root causes and while movements like ungrading, if not taken to
far, can really help, I&amp;#39;m not sure that things will improve much in
the short term.&lt;/p&gt;
&lt;p&gt;
With all this said, stay tuned for related thoughts on chatGPT.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Finally some down time</title>
      <link>https://cestlaz.github.io/post/down-time/</link>
      <pubDate>Fri, 30 Dec 2022 11:56:52 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/down-time/</guid>
      <description>&lt;p&gt;
Since entering end of term grades I&amp;#39;ve finally had a few days of legit
down time. It&amp;#39;s been a long time. In the past few years, I went right
from Fall finals int dealing with whatever issues arose around
planning the next teacher ed cohort.&lt;/p&gt;
&lt;p&gt;
Not so this year. The three classes I&amp;#39;m teaching are the same as last
year so while I&amp;#39;ll be doing a lot of tweaking, planning, and updating
once we get started, there&amp;#39;s not much to do now. For the teacher ed
cohort, I&amp;#39;m advocating starting our next one in the Fall so again,
nothing to do for a while.&lt;/p&gt;
&lt;p&gt;
So, what have I been doing with this newly freed time? One thing I&amp;#39;ve
gotten to do is a bit more painting - something I decided to pick up
during the pandemic - something to get me off computer screens for a
while. I&amp;#39;m just a beginner but I&amp;#39;m enjoying it and making progress.&lt;/p&gt;

&lt;img  width=&#34;200&#34; height=&#34;200&#34; src=&#34;https://cestlaz.github.io/img/down-time/one.jpg&#34;/&gt;
&lt;img  width=&#34;400 height=&#34;400&#34; src=&#34;https://cestlaz.github.io/img/down-time/two.jpg&#34;/&gt;
&lt;img  width=&#34;200 height=&#34;200&#34; src=&#34;https://cestlaz.github.io/img/down-time/three.jpg&#34;/&gt;
&lt;p&gt;
Another thing I&amp;#39;ve been doing is getting back to some
programming. Nothing huge but it&amp;#39;s something I haven&amp;#39;t done in a
while. Last December (2021) I did a few &lt;a href=&#34;http://adventofode.com&#34;&gt;Advent of Code&lt;/a&gt; problems -
basically the easier ones at the start of the month that I could knock
out quickly. I stopped when the end of semester crush got bad. Same
thing this year. In between, I didn&amp;#39;t write a line of code. That&amp;#39;s not
entirely true - I wrote some small snippets for my classes but I don&amp;#39;t
really count that sinces it was all variations on things I&amp;#39;ve written
a hundred times already.&lt;/p&gt;
&lt;p&gt;
Since the semester ended, I&amp;#39;ve been able to go back and finish off a
couple of &amp;#34;harder&amp;#34; problems and also dive in to a couple of of other
small projects. One, a tool to automate some GitHub work and another a
Slack bot to make emoji polls. This got me back to dealing with web
code, working through OAuth and a few more little things. I did all of
that in Clojure but also got back to playing a bit with Rust.&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t think it&amp;#39;s absolutely necessary for CS teachers to write
programs in their spare time but for many CS teachers, and certainly
for me, there are a lot of benefits. On the practical side, it helps
me keep up with current technologies. When I started teaching, there
was no web. Then HTML. Soon after Perl was king along with CGI. Later,
Javascript brought us Ajax. Fast forward and we&amp;#39;re using things like
React. All very different technologies and all require different
approaches. Even if I&amp;#39;m not teaching web development, keeping current
also keeps me current in good development practices, architecting
projects and other aspects of coding through which I can help my
students.&lt;/p&gt;
&lt;p&gt;
If I&amp;#39;m exploring with contest problems like Advent of Code, I&amp;#39;ll learn
new algorithms and experiment with data structures - also something
that helps me as a teacher.&lt;/p&gt;
&lt;p&gt;
Of course these are pretty obvious and on the surface. Another HUGE
benefit is it helps place me in to the students mindset. When working
on new projects, one has to find resources and information on the
web. Learn new libraries, tools, and techniques, and of course
DEBUGGING!!!!!!!&lt;/p&gt;
&lt;p&gt;
Since I&amp;#39;m retiring from Hunter at the end of the Spring, I fully
expect to continue to be able to dedicate some time to
programming. After all, even though I plan to work to help transition
Hunter to the next guy I expect that to be less taxing than if I were
to continue to be the guy.&lt;/p&gt;
&lt;p&gt;
Programming, reading, and other personal professional development is
really important to teachers. I lost that time over the past couple of
years, but prior, at Hunter I had it. The real shame is that K12
teachers are rarely given the time and I think their students are worse
off as a result.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Some Professional Development Is Worthwhile</title>
      <link>https://cestlaz.github.io/post/some-pd-is-worthwhile/</link>
      <pubDate>Wed, 26 Oct 2022 16:29:50 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/some-pd-is-worthwhile/</guid>
      <description>&lt;p&gt;
No, I&amp;#39;m not walking back anything from &lt;a href=&#34;https://cestlaz.github.io/post/why-pd-wont-do/#disqus_thread&#34;&gt;my last post&lt;/a&gt;. I still think
we have to stop using professional development as the primary means
for preparing CS teachers but I wanted to take a minute to make it
clear that while there&amp;#39;s plenty of lousy PD out there, there&amp;#39;s also
plenty of good stuff.&lt;/p&gt;
&lt;p&gt;
For bad PD, it&amp;#39;s frequently mandated and frequently neither useful or
relevant or even if its potentially relevant, but the time it becomes
useful you don&amp;#39;t remember it.&lt;/p&gt;
&lt;p&gt;
For good, first we look to our fellow teachers. A couple of years ago
at SIGCSE, they released the results of a survey of CS educators - I
think it was limited to colleges but the results were both expected
and interesting. It turned out that the majority of respondents
considered the best resource to improve their teaching practice to be
techniques learned from other teachers. I believe first it was in
department and then in external meetings but I could be wrong. &amp;#34;The
research,&amp;#34; on the other hand, was way down the list.&lt;/p&gt;
&lt;p&gt;
PD delivered by colleages is the best and can happen at all levels. A
teacher might not be a CS ace nor may they be very experienced but
they can run a session on something they tried and how it worked (or
didnt&amp;#39;) and I&amp;#39;ll take that any day over something from a &amp;#34;thought
leader.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Of course, back to yesterday&amp;#39;s post, you can&amp;#39;t prepare a CS teacher
that way - you can take a teacher and add trick, a technique, a
practice, or a topic.&lt;/p&gt;
&lt;p&gt;
Great stuff for what it is when used appropriately.&lt;/p&gt;
&lt;p&gt;
Every time we would have those school wide required PDs, we&amp;#39;d all look
at the offerings and seek out the good stuff being delivered by our
fellow teachers.&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s another class of PD that can also be excellent although,
again, it&amp;#39;s not a replacement for full teacher preparation. That&amp;#39;s
when some group goes in and isn&amp;#39;t trying to &amp;#34;train the teachers from
scratch to proficient&amp;#34; but rather understands that they&amp;#39;re delivering
a limited experience. This might be to expose a new audience to CS on
an introductory level or a non specialist on how they can deliver a
starter set of CS experiences or it could be something deeper but
it&amp;#39;ll be focussed on growing the teachers tool set and knowledge base,
not on delivering some set scripted experience.&lt;/p&gt;
&lt;p&gt;
This type of PD seems to frequently be delivered by researchers and
can be excellent stuff. It can also be delivered by content providers.&lt;/p&gt;
&lt;p&gt;
Finally, content providers can and do deliver worthwhile PD as long as
its taken in the right context. If you&amp;#39;re a knowledgeable CS teacher
you might love some provider&amp;#39;s curriculum and their training can be
the best way to go. Nothing inherently wrong here as long as the
training is not the actual teacher prep.&lt;/p&gt;
&lt;p&gt;
One of the best places for all of these types of PDs are at
conferences like the CSTA conference and that conference has
historically had the best of all versions of PD.&lt;/p&gt;
&lt;p&gt;
So, there it is, I&amp;#39;m not down on PD but I recognize that there&amp;#39;s a lot
of garbage PD to go with a lot of good stuff. The problem and the
danger is that it&amp;#39;s too often used as a replacement for real teacher
prep.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Don&#39;t give away the punchline</title>
      <link>https://cestlaz.github.io/post/punchline/</link>
      <pubDate>Fri, 21 Oct 2022 15:42:24 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/punchline/</guid>
      <description>&lt;p&gt;
Commenting on my post on teaching some &lt;a href=&#34;https://cestlaz.github.io/post/same-old-topics/&#34;&gt;Software Engineering&lt;/a&gt; concepts,
there was a comment on code review and that code.org now included it
in their CS-A curriculum. I found &lt;a href=&#34;https://www.youtube.com/watch?v=dWddHWU3_YM&#34;&gt;this video&lt;/a&gt; but no other materials. I
was thinking that I certainly hoped that the video was not being used to
introduce code review to students. I mean the video is fine and
probably great to show to teachers so that they&amp;#39;ll have some idea on
what code review is and why it&amp;#39;s important. For students, it would be
giving away the punchline too early.&lt;/p&gt;
&lt;p&gt;
There are times when you, as a teacher, have to directly instruct
students and there are times when just seeing a good practice is
sufficient but code review isn&amp;#39;t one of them. Why do I feel that way?
Because I&amp;#39;ve seen code review in the wild. Sure, some, and I&amp;#39;d hope
many professionals take it to heart but I know too many cases where
testing and code reviews are afterthoughts. People click okay based on
reputations or cursory glances or often based on deadlines and don&amp;#39;t
take the time to really review code.&lt;/p&gt;
&lt;p&gt;
For students to buy into code review, they have to really see why it&amp;#39;s
important and useful.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s somewhat like teaching version control, which I do with Git and
GitHub. I teach it early because I use it as a means of distributing
and collecting software but truth be told, students don&amp;#39;t really buy
into the program. They only &amp;#34;get&amp;#34; version control later on when it
saves their bacon. I haven&amp;#39;t cracked the nut of making version
control meaningful early on but I think I have done a pretty good job
with code review (&lt;a href=&#34;https://cestlaz.github.io/post/code-review-2/&#34;&gt;old post&lt;/a&gt;, &lt;a href=&#34;https://cestlaz.github.io/post/code-review/&#34;&gt;other old post&lt;/a&gt;) and it involves having
them do some activities before revealing what we&amp;#39;re really doing or
giving them the punchline.&lt;/p&gt;
&lt;p&gt;
Sometimes you&amp;#39;ve got to give the info up front but sometimes you want
to set up exploration, discussion, and discovery. Most teachers know
this but not all. I remember three years ago, we had our first CS
teacher cohort. We started with 22 teachers but one dropped after the
first week. That one teacher insisted that we tell them everything
that was coming up in detail. I explained that we could share some
things in advance but giving away the punchline would lessen their
experience and how much they got out of the program. A couple of days
later they were gone. The other 21 bought in and together we had a
great program.&lt;/p&gt;
&lt;p&gt;
So, most teachers get it, but not all. On the other hand I&amp;#39;m not
convinced that most content providers get it. Yes, they&amp;#39;ve heard all
the buzzwords but I&amp;#39;m not convinced that most of them have really
experienced educators (let alone CS educators) driving their ships, I
mean, it is a profession where it takes decades to become a master
teacher and to me, 5 to 10 years is really advanced beginner to
intermediate and I don&amp;#39;t think you really master your craft util
around 20 and that&amp;#39;s only if you continue to work at it.&lt;/p&gt;
&lt;p&gt;
Some people might push back on that last paragraph but if you&amp;#39;re a
5-10 year teacher, as yourself this - do you expect to stay the same
and not get any better for the rest of your career or do you expect to
continue to grow and get better. If you do expect to grow than what
you will become will be the master teacher version of yourself. If you don&amp;#39;t expect to grow,
you&amp;#39;re probably in the wrong business.&lt;/p&gt;
&lt;p&gt;
Anyway, I digress.&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t know what materials code.org put together for their whole code
review unit. If the video is intended to show at the start or if
they&amp;#39;ve got something more developmental but it got me thinking about
our craft, how it&amp;#39;s important to give the right information at the
right time, to guide but not to give away the punchline until the time
is right.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Good class day today</title>
      <link>https://cestlaz.github.io/post/good-day-in-class/</link>
      <pubDate>Thu, 13 Oct 2022 14:59:22 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/good-day-in-class/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been in something of a teaching funk for much of the
semester. Don&amp;#39;t get me wrong, I think things are going pretty well
with the classes but I don&amp;#39;t feel like I&amp;#39;ve had my &amp;#34;A game.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Part of it, I think is because of the relaxed mask policy. Hunter is
masks optional and in their infinite wisdom, last year replaced the
signs that said &amp;#34;Masks required&amp;#34; with signs that say &amp;#34;Masks &lt;strong&gt;NOT&lt;/strong&gt;
required.&amp;#34; I&amp;#39;m in two overcrowded rooms - one of them, in fact has a
capacity lower than my class size and I have some imunocompromised
people in my life that I&amp;#39;d like to be able to safely see not to
mention my own health. At the beginning of the semester, I requested
for these reasons that in the classroom people wear masks. Most did
and most do but a few didn&amp;#39;t and won&amp;#39;t and a few decided it wasn&amp;#39;t
important any more after a few weeks.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s typical that a few cases like this can really bring the tone down
but I think that&amp;#39;s affecting me more than anything else.&lt;/p&gt;
&lt;p&gt;
In any event, in spite of this, today was a good day. In particular, I
got a boost from my second class. I started my lesson on writing a
program to &lt;a href=&#34;https://cestlaz.github.io/posts/2014-01-07-rot13-gateway/&#34;&gt;decode a Caesar cipher&lt;/a&gt;. It wasn&amp;#39;t exactly the same as the
post. Today we started with a lot of internet history and culture -
&lt;a href=&#34;https://en.wikipedia.org/wiki/ROT13&#34;&gt;rot13&lt;/a&gt;, Usenet news, and the first public dialup Unix system on the
internet the &lt;a href=&#34;https://en.wikipedia.org/wiki/The_Big_Electric_Cat&#34;&gt;Big Electric Cat&lt;/a&gt; run by my old schoolmates and friends,
Charles Foreman, Robert Sweeney, Lee Fischman, and Richard Newman.&lt;/p&gt;
&lt;p&gt;
We moved from there to starting to develop ideas behind finding a
similarity score between two things based on the distance formula. I
now that sounds like a weird topic jump but it made sense in context.&lt;/p&gt;
&lt;p&gt;
More to come in the next few classes.&lt;/p&gt;
&lt;p&gt;
After class in the halls I heard mutterings from students on how they
thought it was a really cool lesson. Made me feel pretty good.&lt;/p&gt;
&lt;p&gt;
My earlier class wasn&amp;#39;t particularly cool but it also went
well. Mostly students sharing work. First part had them in groups and
sharing solutions from the past weeks lab with other group
members. The second part was more interesting and more fun. I had them
look at each others solutions without discussion and then had group
members explain and otherwise talk through other group members
solutions. So, for example, in a four person group, group member A
might chose question 3 from group member B&amp;#39;s repo and then teach that
solution to the full group of four.&lt;/p&gt;
&lt;p&gt;
I think was a productive exercise and time well spent. It&amp;#39;s important
to get them to share solutions and to be able to understand other
peoples code so this was a step in the right direction.&lt;/p&gt;
&lt;p&gt;
So, that&amp;#39;s it today. Nothing really deep, just sharing a good day in
the classroom.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CoTeaching - learning from colleagues</title>
      <link>https://cestlaz.github.io/post/co-teach/</link>
      <pubDate>Thu, 28 Jul 2022 12:49:50 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/co-teach/</guid>
      <description>&lt;p&gt;
A few weeks ago I wrote on how &lt;a href=&#34;https://cestlaz.github.io/post/workshop-a-lesson/&#34;&gt;you can&amp;#39;t workshop a lesson&lt;/a&gt;. Besides
the slow feedback loop, teachers largely work alone. Between classes,
teachers might have a small bit of time to collaborate and bounce
around ideas but with a HS teacher typically having 5 classes a day +
professional assignment there&amp;#39;s not a lot of time.&lt;/p&gt;
&lt;p&gt;
CS teachers typically have it worse as they might be the only CS
teacher in their building. My hope is that this current cohort of
Hunter CS Ed students, like earlier cohorts form their own support
network but that&amp;#39;s not what I&amp;#39;m writing about today.&lt;/p&gt;
&lt;p&gt;
As you know, for the past month I&amp;#39;ve been working my CS Teacher
certification program. We&amp;#39;ve got close to 60 participants. This means
we were able to engage 2 teachers per class. Truth be told, I&amp;#39;ve got a
great team and the whole crew is supporting each other in all of the
classes, not just the one they&amp;#39;re teaching.&lt;/p&gt;
&lt;p&gt;
The end result is that we&amp;#39;re all working harder but we also get to
teach together and, in fact, at least partially workshop our lessons.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m loving it because the one thing I really miss teaching at Hunter
is my teaching team. I&amp;#39;m the only person doing what I do at Hunter so,
just like so many other CS teachers, I&amp;#39;m on an island.&lt;/p&gt;
&lt;p&gt;
When Sam was talking about run time analysis, he had a really nice way
of exploring the run time of the n^2 sorts. I think I do a pretty good
job when teaching this but I loved the way Sam developed and
communicated the topic. Likewise, he did a unit on Expression Trees
which was very different from my approach to trees. We had plenty of
time before he did these units to discuss them and afterwards to
debrief. I&amp;#39;m 100% stealing some of this when they come up in my
classes.&lt;/p&gt;
&lt;p&gt;
Not to just be a taker, Sam really liked the way I introduced and
developed linked list and will be stealing that from me on his next
iteration.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s being able to work with other teachers like this that makes
running the summer program special. On the other hand, the workload is
far to great to be sustainable. This is also the kind of thing that
teachers should be given the time to do. Giving teachers time to work
together in their schools is worth so much more than the professional
developments that schools usually offer and require.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m hoping that the program participants, in addition to the core
material in our classes are also reflecting on how each of the
instructors are running parts of the classes. Not saying that we&amp;#39;re
hitting everything out of the park but a fair and careful analysis of
how we teach a subject and comparing it with what they do can provide
an extra layer of development beyond what&amp;#39;s formally in the classes.&lt;/p&gt;
&lt;p&gt;
We&amp;#39;d actually highlight this more had the state not decided, in their
infinite wisdom that we couldn&amp;#39;t merge our CS and CS Ed classes. We
did that for cohort 1 and it was extremely effective.&lt;/p&gt;
&lt;p&gt;
In any event, it&amp;#39;s been a very full month with a couple more days to
go but thought this was something worth shareing about now.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Yes, deadlines do matter</title>
      <link>https://cestlaz.github.io/post/late-assignments/</link>
      <pubDate>Tue, 17 May 2022 08:28:56 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/late-assignments/</guid>
      <description>
&lt;p&gt;
I&amp;#39;ve been seeing a few threads lately talking about the virtues of
allowing students to hand in assignments late. Not just late but
pretty much whenever they want. This attitude seems to be related with
things like mastery or specification grading, which I believe in but
it&amp;#39;s not the same thing.&lt;/p&gt;
&lt;p&gt;
The threads start with someone saying that assignments shouldn&amp;#39;t have
deadlines or some variant and the thread proceeds with a bunch of
people chiming in as to why a teacher who actually enforces deadlines
is an inhuman monster.&lt;/p&gt;
&lt;p&gt;
Nonsense.&lt;/p&gt;
&lt;p&gt;
Now, before I dive in, I do think that a teacher should have some
flexibility with deadlines but allowing students to hand in anything
at any time is probably not a good idea in most cases and any teacher
or self styled educator who proudly proclaims that deadlines in all
cases are evil should just step off their soap box and maybe look more
into their own teaching practice. Of course, the teacher that likewise
says strict to the minute deadlines with no flexibility should do the same.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s look at both sides.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Advantages of no deadlines
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The push here is that students have things going on outside of school
and an arbitrary deadline doesn&amp;#39;t account for this. Particularly over
the past couple of years students have had to contend with all sorts
of difficulties that could be unique or semi-unique to them or at
least they hit at different times.&lt;/p&gt;
&lt;p&gt;
The other push is that students might get certain concepts at
different times so a student might not be able to finish something
when originally assigned but could very well have mastered the concept
by the end of the term.&lt;/p&gt;
&lt;p&gt;
Finally, there&amp;#39;s the thought that those most susceptible to missing
deadlines are the most in need of support. &lt;/p&gt;
&lt;p&gt;
I agree with these issues and do feel that some deadline flexibility
is warranted or at least some mechanism to mitigate a missed deadline
or two or a bad grade and I certainly agree with the idea that the
important thing is that the student gets it at the end and not
necessarily that they get it when first introduced.&lt;/p&gt;
&lt;p&gt;
That said, the idea of largely or wholly eliminating deadlines just
doesn&amp;#39;t fly.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Why deadlines matter
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The usual first response is that having no deadlines rewards bad
behavior. This can be true but it really depends on circumstances. On
the other hand there are some legit reasons for deadlines.&lt;/p&gt;
&lt;p&gt;
A big one is snowballing - some courses are compartmentalized. The CS
topics course I just taught was. Each unit was independent so in
theory any could be completed at any time. Here the snowballing is
just the overall amount of work. If completing one assignment say,
every two weeks is a challenge for a particular student, imagine when
they let the deadlines slip and then have to complete 6 at once.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s worse though in courses that do build. I taught data structures
last semester. You can&amp;#39;t build your linked lists without understanding
your pointers and you can&amp;#39;t build an open hash table without those
linked lists. If you can&amp;#39;t do the pointers you&amp;#39;re going to really be
at a loss for those other topics. This means making sure a student
&lt;strong&gt;can&lt;/strong&gt; successfully master what&amp;#39;s needed by the dealine &lt;strong&gt;is&lt;/strong&gt; important
and not arbitarary.&lt;/p&gt;
&lt;p&gt;
Another reason is that, in spite of the no-deadline crowds
contentions, deadlines &lt;strong&gt;do matter&lt;/strong&gt; in the real world. You&amp;#39;re not
getting on that plane once the door at the gate closes. Likewise, I&amp;#39;m
sure you&amp;#39;d be pretty unhappy if your house burned down because the
fire department had to finish their dinner before heading over to put
out the blaze. Also, try getting into college if you miss the
application deadline. &lt;/p&gt;
&lt;p&gt;
Usually, deadlines are more flexible and the penalties for missing
them are less severe but they do indeed exist. If you miss a client
deadline you might lose the client, if you don&amp;#39;t pay your bills,
eventually the collectors will come for you. &lt;/p&gt;
&lt;p&gt;
Even without the penalties there&amp;#39;s also a matter of respect - not just
for the teacher but also for your classmates. Putting aside the legit
reasons for missing deadlines, some students will indeed either be
lazy on not focused or might just be taking advantage of a more
lenient teacher. This student is then given more attention from the
teacher - since teacher time is limited, that&amp;#39;s going to be at the
expense of the other students - not fair and not cool. If the reason
for missing a deadline is legit, then no problem but as we all know
there are plenty of people who&amp;#39;ll take advantage of any system that
lets them.&lt;/p&gt;
&lt;p&gt;
Another big reason for deadlines that&amp;#39;s never talked about is that
many students want and/or need them. Over my 30+ years as a teacher,
I&amp;#39;ve tried strict deadlines, no deadlines and everything in between. I
can&amp;#39;t tell you how many students have told me that they needed
deadlines to keep them on task and in fact, deadlines with internal
targets to meet helped even more. &lt;/p&gt;
&lt;p&gt;
Finally, one has to consider the teachers workload and schedule. It&amp;#39;s
time to drop the &amp;#34;hero teacher&amp;#34; bit. Teachers &lt;strong&gt;should&lt;/strong&gt; have a work
life balance and that means not being available to handle student
issues 24/7. I hate grading and it takes me a lot of time and
effort. When I grade, I set up my systems to be efficient and I get
into a grading groove. If a student hands in something late, even with
a good reason, it breaks my flow and takes me much longer and also
ties me up in other ways. Sure, if I taught at an &amp;#34;elite&amp;#34; private
school and only had a dozen kids in a class I could make all sorts of
accommodations but when you teach 5 of 34 every day somethings got to
give. The teacher also has their own deadlines - students must know
this or that before the AP or standardized test and of course the big
deadline - getting those grades in.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
What do I do?
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
So, where do I ultimately fall on this? I do believe in deadlines but
I believe in some flexibility. I also like to have enough information
on my students so that by the end of the term I can assess them even
if one or two things are missing.&lt;/p&gt;
&lt;p&gt;
Are my deadlines hard? Not really - anyone can ask for an extension
but my two requirements are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;They have to have shown that up to the request they&amp;#39;ve tried to
make some headway on the project. This is easy since I use Git and
GitHub so I can just log at their logs.&lt;/li&gt;
&lt;li&gt;They speak to me about the extension before the deadline and by
this I mean as soon as there might be an issue, not the evening
before the project is due. I encourage them to speak to me even if
they think there might be an issue to get my okay and then, more
often than not, they don&amp;#39;t use the extension.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Some teachers don&amp;#39;t like the fact that I require that the student
actually talk to me about an extension and that they do it in what I
consider a timely manner but I think at some point the students must
advocate for themselves.&lt;/p&gt;
&lt;p&gt;
So, how does it work for my classes? I think pretty well. I&amp;#39;ll take
almost any reason - sickness, family event, lots of other things due,
something&amp;#39;s unclear or almost anything else. We discuss it and come up
with a fair extension. I usually ask &amp;#34;what do you need&amp;#34; in terms of
time, resources, and in some cases help and then I try to give that
plus a cushion.&lt;/p&gt;
&lt;p&gt;
So, what do you think? Are you part of the no deadline crowd? What am
I missing? Got other strategies and techniques? Let&amp;#39;s hear them as
well.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Rubrics for teacher observations are garbage</title>
      <link>https://cestlaz.github.io/post/observation-rubrics/</link>
      <pubDate>Wed, 09 Feb 2022 12:12:26 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/observation-rubrics/</guid>
      <description>&lt;p&gt;
There have been a lot of bad ideas foisted onto educators over the
course of my career. One of the ones that always pissed me off was the
use of a rubric for teacher observation. Specifically, using the
Danielson Framework. &lt;/p&gt;
&lt;p&gt;
The Danielson Framework is a LONG laundry list of topics and concepts
and for each a teacher could be rated ineffective, developing,
effective, or highly effective.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s garbage.&lt;/p&gt;
&lt;p&gt;
Sure, there are some good things in the framework but using a
restrictive rubric to judge a teacher is just a bad idea. Even the
frameworks creator, Charlotte Danielson publicly stated when this
nonsense got started that the framework should not be used to evaluate
teachers. Of course departments of education would give a nod nod
wink wink and say &amp;#34;no, it&amp;#39;s not for evaluation, it&amp;#39;s for teacher
improvement.&amp;#34;&lt;/p&gt;
&lt;p&gt;
I remember talking to a colleague at Stuy. She hated the Danielson
Framework that was being forced on teachers for observations. She was
known to be a strong teacher but according to Danielson, she was off
the charts good. She reason she hated it was because she recognized
that her teaching style just happened to map well to the framework du
jour and eventually it would be a different rubric and she would no
longer be good.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve actually seen this happen - teachers going from good to bad or
the reverse based on an observation rubric. The teacher didn&amp;#39;t change,
nor the students but change the rubric and you can get the results you
want. Good, or more frequently bad, I mean it was then Governor Cuomo
who said that his teacher evaluation metric was clearly no good
because too many teachers were scoring well.&lt;/p&gt;
&lt;p&gt;
Why am I bringing this up? Because student teachers. My CS Education
Masters program is about to have it&amp;#39;s first graduates and New York
State will have it&amp;#39;s first two newly certified CS teachers with said
degrees. They&amp;#39;re both finishing up our program with a last course (CS
Topics) and student teaching. Both of our student teachers will have
to be officially observed three times and ultimately I&amp;#39;ll have to rate
them and enter those ratings into Hunter&amp;#39;s system.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m ranting on Danielson because Hunter uses said framework to
evaluate its student teachers. Like an institution, Hunter&amp;#39;s a complex
beast and there&amp;#39;s both good and bad but seeing what is essentially the
Danielson framework being used to evaluate student teachers knocked
them (us) down a peg in my book.&lt;/p&gt;
&lt;p&gt;
Now, from a top down approach, using something like Danielson makes
sense. It gives a series of check boxes making things easy to measure
even if they&amp;#39;re the wrong things. It also made sense back when it came
to be because of the leadership model espoused by people like Michael
Bloomberg where he would take young teachers with a year or two of
experience and make them principals. A horrible idea which persists to
this day. Traditionally, an AP or P would have decades of teaching
under their belt. They knew what a good lesson looked like. Not
Bloomberg era principals. I mean, it takes a dozen years before you&amp;#39;re
really an intermediate stage teacher. A two year principal doesn&amp;#39;t
have a chance nor a clue.&lt;/p&gt;
&lt;p&gt;
The bottom line is that good (and bad) teaching is so varied and
nuanced that you can&amp;#39;t boil it down to a rubric. All you can say are
things like look for questioning, engagement etc..&lt;/p&gt;
&lt;p&gt;
My approach to observations was set by my first supervisor at Seward
Park High School. He was a master teacher. Just ask him. Unlike many
APs who just teach honors or the top level class, he would rotate
classes among his entire department. He would teach everything from
calculus to remedial math. He&amp;#39;d say &amp;#34;those kids deserve me too.&amp;#34; Yeah,
he was arrogant, but he really was a master teacher. He was also great
if he liked you but a horror if he didn&amp;#39;t. Fortunately, he liked me.&lt;/p&gt;
&lt;p&gt;
He said that the one thing you have to keep asking yourself when you
observe a class is &amp;#34;is learning happening.&amp;#34; It&amp;#39;s that simple. Then,
it&amp;#39;s up to you as the observer to figure out where, how and why and
what you can suggest to make it better (while observing the cardinal
rule of not fixing the lesson). This makes all the sense in the world
to an experienced educator and it allows them to hone in on an
observee&amp;#39;s strenghts and weaknesses while also adjusting for the class
and circumstances.&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;ve got good observers and trust them, it works and works very
well.&lt;/p&gt;
&lt;p&gt;
What don&amp;#39;t work? Detailed rubrics by non teachers.&lt;/p&gt;
&lt;p&gt;
Unfortunately, right now, this is just another idiotic idea that
teachers are forced to deal with and just another thing driving
teachers away from the profession.&lt;/p&gt;
&lt;p&gt;
Will the powers that be ever learn? Probably not so for now it&amp;#39;s up to
good supervisors to shield their teachers from the nonsense and I
hope, in my capacity, when I&amp;#39;m able I can do the same.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>When is remote better</title>
      <link>https://cestlaz.github.io/post/whats-better-remote/</link>
      <pubDate>Fri, 28 Jan 2022 08:13:17 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/whats-better-remote/</guid>
      <description>
&lt;p&gt;
With my first classes of the semester coming up on Monday I thought
I&amp;#39;d write a bit about what worked better remote than in person. When I
say better I mean specifically, worked better for me given my
situation. I think they worked better for the class but I can&amp;#39;t say
with any certainty given the length of the educational feedback loop
and other factors.&lt;/p&gt;
&lt;p&gt;
My in person teaching situation is as follows. Last semester I taught
2 in person classes (plus one remote). Both were in computer
labs. Minimal distance between the kids. Everyone had to have set
assigned seats and masks had to be on at all times. As the instructor,
I was allowed to remove my mask but I never would.&lt;/p&gt;
&lt;p&gt;
So, here we go.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
feeling safe
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Big one. Remote felt safer. It doesn&amp;#39;t really matter if it was safer
or not. This is a case of perception being reality. Since I felt less
safe - particularly at the start of the year before the students were
vaccinated, I can say for sure that I wasn&amp;#39;t as effective. If the
students didn&amp;#39;t feel safe I&amp;#39;m sure their learning also took a hit.&lt;/p&gt;
&lt;p&gt;
For all the dings on remote teaching, we all felt safe.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
participation
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
In my personal opinion, my classes last semester went from what I hope
were good classes to not so good lectures. Since students wore masks
and don&amp;#39;t project their voices in any case, student participation was
really tough. It would turn into asking students to repeat their
answers multiple times and to project louder and louder. It didn&amp;#39;t
help that windows had to be open and we&amp;#39;re in the heard of NYC with
all the associated street noise.&lt;/p&gt;
&lt;p&gt;
Now, remote participation is no great shakes. It&amp;#39;s really easy for a
student to just tune out but at least it was possible. Students could
be called on or could volunteer and between the Zoom and our Zulip
chat, there were far more opportunities for students to be involved.&lt;/p&gt;
&lt;p&gt;
Now, once we&amp;#39;re safe and mask free, in class will probably be better
than remote for this but for now, I can&amp;#39;t say that it is.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Group work
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Group work in person was pretty much impossible. Even though there was
little distancing between the students, they had to stay in their
assigned locations. On Zoom we had breakout rooms and on our Zulip,
group chats. In normal times, in person would blow away remote but
something reasonable on zoom and zulip was far better than nothing in
person.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
Working with individuals / small groups
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
I also couldn&amp;#39;t really work well with individual students (or small
groups if we were able to set them up). Online I could do a breakout
visit or an individual or group chat. Again, something being better
than nothing. The one place where in person was better is that, while
it was limited, I could eaves drop on the kids - look over while they
worked. It was limited because I didn&amp;#39;t want to get too close and also
for the reasons cited above but it was something. Can&amp;#39;t do that with
Zoom. Interestingly enough, Big Blue Button - an opensource Zoomalike
does have an eavesdrop on breakout rooms feature as it&amp;#39;s made for
teachers but last I checked the overall platform was not quite ready
for prime time.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
Polls
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Another big win for remote was the use of the Zulip chat. Emoji polls
replicate the use of a clicker but with more power and flexibility and
less overhead.&lt;/p&gt;
&lt;p&gt;
You can also give a question and have them all type a response but
not hit  the &lt;strong&gt;enter&lt;/strong&gt; key. The can then all post at once. You can do
similar things with hand signals in class but this is much more
flexible and robust. Big win.
.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-6&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
Discussion of student work
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-6&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Finally, the chat platform gave us the ability to discuss more
student&amp;#39;s work. Typically, in class you can only look at one or two
student solutions for a given problem but using the chat, you can
stretch out the discussion. A typical strategy is to have  everyone
post their initial answer/response/whatever and then over the course
of time have each student comment on at least two other student
posts. Yes, this has it&amp;#39;s kinks but it&amp;#39;s a nice way to get more
students to look at more other student&amp;#39;s work.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-7&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
Takeaways
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-7&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
At the beginning of last semester, I felt that we should have at least
started online - particularly with the students potentially
unvaccinated. Looking back, I think it would have been better
overall.&lt;/p&gt;
&lt;p&gt;
Truthfully, the ideal would have been to do remote until students were
vaccinated then allow professors to mix and match as best suits their
classes.&lt;/p&gt;
&lt;p&gt;
If we ever get past this and back to regular old school in person
classes, sure, that beats remote for instruction overall but remote
does have it&amp;#39;s moments. On top of that, good remote can beat crippled
in person and sometimes there are other good reasons for a remote
option such as why I want my teacher prep program to remain online.&lt;/p&gt;
&lt;p&gt;
So, there it is. Where I think remote teaching outshone in person for
me over the last year. As a college istructor I have more flexibility
than a K12 teacher so can mix in remote practices that I feel work
better. I&amp;#39;m hoping that over time those that set the K12 structure
would make it similarly possible at that level.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Turning a good class into a bad lecture</title>
      <link>https://cestlaz.github.io/post/inperson-update/</link>
      <pubDate>Tue, 28 Sep 2021 08:11:34 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/inperson-update/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been teaching in person for about a month now so I thought I&amp;#39;d
give a quick update on how it&amp;#39;s going. I&amp;#39;ve written before about my
feelings on how Hunter started the semester (TL;DR - I was very
displeased) but that&amp;#39;s not the point of this post. As of today, I
believe every student has been required to be stabbed at least once
and on October 11, all students must be fully vaccinated to be on
campus.&lt;/p&gt;
&lt;p&gt;
So, off to the report. Going in person sounds great but now that I&amp;#39;m
doing it, I&amp;#39;m having second thoughts. Let&amp;#39;s leave safety precausions
out of it, I&amp;#39;m having second thoughts just in terms of how the current
situation and related restrictions have affected my teaching.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the low down. Students are supposed to wear masks at all
times and I wear mine as well. We&amp;#39;re supposed to socially distance but
that&amp;#39;s not possible given class and classroom sizes. Students are also
supposed to keep the same seed all the time, ostensibly for contact
tracing should anyone test positive.&lt;/p&gt;
&lt;p&gt;
To start, day one in person was important - I still haven&amp;#39;t met my
students from last year in person and I&amp;#39;d really like to. This years
students, at least I&amp;#39;ve seen all their foreheads.&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s actually an issue. At least for me, the masks make it MUCH
harder to know my students. Can&amp;#39;t get to know a face when you can&amp;#39;t
see two thirds of it and names are going to be even harder for me.&lt;/p&gt;
&lt;p&gt;
Online, at least for those who put on cameras, we could at least see
each others full faces and expressions. Zoom doesn&amp;#39;t carry the same
nuance as in person but neither does a masked face.&lt;/p&gt;
&lt;p&gt;
The masks have another negative. You can&amp;#39;t hear anyone. I do my best
to actively project but students rarely do. This leads to me having
students repeat themselves multiple times and I also have to adopt a
conference speaker approach of repeating and projecting what the
student said so everyone can hear. This absolutely kills interactive
discussion and even question answer chains. It really pushes a lesson
more towards a lecture which, well, sucks.&lt;/p&gt;
&lt;p&gt;
The social distancing and keeping seats also negatively impact the
environment. I can&amp;#39;t get in with my students like I usually do. Even
when in lecture mode, I&amp;#39;ll move to different locations of the room for
a variety of reasons - that&amp;#39;s pretty much out. I also can&amp;#39;t just get
in close to support students. Likewise, group work can&amp;#39;t happen in the
same way. They can kind of sort of work with their direct neighbor but
I can&amp;#39;t have them work with each other as I&amp;#39;d do under normal
circumstances. &lt;/p&gt;
&lt;p&gt;
Don&amp;#39;t get me wrong. I won&amp;#39;t compromise safety for convenience but the
safety protocols do a good job in turning a good class into a bad
lecture. &lt;/p&gt;
&lt;p&gt;
Online is also lousy in many ways but as long as the students are
willing you can all see each others faces and you can do all sorts of
interesting groupings and group work. I think my code review lesson
worked pretty much as well and maybe even better online last year than
it did in person the year before but I&amp;#39;m really at a loss on how to do
it as effectively in person in a few weeks with the safety
precautions.&lt;/p&gt;
&lt;p&gt;
Ideally, I&amp;#39;d like the freedom to mix and match. We were in person week
one, but let me decide when we&amp;#39;ll be in person and when we&amp;#39;ll be
remote. Let me use the best platform for any given lesson. This would
be a bit of a drag on the students depending on how their instructors
scheduled things but if students could use the rooms that they&amp;#39;d be in
person for as locations to work remote from it wouldn&amp;#39;t be too bad.&lt;/p&gt;
&lt;p&gt;
As usual, the ideal would be to trust the teacher and let them do
what&amp;#39;s best for their students but as we all know, that&amp;#39;s never the
way. Regardless, the interesting thing to me is that while I was
clamoring for a safe in person return, the truth is, given sensible
safety precautions, in person might just not be the best way to go. At
least not all the time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Memorable Lesson (at least for one student)</title>
      <link>https://cestlaz.github.io/post/a-memorable-lesson/</link>
      <pubDate>Fri, 10 Sep 2021 13:31:22 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/a-memorable-lesson/</guid>
      <description>&lt;p&gt;
Back to calling an audible.&lt;/p&gt;
&lt;p&gt;
Around seven years ago I was visiting with some former students at
Google in Mountain View. One of them from way back in the late 90s,
Pawel, out of the blue said there was one lesson I taught that was
particularly memorable. Not memorable in the &amp;#34;that was fun&amp;#34; way like
maybe my Halloween adventures but memorable in that he felt he got a
lot more out of it than a normal lesson. Pawel mentioned a few of the
things he still remembered about a lesson he saw over two decades
earlier. &lt;/p&gt;
&lt;p&gt;
It was, in fact, one of the first big CS audibles that I can
remember calling. &lt;/p&gt;
&lt;p&gt;
It was second semester APCS - probably right after the AB exam. I
guess I&amp;#39;d been teaching around seven years so I&amp;#39;d classify myself as
an advanced beginner. I also hadn&amp;#39;t done any serious programming and
problem solving since I started teaching.&lt;/p&gt;
&lt;p&gt;
Was I a fraud?&lt;/p&gt;
&lt;p&gt;
Impostor syndrome was creeping in.&lt;/p&gt;
&lt;p&gt;
Back then I had a bunch of students who participated in the &lt;a href=&#34;http://usaco.org/&#34;&gt;USACO&lt;/a&gt; and
would discuss the programming from their competitions. While I talked
a good game, I started to wonder if I could back it up. Should I
really be telling these kids about best practices for problem solving
ad programming if I just talked the talk and couldn&amp;#39;t walk the walk?&lt;/p&gt;
&lt;p&gt;
To test myself, I decided to work through some of the competition problems. I figured
that I didn&amp;#39;t have to be able to solve the hardest of the hard ones
since only the best of the best solved in that stratosphere but if I
should be able to solve or at least approach most of the advanced
problems.&lt;/p&gt;
&lt;p&gt;
After some problem solving and coding I felt much better about
myself. I wasn&amp;#39;t living a lie.&lt;/p&gt;
&lt;p&gt;
I particularly liked the Digit Pals problem. Question 4 from the
1996-1997 &lt;a href=&#34;https://www.angelfire.com/ca2/lorddave/usa974.html&#34;&gt;National Championship&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
Fast forward to class a few days later. Early in the period, for some
reason, I wasn&amp;#39;t happy with where things were going so I decided to
totally change directions. I decided I&amp;#39;d do a lesson that was
basically a walkthrough of my problem solving and coding process for
Digit Pals.&lt;/p&gt;
&lt;p&gt;
I started by looking at the problem, working through example and then
some of the things we discussed included:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;data representation (2D array)&lt;/li&gt;
&lt;li&gt;the high level logic of removing a digit pal (recursive flood fill)&lt;/li&gt;
&lt;li&gt;the high level logic of sliding down and over&lt;/li&gt;
&lt;li&gt;how to solve the whole thing.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the overall solver, I decided to go with a straightforward, blind,
recursive search. I figured it would be fast enough for two
reasons. First, I figured that since, if you remove the digit pal at
any location, it&amp;#39;s the same as removing that pal from any of it&amp;#39;s
locations so that there would likely be many many solutions and
second, there was a line in the problem statement saying that your
solution might not work on large cases. In any event, when all was
said and done and they released the test data, my solution worked
within time constraints.&lt;/p&gt;
&lt;p&gt;
After the design phase, I went to the live coding with a focus on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;compiling and testing every concept. That is, a single loop, a
single if, a function etc.. This may sound excessive but I&amp;#39;ve been
doing this forever and it&amp;#39;s served me well as a hobbyist and as a
professional.&lt;/li&gt;
&lt;li&gt;Implementing the data structure first - a 2D array and then a way
to print it so that I could always tell the state of my program.&lt;/li&gt;
&lt;li&gt;incremental development - first remove a pal, then slide down, then
over, then the solver.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When it was all over the problem was solved. I&amp;#39;d like to think that
the students got something out of the audible. I learned years later
that at least one student did. As a teacher, I also got a lot out of
it. That day might not have been my first live coding lesson but it&amp;#39;s
the earliest one I remember. It was all impromptu but it got me
thinking more deeply about how I approach problem solving and
programming as well as how to teach both. Even all the little things
like my compulsive compiling and testing.&lt;/p&gt;
&lt;p&gt;
Funny - I have no idea what I was originally going to teach that day
but that audible turned into both a lesson I&amp;#39;ve repeated many times
as well as concrete techniques that I&amp;#39;ve used over and over through
the years.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Should every assignment be open ended?</title>
      <link>https://cestlaz.github.io/post/creative-projects/</link>
      <pubDate>Sun, 05 Sep 2021 06:43:53 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/creative-projects/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://blog.acthompson.net/2021/09/are-you-assigning-projects-or-recipes.html&#34;&gt;This post&lt;/a&gt; by my friend &lt;a href=&#34;https://twitter.com/alfredtwo&#34;&gt;Alfred&lt;/a&gt; caught my eye yesterday. It&amp;#39;s a good
post - some good examples of inserting student creativity even into small
intro level assignments. While I like the post and agree with the
sentiment of open ended, student driven projects, I had to take issue
with the lead quote Alfred used: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“If you assign a project and get back 30 of the same thing, that’s not
a project, that is a recipe.”&lt;/p&gt;
&lt;p&gt;
– Chris Lehmann&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Open ended projects and student driven assignments are great and
important but so are ones with similar or identical solutions and
they&amp;#39;re also not recipes.&lt;/p&gt;
&lt;p&gt;
First, there&amp;#39;s a certain level of utility in a uniform assignment. If
the assignment is &amp;#34;write a program to convert Fahrenheit to Celsius&amp;#34;
you know that all the students know the conversion as you can provide
it and it also allows them to easily check their work, either through
an autograder or with each other. Yes, I know, some students students
could be tempted to cut corners and copy solutions but usually
attempts to control cheating do more to constrain students doing
things the right way than to prevent the cheaters from cheating.&lt;/p&gt;
&lt;p&gt;
Also, some student, particularly early on need the structure of a set
assignment and don&amp;#39;t do as well with a &amp;#34;do anything assignment.&amp;#34;
Saying &amp;#34;just make a converter&amp;#34; can be much more stressful and
difficult than convert from pounds to kilograms.&lt;/p&gt;
&lt;p&gt;
As to recipes? Not necessarily. Let&amp;#39;s take this small assignment:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Given two variables &lt;strong&gt;a&lt;/strong&gt; and &lt;strong&gt;b&lt;/strong&gt;, write a code fragment that will swap
the values represented by &lt;strong&gt;a&lt;/strong&gt; and &lt;strong&gt;b&lt;/strong&gt;. That is, if at the start, &lt;strong&gt;a&lt;/strong&gt;
represented &lt;strong&gt;5&lt;/strong&gt; and &lt;strong&gt;b&lt;/strong&gt; represented &lt;strong&gt;10&lt;/strong&gt;, after your code, &lt;strong&gt;a&lt;/strong&gt; would
represent &lt;strong&gt;10&lt;/strong&gt; and &lt;strong&gt;b&lt;/strong&gt; would represent &lt;strong&gt;5&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You could even add a hint:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;HINT:&lt;/strong&gt; Consider using an extra third variable in your solution.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This isn&amp;#39;t a recipe, it&amp;#39;s an assignment. Even with the hint it doesn&amp;#39;t
tell the students exactly what to do, just the desired outcome. It&amp;#39;s
not a recipe but most or all of the solutions will look remarkably
similar.&lt;/p&gt;
&lt;p&gt;
By contrast, a swap &amp;#34;recipe&amp;#34; might read:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a new variable named &lt;strong&gt;extraBucket&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Assign the value currently in &lt;strong&gt;b&lt;/strong&gt; to &lt;strong&gt;extraBucket&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Assign the value currently in &lt;strong&gt;a&lt;/strong&gt; to &lt;strong&gt;b&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Assign the value currently in &lt;strong&gt;extraBucket&lt;/strong&gt; to &lt;strong&gt;a&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This is a recipe. A student would literally just rewrite the steps
into the solution but even this might have it&amp;#39;s place in a class.&lt;/p&gt;
&lt;p&gt;
A more advanced assignment that leads students through building and
understanding something like a merge or quicksort could be set up
similarly. Not in any way a recipe but rather a valuable exercise
where all the students end up with very similar solutions. This is not
necessarily a bad thing, in fact it was all the rage a few years ago
as it could be set up as a discovery or experiential learning
experience. I also poo pooed that as being the silver bullet but as
with most teaching techniques, it has its place. &lt;/p&gt;
&lt;p&gt;
Then there are opportunities to introduce student creativity even when
the assignments are, at their core, all the same. I recall a session
at either SIGCSE or CSTA by &lt;a href=&#34;https://www.bootstrapworld.org/&#34;&gt;Bootstrapworld&lt;/a&gt;. They were describing one
of their classes major projects. It was a game. I forget the details
but at the core, all the student projects were the same. They differed
only in the graphics they used and the story around the game. That&amp;#39;s
where Boostrapworld interjected student creativity but the core CS and
math of the student projects were all the same. Did the fact that all
the assignments were essentially the same make this bad or a recipe?
Certainly not. Students go to express themselves uniquely but at the
same time the assignment was constrained and focused on what the
Bootstrapworld designers wanted.&lt;/p&gt;
&lt;p&gt;
So, there you have it. There&amp;#39;s nothing wrong with assignments where
the student results are largely the same. There&amp;#39;s also nothing wrong
with student projects that are 100% open ended. It&amp;#39;s all about the
teacher having multiple tools and using them as appropriate for their
students. &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Calling an audible</title>
      <link>https://cestlaz.github.io/post/audible/</link>
      <pubDate>Thu, 02 Sep 2021 13:48:09 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/audible/</guid>
      <description>&lt;p&gt;
Be ready to call an audible.&lt;/p&gt;
&lt;p&gt;
This was advice I got during my third year teaching. I had just
transferred from Seward Park to Stuy and was being observed for the
first time by my former teacher and now supervisor Richie
Rothenberg. I forget exactly what the lesson was on - something with
coordinate geometry I think. The lesson was okay but it wasn&amp;#39;t going
over well with the class. I was teaching at too low a level for my
audience. I could feel it as I was teaching but as I was pretty
inexperienced I wasn&amp;#39;t confident in changing things up on the fly.&lt;/p&gt;
&lt;p&gt;
Afterwards, Richie and I debriefed. He said the lesson was
satisfactory - the magic word you need on any observation but that it
could have been much better. I had only been teaching at Stuy for a
few weeks and even though I was a Stuy grad I hadn&amp;#39;t had time to get
my head around where the students were at. Richie said that sometimes
you just have to call an audible. For a young teacher, easier said
than done. In addition to not having a great handle on my students yet
I also wasn&amp;#39;t confident in flying without a net. &lt;/p&gt;
&lt;p&gt;
This is why it&amp;#39;s so important for teachers to really know their
stuff - both the content and how to teach it. It&amp;#39;s why I&amp;#39;m concerned
when I see so many leaders in CS education pushing scripted curricula
and PD based training to fully &amp;#34;prepare&amp;#34; CS teachers in just a few PD
sessions.&lt;/p&gt;
&lt;p&gt;
First time through, particularly when you&amp;#39;re voluntold to teach a new
class you just want to survive. Follow that script, learn with your
kids and get through. You&amp;#39;ll grow and the kids will be richer than had
you not gone through the fire with them.&lt;/p&gt;
&lt;p&gt;
Two or three years down the road, however, if you&amp;#39;re still just
following the script you&amp;#39;re doing your students a disservice.&lt;/p&gt;
&lt;p&gt;
Of course, having subject knowledge doesn&amp;#39;t mean you have all the
answers but it lets you call that audible when a class needs something
that is not in the lesson plan or lets you talk about multiple
positions on subjects with no single best answer like coding style.&lt;/p&gt;
&lt;p&gt;
And then calling an audible isn&amp;#39;t always about making a lesson more
advanced. It can also be about sensing what a class needs at that
time. This is something I learned from Bruce Baskind at Seward
Park. I&amp;#39;ve lost touch with Bruce but he was a mentor and a friend when
I started this teaching thing and without the support I got from Bruce
and a handful of others back at Seward, I wouldn&amp;#39;t have made it.&lt;/p&gt;
&lt;p&gt;
Sometimes, you&amp;#39;ve got to turn off the academics. A class might need a
team building exercise or maybe just something fun. They might just
need to turn off school for part or all of the period. Sure, you burn
a lesson but sometimes that&amp;#39;s what the kids need and at the end of the
semester, they&amp;#39;ll be further along for it. I&amp;#39;d sometimes take a block
of class time and do Story Time - literally right out of grade
school - usually something from &lt;a href=&#34;https://www.personal.psu.edu/faculty/k/u/kuc14/sunny/Children%20Literature/The%20stinky%20cheese%20man/stinky%20cheese%20man.pdf&#34;&gt;The Stinky Cheese Man&lt;/a&gt; like &amp;#34;The Really
Ugly Duckling.&amp;#34; In some ways it&amp;#39;s related to the &lt;a href=&#34;https://www.youtube.com/playlist?list=PL9KxKa8NpFxJYgovyJhF4HZRsAqYKBLiG&#34;&gt;Halloween Stuff&lt;/a&gt; I
used to do at Stuy. Those were preplanned but that was all about
relationship building with the class - the non academic stuff that
supports the academics the rest of the year.&lt;/p&gt;
&lt;p&gt;
As this post is beginning to wander I think I&amp;#39;ll stop.&lt;/p&gt;
&lt;p&gt;
Next up - a specific audible I called that, at least for one student,
turned into a very memorable lesson.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day one back in person</title>
      <link>https://cestlaz.github.io/post/day-one-in-person/</link>
      <pubDate>Fri, 27 Aug 2021 06:46:11 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/day-one-in-person/</guid>
      <description>&lt;p&gt;
Yesterday was my first day of in person teaching since early
March 2020. It was,… interesting.&lt;/p&gt;
&lt;p&gt;
I was looking forward to actually seeing my  students in person but as
I mentioned in my &lt;a href=&#34;https://cestlaz.github.io/post/32-years/&#34;&gt;last post&lt;/a&gt;, i wasn&amp;#39;t comfortable given Hunter&amp;#39;s
current COVID policy and Delta.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll be happier come mid October when 100% of students on campus will
be vaccinated but at least for now, mask compliance is high. I only
had to talk to one student in a hallway to remind him to put his mask
back on and the only other non-masked person was a staff member (too
far away for me to address) who had it under her nose.&lt;/p&gt;
&lt;p&gt;
In class distancing was not possible at all and I wasn&amp;#39;t happy with
that and this will certainly cause me stress for the next couple of
months.&lt;/p&gt;
&lt;p&gt;
The positives? Actually meeting my students. I went through all of
last year not seeing any of them in person and in fact have only met
one face to face so far. That was just a couple of weeks ago at an
event we both attended. That was great. Even with cameras on there&amp;#39;s
no comparison with what you can pick up and communicate through body
language remote vs in person. Just not the same. A secondary positive
were the low-tech tools. I haven&amp;#39;t found a Zoom based whiteboard
solution that I like. There&amp;#39;s something to be said for a whiteboard
that&amp;#39;s up all period that can be modified not only by me but by other
members of the class along with the projected screen.&lt;/p&gt;
&lt;p&gt;
What about the negatives? In addition to the general health questions,
both physical and mental there were a few other things I noticed. Day
one for me is always more lecture oriented. I have to give them a lot
of material - policies and procedures, syllabus information,
etc.. That&amp;#39;s not to say that the students aren&amp;#39;t involved at all but
my first day classes are usually ones where I talk more and they talk
less. When I talk, I like to roam the room. Move to different
locations - get their eyes on different parts of the room with
different students. It&amp;#39;s a small thing but something that makes a
difference. I couldn&amp;#39;t comfortably do that. Similarly, when they were
working, I wasn&amp;#39;t comfortable with my traditional circulation
routine - given that we don&amp;#39;t know students vaccine status, I didn&amp;#39;t
want to get in close with them. This also reinforces my question from
my last post about student collaboration and group work. These are
things that actually work better remotely. Breakout rooms are flawed
but they&amp;#39;re something and you can&amp;#39;t really do groups in a small
classroom while keeping distant.&lt;/p&gt;
&lt;p&gt;
What&amp;#39;s next? As I said at the top, I&amp;#39;ll be more comfortable come mid
October when we&amp;#39;re all vaxxed. Until then, I&amp;#39;ll take it a day at a
time. I&amp;#39;ll probably schedule some of our classes to be remote
regardless of policy if I think that the remote tools make more sense
for a particular session.&lt;/p&gt;
&lt;p&gt;
Gonna take it one class at a time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>\(2^5\) Years Teaching</title>
      <link>https://cestlaz.github.io/post/32-years/</link>
      <pubDate>Sat, 21 Aug 2021 13:02:56 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/32-years/</guid>
      <description>&lt;script type=&#34;text/javascript&#34;
  src=&#34;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&#34;&gt;
&lt;/script&gt;
&lt;p&gt;
I was looking over my TRS statement the other day - that&amp;#39;s Teacher&amp;#39;s
Retirement System and noticed that next week I&amp;#39;ll be starting my 32nd
year teaching. That&amp;#39;s \(2^5\) or 10000 - 5 bits so I guess you can&amp;#39;t
call me a two bit teacher.&lt;/p&gt;
&lt;p&gt;
Two and a half years at Seward, over 20 at Stuy, and the rest at
Hunter College. I&amp;#39;ve had a lot of last days before school starts but
this year is different. I&amp;#39;m betting that&amp;#39;s the case for a lot of us.&lt;/p&gt;
&lt;p&gt;
I mentioned about burnout and not feeling any joy when I wrote about the
&lt;a href=&#34;https://cestlaz.github.io/post/no-csta2021/&#34;&gt;CSTA conference&lt;/a&gt; but we&amp;#39;re also starting a new year in a strange place
due to the pandemic. On the one hand we have vaccines but on the
other, we&amp;#39;ve got Delta. I&amp;#39;m scheduled to teach my undergraduate
classes in person and to be honest, I&amp;#39;m not 100% comfortable. Will
that affect my teaching? I guess we&amp;#39;ll see.&lt;/p&gt;
&lt;p&gt;
Then we have practical concerns. My students should all be distancing
so how will that affect group work?&lt;/p&gt;
&lt;p&gt;
As I&amp;#39;m writing this I just got an email from Hunter saying that
students will have 45 days post FDA approval to get vaccinated. The
wording seems to contradict the previous policy that in order for
students to enter campus they had to be vaccinated. This is concerning
to say the least.&lt;/p&gt;
&lt;p&gt;
When I started teaching I was always nervous before the first day back
and then again for the first day teaching. Mid career it was more of
an excited nervousness. Ultimately the nerves went away and while I
sorely needed vacation in June by September I was looking forward to
seeing my students again. This year it&amp;#39;s mostly nervousness, discomfort and
uncertainty. &lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t write this merely to complain but rather to share. I figure if
I&amp;#39;m feeling this way so probably are others. We&amp;#39;re not alone.  &lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve got some CS and teaching content posts lined up and plan to start
with them next week as things get back in the swing but for now, good
luck to everyone starting back up.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why it takes so long to become a better teacher</title>
      <link>https://cestlaz.github.io/post/feedback-loop/</link>
      <pubDate>Fri, 06 Aug 2021 06:54:15 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/feedback-loop/</guid>
      <description>&lt;script type=&#34;text/javascript&#34;
  src=&#34;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&#34;&gt;
&lt;/script&gt;
&lt;p&gt;
I&amp;#39;ve written about how long it takes to become a &lt;a href=&#34;https://cestlaz.github.io/post/five-year-class/&#34;&gt;master teacher&lt;/a&gt; and
that even after 9 or 10 years most teachers are really just advanced
beginners. A big reason for that is our long feedback loop. You do
something and you can&amp;#39;t do it again for a year.&lt;/p&gt;
&lt;p&gt;
I was listening to a podcast on my morning run by the Hudson River and
something came up about differences between quantities of items. The difference
between having n versus n+1 of something changes based on the value of n. If, for example, you have 1 versus 2 shoes - that&amp;#39;s a BIG
difference. On the other hand, if you have 100 vs 101 shoes, not so
much.&lt;/p&gt;
&lt;p&gt;
This got me thinking about how I framed things when teaching
big-O notation. In big-O you generally just look at the dominant
term. If you have an algorithm that runs in \(O(n^2+n)\) time you
usually just say \(O(n^2)\) because \(n^2\) is the dominant term. If you n
is small, let&amp;#39;s say 2, the difference between 2 and 4 is big so the n
part of \(n^2+n\) seems important but as n gets large, say 10,000, then
the difference between 100,000,000 and 100,010,000 is negligible for
our purposes.&lt;/p&gt;
&lt;p&gt;
I try to introduce this concept when teaching big-O but listening to
the podcast and reflecting gave me some thoughts as to how I can do it
better.&lt;/p&gt;
&lt;p&gt;
The trouble is, I won&amp;#39;t be able to for a while. I introduced big-O to
our teachers in our summer intensive. My next opportunity to cover the
topic will be sometime this Spring with my first year undergrads. Same
topic, but different audience so it won&amp;#39;t be quite the same. The next
time I get to do this with teachers is next summer. All this supposes
that I remember the changes I&amp;#39;m thinking about making and work them
in. I&amp;#39;m writing myself a few notes but even then, who&amp;#39;s to say if I&amp;#39;m
going to remember the nuance that I&amp;#39;m thinking now?&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s the teaching feedback loop - get an idea, try it, and then
can&amp;#39;t iterate for a year. Get a new idea and you can&amp;#39;t try it until
the topics comes up which could be a long time from now.  True, some
things like a new pedagogical trick can be tried out more quickly but
even then you can&amp;#39;t just do it. You&amp;#39;ve got to find where it works
within your current classes and still have to account for the
countless differences that make up your classes when you&amp;#39;re ready for
the next iteration.&lt;/p&gt;
&lt;p&gt;
None of this is good or bad, just the nature of our profession. Just
something that I was thinking about this morning.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Computer Science is not (inherently) fun</title>
      <link>https://cestlaz.github.io/post/no-fun/</link>
      <pubDate>Thu, 01 Jul 2021 09:56:06 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/no-fun/</guid>
      <description>&lt;p&gt;
I saw a tweet the other day by a CS teacher. They were talking about
how much easier it is to teach CS because it&amp;#39;s fun.&lt;/p&gt;
&lt;p&gt;
They went on about how they get to create cool problems which makes it
so much easier to teach than other subjects.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve heard this a lot over the years particularly from teachers who
are into gaming - &amp;#34;CS is fun because you can create games.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Sorry but I have to disagree.&lt;/p&gt;
&lt;img width=&#34;300&#34; src=&#34;https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fmedia1.tenor.com%2Fimages%2F2394618fcb9a02e206f313155848d2d3%2Ftenor.gif%3Fitemid%3D5765989&amp;f=1&amp;nofb=1&#34;&gt;
&lt;p&gt;
Don&amp;#39;t get me wrong. I think CS is fun (and I&amp;#39;m not a game person) but
just because I find it fun doesn&amp;#39;t mean it&amp;#39;s inherently fun.&lt;/p&gt;
&lt;p&gt;
I used to think like those teachers posting but one day, early in my
career I was observed by my principal. She liked the lesson but
focused in on one thing. At one point I mentioned that we could use a
specific new technique and that it was &amp;#34;cool.&amp;#34; She asked me &amp;#34;why is it
cool?&amp;#34; and more importantly &amp;#34;why should it be cool for them?&amp;#34; That got
me thinking. It was cool to me for a variety of reasons but the truth
was that in a class of 30 high school students, what&amp;#39;s cool for one
person is probably not cool for everyone.&lt;/p&gt;
&lt;p&gt;
That observation stuck with me. Something that&amp;#39;s cool for some of us
isn&amp;#39;t for others. A teacher and some students might love making games
but it does nothing for me and for many students. Same thing for the
general building stuff or solving problems. The set of things that will and won&amp;#39;t
motivate students in a CS class is a large one indeed. Now, this
doesn&amp;#39;t mean don&amp;#39;t do, for instance, games but rather understand that your students
will have a wide range of interests so if you do a unit that focuses
on games, maybe do other things in your other units.&lt;/p&gt;
&lt;p&gt;
A second issue I have with the &amp;#34;CS is fun&amp;#34; thing is that it implies
that it&amp;#39;s all fun and games and not work. This is particularly a
problem transitioning from a CS0 to a CS1 class. If you don&amp;#39;t set up
the transition correctly students will find CS1 much more challenging
and harder and if it&amp;#39;s too hard or too challenging that&amp;#39;s not
fun. Besides, even if the class is fun, which should include being
challenging at the right level there will be times where things are
just not fun and that&amp;#39;s even with the best teacher. &lt;/p&gt;
&lt;p&gt;
The final thing that I find off putting about all the &amp;#34;computer
science is fun&amp;#34; posts. I think it&amp;#39;s unfair to other teachers and other
subjects. History can be tremendous fun - stories, adventures,
mysteries, predictions and more. It can be taught through traditional
lessons, role play, art music and the list goes on. English? That&amp;#39;s
also stories, adventures, mysteries etc.. Physics? How about show and
tell how the world works? To say we have the monopoly on fun is not
true and unfair. We currently don&amp;#39;t have the burden history which
strictly dictates what, how, and when we teach but we&amp;#39;re getting there
quickly.&lt;/p&gt;
&lt;p&gt;
The truth is that CS will be inherently fun for some just like any
other subject and the specifics of what and how a class is taught and
to whom can greatly influence the level of fun. A strong teacher who&amp;#39;s
passionate about games teaching a game development elective will
probably be fun for most or all participants but if it were a required
course, not so much.&lt;/p&gt;
&lt;p&gt;
CS is our field, we find it fun and interesting and we want to bring
our passion to our students. That&amp;#39;s all good but let&amp;#39;s remember that
it&amp;#39;s not special and we&amp;#39;re not special. The same can be said for other
subjects and other teachers and we have to remember that it&amp;#39;s not
about our passions but rather those of our students.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teaching Styles</title>
      <link>https://cestlaz.github.io/post/teaching-styles/</link>
      <pubDate>Tue, 20 Apr 2021 08:31:47 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teaching-styles/</guid>
      <description>&lt;p&gt;
My friend Emmanuel lamented over on Facebook on &amp;#34;Learning Styles,&amp;#34; or
more specifically on how it&amp;#39;s still given credence. We all chimed in
in agreement but not an hour later I saw a Twitter thread where
education thought leaders extolled the virtues of Learning Styles all
over again. I pointed out that it&amp;#39;s a great example as to why so many
teachers scoff at &amp;#34;the research&amp;#34; and &amp;#34;research backed practices.&amp;#34;
We&amp;#39;ve seen it all before. We&amp;#39;re told we have to teach one way or we&amp;#39;re
failures only to be told a few years later that we have to do
something else. It&amp;#39;s not necessarily the research (although I question
a good deal of what I&amp;#39;ve read) but also the interpretations and
implementations. There are just too many factors that are never
considered.&lt;/p&gt;
&lt;p&gt;
One factor that I&amp;#39;ve rarely seen mentioned but one I think about
frequently, particularly as I work with teachers is &amp;#34;teaching styles.&amp;#34;
I&amp;#39;m not talking about any deep science here but we know that teachers
are people and people have tendencies, strengths, weaknesses, and
preferences. These are factors that are so important to teaching but
rarely considered. It&amp;#39;s always &amp;#34;teach this way&amp;#34; and never what works
for you.&lt;/p&gt;
&lt;p&gt;
Think about how ridiculous that is. In what other field do we ignore
the individual strengths, tendencies and even comfort level of the
professional. In sports, we know that there are &amp;#34;player&amp;#39;s coaches&amp;#34; and
&amp;#34;disciplinarians&amp;#34; and players and teams might take better to one or
the other. Likewise, a coaches act can grow stale over time as the
team evolves. Similarly a great coach works their system to the
strengths of the players and doesn&amp;#39;t rigidly try to make players
conform to a system where they just don&amp;#39;t fit. Now that doesn&amp;#39;t mean
that a coach won&amp;#39;t try to develop a players weaknesses or try to move
towards their favored system but the greats look at the skills and
personalities of all involved. It also doesn&amp;#39;t mean that you can&amp;#39;t
evolve. Former NY Giants coach Tom Coughlin was a rigid
disciplinarian and almost lost the team and his job prior to their Super Bowl run
in 2007. He evolved - became more of a players coach. He didn&amp;#39;t change
his stripes. He was still a stickler for rules and details but he
brought in a new human dimension to his coaching game. &lt;/p&gt;
&lt;p&gt;
Back to teaching. &lt;/p&gt;
&lt;p&gt;
While you want teachers to have a large set of tools in the box they
are going to be better with some than with others. Of course you can&amp;#39;t
ignore the students and how they respond but it&amp;#39;s not a one way
street. Take my friend Jim. He&amp;#39;s one of the best two or three natural
teachers I know. I describe him as &amp;#34;the teacher I aspire to be.&amp;#34; He&amp;#39;s
amazing. Stylistically though he&amp;#39;s what I call traditional teacher
dominant. He presents, there are questions comments and answer, seat
work. Pretty old school stuff. He doesn&amp;#39;t fit the constructivist mold
nor the cooperative one but he&amp;#39;s the best. I remember talking to our
principal a number of years ago. They said &amp;#34;I can&amp;#39;t bring
superintendents and DOE officials to Jim&amp;#39;s class when they visit and
want to see what we&amp;#39;re doing. He&amp;#39;s great but they just wouldn&amp;#39;t
understand and we&amp;#39;d get a lower school rating.&amp;#34; He&amp;#39;s the best but he
doesn&amp;#39;t fit Danielson. Now before you give me the &amp;#34;but it doesn&amp;#39;t
count, he teaches at Stuy&amp;#34; I&amp;#39;ll share that prior to teaching at Stuy
he taught at an overall low performing neighborhood school and
experience notwithstanding, he was the best then too.&lt;/p&gt;
&lt;p&gt;
What makes Jim the best? He has his preferred style and he adjusts to
what his students need. He&amp;#39;ll take an assortment of tools out of his
belt - some discovery stuff here, some group work there but he&amp;#39;ll work
it in to augment his strengths rather than being something he&amp;#39;s not
and as a result being inauthentic.&lt;/p&gt;
&lt;p&gt;
For my part I too am traditional teacher dominant. I&amp;#39;m not anywhere
close to Jim&amp;#39;s level. I consider myself an above average in class
teacher who brings other things to the table and makes up for it with
honesty, sincerity, and loyalty. I&amp;#39;m 100% &lt;strong&gt;not&lt;/strong&gt; a Danielson teacher
nor am I a cooperative learning one which was all the rage when I
started my career. I&amp;#39;ll try to get new ideas and learn new techniques
and pick and choose and overall it&amp;#39;s worked pretty well.&lt;/p&gt;
&lt;p&gt;
All of this is to say that when teaching teachers or coaching them,
don&amp;#39;t try to turn them into you or into John Keating, Jaime Escalante,
or what have you (note to self, write up teacher movie rant some
day). Help them to look at who they are and what they bring to the
table. Mix that with the needs of their students and the cosntraints
of their teaching situation and help them to be the best they cab be.&lt;/p&gt;
&lt;p&gt;
Teaching styles, for lack of a better name is too frequently missing
from the education equation. It&amp;#39;s totally removed by those who want
scripted curricula and cookie cutter instruction and barely mentioned
anywhere else but teaching styles are an important component of great
teaching and I wish more people acknowledged this.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Deadlines And Commitments</title>
      <link>https://cestlaz.github.io/post/deadlines-and-commitments/</link>
      <pubDate>Thu, 01 Oct 2020 13:50:38 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/deadlines-and-commitments/</guid>
      <description>&lt;p&gt;
A few days ago I was part of a Twitter discussion on assignment
deadlines. I noticed a tweet:&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Not sure who needs to hear this, but stop taking off points for late assignments. It’s not helping students learn responsibility, and it’s not making your job easier. It’s only making your class inequitable. 💯&lt;/p&gt;&amp;mdash; Sydney Jensen (@sydneycjensen) &lt;a href=&#34;https://twitter.com/sydneycjensen/status/1309946435056611335?ref_src=twsrc%5Etfw&#34;&gt;September 26, 2020&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I disagreed. I wasn&amp;#39;t necessarily against floating or open deadlines
without deductions but rather, they made my life more difficult and
weren&amp;#39;t in the best interest of my students. That said, they could
very well be appropriate for Sydney and her&amp;#39;s.&lt;/p&gt;
&lt;p&gt;
Today I saw some emails on the SIGCSE list on the same topic. One
caught my eye - the poster talked about giving extra credit for early
submissions. These were likely unrelated discussions since the twitter
participants were not CS educators and I think the SIGCSE discussion
was mostly of college level CS instructors.&lt;/p&gt;
&lt;p&gt;
In any event, it was a sign. I was meant to write a blog post on it.&lt;/p&gt;
&lt;p&gt;
To start, what&amp;#39;s my policy?&lt;/p&gt;
&lt;p&gt;
For homework or small every day assignments I grade for attempt, not
correctness. You either made an honest effort or you didn&amp;#39;t. I
encourage students to help each other but ask they cite where and when
they got help. When all is said and done, if you&amp;#39;ve done most of the
homework you get the full homework percent of the grade. If you miss
one here or there, no big deal. If you miss a whole bunch, you&amp;#39;ve got
a problem. &lt;/p&gt;
&lt;p&gt;
For projects, I have hard deadlines with a deduction for lateness. If
time and circumstance permits, I&amp;#39;ll give a project and we&amp;#39;ll have a
discussion and set the due date together. Also, if a student talks to
me ahead of time about some issue, I&amp;#39;ll almost always give a penalty
free extension. On the other hand, if they come to me last minute, I
usually won&amp;#39;t.&lt;/p&gt;
&lt;p&gt;
When I grade, and I &lt;strong&gt;hate&lt;/strong&gt; grading, I get into a groove so grading a
project later does inconvenience me and it&amp;#39;s also not doing the
student any favors - we&amp;#39;ve moved on to the next set of topics but I
don&amp;#39;t have the project which is an assessment of how the student was
doing up to that point.&lt;/p&gt;
&lt;p&gt;
Is this bad? I don&amp;#39;t think so. While many deadlines are arbitrary,
students do have to learn to get things done and as long as the
deadline is reasonable there shouldn&amp;#39;t be a problem. Since I&amp;#39;m
flexible if a student has a particular issue even more so. One
tweet on the thread said that since some students aren&amp;#39;t comfortable
asking a teacher for an extension it was unfair but I think you have
to draw the line somewhere. One students might not ask for an
extension and just be late and another might not ask and kill
themselves to meet the deadline but in either case, I don&amp;#39;t think it&amp;#39;s
unreasonable to expect the student to advocate for themselves
particularly when they can start the conversation either in person or
via email and in private. &lt;/p&gt;
&lt;p&gt;
On the other hand, is having open deadlines all good? Probably
not. Some students will game and abuse the system. Not all, but
certainly some and those students will gain an advantage in terms of
grades. Now, in an ideal world. we wouldn&amp;#39;t care about grades but in
the current reality if student one gets a fair B+ while student two
exploits loose deadlines nad gets an A-, guess who&amp;#39;s more likely to
get into that selective college? There&amp;#39;s also the problem of
snowballing and falling behind. If a student is a week late on
something that reinforces or clarifies the next topic that student is
now falling behind on that next topic.&lt;/p&gt;
&lt;p&gt;
We also have the final looming deadline of end of semester or end of
year which further complicates matters. &lt;/p&gt;
&lt;p&gt;
So, who&amp;#39;s right? Who knows. Overall, I think what I do works for me
and my classes. It&amp;#39;s a system that&amp;#39;s evolved over three decades and
will continue to evolve. Every year is a potential tweak and every new
situation, like when I came over to Hunter was cause for
re-evaluation. On the other hand, I know teachers who have open
deadlines and it seems to work for them and their students so they
should keep on keeping on. &lt;/p&gt;
&lt;p&gt;
What about that extra credit for early projects? This is one that
sounds good but I don&amp;#39;t like it. I think this one is potentially
really inequitable. It sounds good until you remember that students
all have different schedules and different obligations. If you give
students one week to complete an assignment starting monday, even if
they all have roughly the same workload, it will be distributed in
different ways.&lt;/p&gt;
&lt;p&gt;
One kid might front load their courses into Mon-Wed so they don&amp;#39;t have
to commute Thursday and Friday. That student will never be able to
finish an assignment early because they&amp;#39;ve left there homework time
for later in the week. Same thing for a kid who works evenings rather
than weekends. There will be other kids where their schedule favors
finishing early. This sounds like a great idea but it will really only
favor a select few and not necessarily because they&amp;#39;re doing things
&amp;#34;the right way.&amp;#34; &lt;/p&gt;
&lt;p&gt;
So, what&amp;#39;s the answer on due dates? As usual we get a resouding &amp;#34;it
depends.&amp;#34; I just gave an assignment last Monday and over Zulip we
collectively decided that a fair deadline would be a week from
today. I don&amp;#39;t expect any extensions will be needed but if I&amp;#39;m
approached I&amp;#39;ll probably be flexible as I&amp;#39;ve always been. My policy
seems to be working well so I&amp;#39;m sticking to it for now. If yours works
for you, do the same.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Quarter Century Courses</title>
      <link>https://cestlaz.github.io/post/quarter-century-courses/</link>
      <pubDate>Tue, 15 Sep 2020 07:09:25 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/quarter-century-courses/</guid>
      <description>&lt;p&gt;
I was talking in our Curriculum Development class last week about the
courses I&amp;#39;ve created over the years. From the first computer graphics
course to the current teacher education courses. JonAlf pointed out
that we missed an &amp;#34;important&amp;#34; occasion last spring - the twenty fifth
offering of my computer graphics class at Stuy. I haven&amp;#39;t taught it in
almost 10 years but it&amp;#39;s been running continuously for a quarter
century since it first ran back in the mid 90s. Systems will hit that
mark this year and the intro course I designed a couple of years from
now.&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s pretty cool.&lt;/p&gt;
&lt;p&gt;
Looking back at all the courses I&amp;#39;ve designed and taught it&amp;#39;s
interesting to see what I got right, what I got wrong, and why. Some
courses evolved slowly over time. The intro course fits that bill. On
the other hand, Systems had a complete reboot a few years in and has
been reasonably stable since. Interestingly enough Graphics has
probably been the most stable over the years. That&amp;#39;s not to say that
it hasn&amp;#39;t been tweaked here and there but overall, it&amp;#39;s largely the
same now as it was a quarter century ago. It&amp;#39;s been re-evaluated many
times but it just turns out that when I was teaching it I felt that it
was still hitting the right notes and my successor seems to feel
similarly. &lt;/p&gt;
&lt;p&gt;
Funny because graphics was designed with the least thought of all of
my courses. I probably didn&amp;#39;t feel that way at the time, but it&amp;#39;s
true. I had only been teaching around 5 year - a beginner at best and
didn&amp;#39;t really know what I was doing. Even 10 years in you&amp;#39;re still an
advanced beginner in terms of teaching. Most teachers, if they don&amp;#39;t
burn out, hit there stride at 15 - 20 and after that become truly
experienced. &lt;/p&gt;
&lt;p&gt;
I basically created graphics because I was teaching 4 APCS/AB classes
and one geometry and &lt;strong&gt;hated&lt;/strong&gt; grading proofs!!!! I needed to create one
more CS class. I decided on graphics because I knew I could teach it
and thought the students might enjoy it. Systems was created using
similarly deep contemplations. I got better and spent much more time
and effort designing future courses.&lt;/p&gt;
&lt;p&gt;
For the graphics class I had a few choices to make but not many. The
students mostly only knew Pascal from APCS so the language wasn&amp;#39;t an
issue like it would become later on and since we were working on DOS
machines running Turbo Pascal there wasn&amp;#39;t any option to use any fancy
library like OpenGL. The course basically started with the ability to
draw a point and then went though: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;lines&lt;/li&gt;
&lt;li&gt;lines in 3D and 3D transformations&lt;/li&gt;
&lt;li&gt;polygons (triangles)&lt;/li&gt;
&lt;li&gt;A motion description language interpreter (stack and tree based
shape hierarchies)&lt;/li&gt;
&lt;li&gt;lighting and shading&lt;/li&gt;
&lt;li&gt;ray tracing&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The motion description language piece had an entire unit that was
really an intro to compilers / interpreters. &lt;/p&gt;
&lt;p&gt;
In retrospect, the course really did make sense. It was taught to
second term seniors so it was a terminal course. It combined the
programming, algorithms and data structures from APCS, math they
did in trig, precalc (and baby calc), and a bit of physics. It as also
project based and they wrote programs that made pretty pictures so
that helped stave off senioritis. &lt;/p&gt;
&lt;p&gt;
While the course has remained largely the same, there has been some
evolution. When Systems students started learning C we ended up
supporting that as well in graphics and now the course is more
language agnostic. We also played with topics and unit length. We
spend less time on the compiler piece now and treat that more like a
black box and have at times looked at additional topics like texture
mapping. There&amp;#39;s also been a good deal of work put in to safety nets
and scaffolding. When you have a course where the main assessment is
one BIG semester long project you&amp;#39;ve got to make sure students don&amp;#39;t
end up falling into a hole they can&amp;#39;t climb out of.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s not a surprise that the first couple of courses I designed -
graphics and systems were somewhat arbitrary. Graphics turned out to
be a solid design and just needed some fine tuning but Systems got a
complete reboot. Over the years, I learned more about curriculum
design and feel pretty comfortable designing new experiences now. Of
course, this is thirty years into my career as a teacher. &lt;/p&gt;
&lt;p&gt;
Maybe I&amp;#39;ll talk about the design of other classes here in the future
but for now, you can look at one of my first student&amp;#39;s graphics
project and read about it &lt;a href=&#34;https://cestlaz.github.io/post/class-legends/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34;
src=&#34;https://www.youtube.com/embed/Ca_8q3ct6J4&#34; frameborder=&#34;0&#34;
allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Multiple Cameras For Remote Teaching</title>
      <link>https://cestlaz.github.io/post/multiple-cameras-for-remote-teaching/</link>
      <pubDate>Sun, 30 Aug 2020 11:05:49 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/multiple-cameras-for-remote-teaching/</guid>
      <description>&lt;p&gt;
We used Zoom for remote classes over the summer but at this point,
I&amp;#39;ve also used &lt;a href=&#34;https://codingrooms.com&#34;&gt;Coding Rooms&lt;/a&gt;, &lt;a href=&#34;https://bigbluebutton.org&#34;&gt;Big Blue Button&lt;/a&gt;, and Google meet as
well. They each have their own strong points and failings but all are
limited in terms of sharing multiple cameras and screen
components. All will let you share your camera or share your screen
and when you share you screen you can either share it all or a single
window. Zoom is the only one that seems to allow for easy camera
switching but it&amp;#39;s still pretty clunky.&lt;/p&gt;
&lt;p&gt;
Why do I want to switch cameras? Because I can&amp;#39;t draw us ing a mouse or
touchpad. I&amp;#39;ve gotten myself a Wacom tablet but am still not
particularly proficient at it. &lt;/p&gt;
&lt;p&gt;
So, I got myself one of &lt;a href=&#34;https://www.amazon.com/gp/product/B000TTIP40/ref=ppx_yo_dt_b_asin_title_o00_s00?ie=UTF8&amp;amp;psc=1&#34;&gt;these&lt;/a&gt; to use as a document camera. It worked
but as I said, switching between the webcam and document camera was
clunky at best.&lt;/p&gt;
&lt;p&gt;
OBS to the rescue!!!!!&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://obsproject.com/&#34;&gt;OBS&lt;/a&gt; Studio is the &lt;a href=&#34;https://obsproject.com/&#34;&gt;Open Broadcaster Software&lt;/a&gt;. It&amp;#39;s a cross platform
streaming studio. You can set up any number of devices and then
compose them into scenes. I use it for recording my &lt;a href=&#34;https://cestlaz.github.io/stories/emacs&#34;&gt;Emacs&lt;/a&gt; videos. It&amp;#39;s
easy to set up devices for every camera you own plus monitors and
individual windows. It only took a minute or so to set up a scene with
me in the corner and my desktop: &lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/obs/desktop.png&#34;&gt;
&lt;p&gt;
One for my document camera: &lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/obs/doccam.png&#34;&gt;
&lt;p&gt;
And one for my desktop with the doccam overlayed.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/obs/mixed.png&#34;&gt;
&lt;p&gt;
I can switch between them by clicking on which I want. I can also
select a transition like fade. &lt;/p&gt;
&lt;p&gt;
This is all great for recording or streaming to a service like Twitch
but what about using with meeting software? It turns out that you can
set up OBS to act as a virtual camera. There are plugins for Mac and
Windows. You can find them by searching for them but for Linux, I
followed this video and it worked perfectly: &lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/Eca509IDLdM&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
I also found this video if the above one doesn&amp;#39;t work: &lt;a href=&#34;https://www.youtube.com/watch?v=zaJSkj-dLoI&#34;&gt;https://www.youtube.com/watch?v=zaJSkj-dLoI&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
I set up the virtual camera as per the video and then selected it as
the camera on both Zoom and Coding Rooms and it worked perfectly. It
should work on the other platforms as well. &lt;/p&gt;
&lt;p&gt;
This is HUGE. Now, instead of explicitly sharing my screen I can hacve
my screen as my image and quickly and easily switch over to another
window, a document camera or anything else. &lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re teaching remotely using a conferencing platform I recommend
you check this out.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Starting the new semester</title>
      <link>https://cestlaz.github.io/post/new-semester/</link>
      <pubDate>Fri, 28 Aug 2020 08:56:23 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/new-semester/</guid>
      <description>&lt;p&gt;
Thursday was the first day of the new semester. The big change was
that my classes were done remotely but there were also some other
differences. Other changes were that I only met one of my two CS
classes on Thursday. That&amp;#39;s my CS0. I&amp;#39;m also teaching a recitation for
CS1 which only meets once a week. I&amp;#39;ll see those students as well as
my CS0 students for a second time on Monday.&lt;/p&gt;
&lt;p&gt;
I opted to use &lt;a href=&#34;https://codingrooms.com/&#34;&gt;Coding Rooms&lt;/a&gt; instead of Zoom since Coding Rooms has a
nice built in REPL. We had a couple of students drop a couple of times
and I had to reload once but even that&amp;#39;s no worse than typical Zoom
performance. It&amp;#39;s funny how once one product becomes &lt;strong&gt;it&lt;/strong&gt; everything
that&amp;#39;s different is labeled as harder and whenever there&amp;#39;s a hiccup
it&amp;#39;s so much worse. The truth is, I&amp;#39;ve now used a bunch of platforms
and none is harder than the others - you just have to look to
different places. For example, in Zoom, you &amp;#34;raise your hand&amp;#34; by
clicking in one place and in Coding Rooms (or Big Blue Button)
another. Neither is inherently better - just different but people seem
to think that the non Zoom one is worse just because Zoom got so hot
so fast. Likewise, other platforms periodically drop people and crash
but so does Zoom. This is all a digression but it&amp;#39;s something that
bothers me. Zoom does some things really well but then again so do the
other platforms I&amp;#39;ve been playing with. So far, there&amp;#39;s no silver
bullet.&lt;/p&gt;
&lt;p&gt;
As you might imagine, class had a different feel. I think it went
pretty well but it&amp;#39;s certainly going to be harder to build a sense of
community. Since there was a good deal of class logistics to cover we
didn&amp;#39;t really get to play with the Coding Rooms REPL but I&amp;#39;ll report
on that soon. I&amp;#39;ll also mention that we&amp;#39;re going to see about using
&lt;a href=&#34;https://zulip.com/&#34;&gt;Zulip&lt;/a&gt; instead of Slack for chat both in class and out. Like Zoom,
Slack is the de facto standard but Zulip seems to have a few distinct
advantages: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It&amp;#39;s open source&lt;/li&gt;
&lt;li&gt;You can self host it (and it&amp;#39;s free if you self host)&lt;/li&gt;
&lt;li&gt;It&amp;#39;s built around threads so I suspect it will be easier to deal
with discussions both synchronously and asynchronously more easily.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The disadvantages are that there aren&amp;#39;t as many integrations, most
notably there&amp;#39;s no Giphy and it&amp;#39;s not the eponymous chat
platform. Note that it&amp;#39;s not that I don&amp;#39;t like Slack but was driven to
look for alternatives because I don&amp;#39;t have a budget and the free tier
has limited history and I believe integrations.&lt;/p&gt;
&lt;p&gt;
The other big change this semester involve our K12 CS teacher
certification program. Our summer cohort kicked off there next two
classes on Thursday afternoon and evening - Ethics in Computer Science
and Curriculum Development for CS. I designed both courses but am not
the official teacher. Topher and JonAlf who worked the summer with me
are each taking one but I&amp;#39;m going to be very involved. We also had
four students start in our Masters program. I&amp;#39;ll be writing about all
of this over the course of the school year.&lt;/p&gt;
&lt;p&gt;
Spent most of yesterday getting ready for Monday - setting up the
Zulip server, GitHub repos and GitHub classroom and the like. As
usual, I&amp;#39;m a slow starter but hopefully by mid next week will feel
like I&amp;#39;m in the swing of things.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Preparing CS Teachers - index post</title>
      <link>https://cestlaz.github.io/post/teacher-cert-index/</link>
      <pubDate>Tue, 11 Aug 2020 20:03:21 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-index/</guid>
      <description>&lt;p&gt;
Since we ended up with an eight post postmortem on our CS Teaching
Certificate summer intensive I thought I&amp;#39;d add add an index page. &lt;/p&gt;
&lt;p&gt;
Here are links to each post: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cestlaz.github.io/post/teacher-cert-recap-intro/&#34;&gt;Introduction - program overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cestlaz.github.io/post/teacher-cert-methods/&#34;&gt;On pedagogy - CS teaching methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cestlaz.github.io/post/teacher-cert-topics/&#34;&gt;Topics in Computer Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cestlaz.github.io/post/teacher-cert-methods-choosing/&#34;&gt;Deciding on which methods to teach&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cestlaz.github.io/post/teacher-cert-topics-curriculum/&#34;&gt;Commentary on selected CS topics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cestlaz.github.io/post/teacher-cert-tools/&#34;&gt;Tools for remote instruction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cestlaz.github.io/post/teacher-cert-community/&#34;&gt;Building a community of CS teachers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cestlaz.github.io/post/teacher-cert-successes-and-failures/&#34;&gt;The good, the bad, and what&amp;#39;s next&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also wrote a few posts as the summer intensive was running:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cestlaz.github.io/post/teacher-cert-week-1/&#34;&gt;Week 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cestlaz.github.io/post/teacher-cert-week-2/&#34;&gt;Week 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cestlaz.github.io/post/merge-over-zoom/&#34;&gt;An unplugged activity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
We start up again in a couple of weeks so look for more updates on the
program then.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Preparing CS Teachers - the good, the bad, and what&#39;s next.</title>
      <link>https://cestlaz.github.io/post/teacher-cert-successes-and-failures/</link>
      <pubDate>Tue, 11 Aug 2020 12:00:15 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-successes-and-failures/</guid>
      <description>&lt;p&gt;
Looking back, what worked and what didn&amp;#39;t?&lt;/p&gt;
&lt;p&gt;
Overall, things went very well. We were extremely happy with the
cohort&amp;#39;s growth and performance and based on feedback received they
were happy with the program so far. I&amp;#39;ll also say that while they&amp;#39;re
not finished yet, I can honestly say that every one of them would be a
boon to any school in the city in need of a CS teacher (but they&amp;#39;re
not available since they&amp;#39;re all already teaching CS at their
respective schools :-)). &lt;/p&gt;
&lt;p&gt;
Before we started we felt good about our combination our program -
designed by teachers for teachers. Strong pedagogy combined with deep
CS content. Now that we&amp;#39;re done with the summer, I think it&amp;#39;s safe to
say that both our design and implementation is sound. &lt;/p&gt;
&lt;p&gt;
That doesn&amp;#39;t mean the program was perfect. We lost one student along
the way. That was unfortunate but sometimes the fit isn&amp;#39;t there. There
are also a few things we&amp;#39;d like to tweak. &lt;/p&gt;
&lt;p&gt;
First, our &lt;a href=&#34;https://github.com/hunter-teacher-cert/pre-acceptance-prework&#34;&gt;pre-work&lt;/a&gt; - we required it due to the compressed nature of
the summer. Next time around it&amp;#39;s going to be available earlier and
with more support. &lt;/p&gt;
&lt;p&gt;
We also want to do a better job with early pacing but now that we&amp;#39;ve
had our first rodeo we can do that.&lt;/p&gt;
&lt;p&gt;
The one nut we haven&amp;#39;t cracked is that due to the teachers experience
combined with the pre-work there are some early learning / teaching CS
issues that didn&amp;#39;t and won&amp;#39;t come up naturally as the students are
beyond them before our first day. Things like issues that come up when
introducing variables or functions. We could just insert them as a
unit but that breaks the class flow. I&amp;#39;m still noodling that one but
for now they&amp;#39;re probably good topics for a school year PD. &lt;/p&gt;
&lt;p&gt;
What&amp;#39;s next?&lt;/p&gt;
&lt;p&gt;
The cohort will continue with two more courses starting up in just a
couple of weeks. One is an Ethics in CS class that I&amp;#39;m really excited
about and the other is Curriculum Development. The Curriculum
Development class has been a personal project. I had to take three
different graduate curriculum development courses over my career and
didn&amp;#39;t learn a single thing about designing curriculum in any of
them. Years ago, before I had any clue I&amp;#39;d be building this program I
told myself that if I ever did design and teach any education courses
I&amp;#39;d do a curriculum development course and it would be good. Well, her
it is. We&amp;#39;ll look at the standards and standard offerings but the crux
of the course will have the students designing curriculum. Since the
course is integrated with the NY State required field work they&amp;#39;ll
also be implementing what they build with their students. It should be
pretty cool. &lt;/p&gt;
&lt;p&gt;
On top of all this, we also have four students starting in our Masters
in CS Education program. Those four are just starting their journey
towards becoming teachers. They&amp;#39;ll take general pedagogy courses in
teh Fall and Spring and then join with our next cohort in the summer
to start the CS and CS Ed part of our program.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s been a long road to get here but now we&amp;#39;re here - preparing CS
teachers for NY city and state. When I came to Hunter this was one of
my two major initiatives. The thought was that regardless how bad the
powers that be screw CS education up, if you have great teachers,
students have a chance. At Hunter we&amp;#39;re preparing those great
teachers.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Preparing CS Teachers - building a community</title>
      <link>https://cestlaz.github.io/post/teacher-cert-community/</link>
      <pubDate>Tue, 11 Aug 2020 07:11:49 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-community/</guid>
      <description>&lt;p&gt;
What so many non-teachers just don&amp;#39;t get is culture and community can
be so much more powerful than curriculum. The problem is, culture and
community are harder to create, curate, and maintain and the results
don&amp;#39;t always show up on standardized tests.&lt;/p&gt;
&lt;p&gt;
You can&amp;#39;t force community or culture  in a classroom but you can try
your best to foster it. It&amp;#39;s ultimately up to the class as a
whole. It&amp;#39;s like I tell groups who come to events I organize. I can&amp;#39;t
make an event awesome, all I can do is bring everyone together and set
the stage. It&amp;#39;s up to us all to collectively make the event work. More
often than not, it does. &lt;/p&gt;
&lt;p&gt;
For our part, we did what we always do. We did our best to be open and
honest about what we were doing, how, and why. We sincerely tried to
listen to input and we worked to make ourselves available to our
students. We also looked to set our class tone as informal but
serious, and hopefully fun. We could take time for tangents but
remembered when it was time to get back on task. It&amp;#39;s the typical
balance a teacher seeks to create and maintain. There was no magic on
our end, we did what we always did - we were ourselves. It probably
helped that there were three of us and could already play off each
other Marx brothers style (oh, who am I kidding, more three stooges)
but all a teacher can really do is open the door. The other thing we
did was provide the tools - Slack and GitHub Discussions (even though
it didn&amp;#39;t take) and we did pre-load Slack with channels both serious
and not so much.&lt;/p&gt;
&lt;p&gt;
The class walked through. They decided to engage and that started the
ball rolling. Of course we still had our part to play. If they posted
something, we had to respond, or at least be an active part in the
discussion. Now, understand, we didn&amp;#39;t respond as &amp;#34;part of the job.&amp;#34;
That would be fake and they&amp;#39;d know it. We&amp;#39;d respond because we&amp;#39;re also
part of the community. We wanted them to be part of it and we wanted
to be part of it. That&amp;#39;s what community is all about. &lt;/p&gt;
&lt;p&gt;
While community and class culture is something that&amp;#39;s always
important. In this case, I think it&amp;#39;s even more important. New York
City and State, like the rest of the country has very few CS teachers
that are both strong in CS content and in CS pedagogy and since NY
State just started approving certification programs, including ours,
there are currently no state certified CS teachers. &lt;/p&gt;
&lt;p&gt;
When they finish the program, this cohort should be among New York&amp;#39;s
first certified CS teachers but even now, they have more CS content
knowledge and pedagogical content knowledge than most of the people
teaching CS. They&amp;#39;re also all experienced teachers in general. This
group can seed a community of CS teachers with strong
backgrounds. It&amp;#39;s on them to go back to CS4All in and run professional
developments and to work with us at Hunter to host events as well.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m sure I&amp;#39;ve already said how terrific the group is and how honored I
am to work with them and as a community we&amp;#39;re well on the way. Even as
I&amp;#39;m writing this post, I&amp;#39;m seeing new messages appear on our community
Slack discussion school openings and this is well after our summer
program has ended. They&amp;#39;re already becoming resources for each
other. In a couple of weeks, for their students, and soon for the rest
of the teachers in New York.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Preparing CS teachers - Curricula don&#39;t add richness, teachers do</title>
      <link>https://cestlaz.github.io/post/teacher-cert-topics-curriculum/</link>
      <pubDate>Fri, 07 Aug 2020 07:25:57 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-topics-curriculum/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve frequently been asked for curricula. I&amp;#39;ll hear from a school or
someone otherwise involved in a school or education and they&amp;#39;ll ask
for a course they can drop in and teach.&lt;/p&gt;
&lt;p&gt;
I explain it doesn&amp;#39;t work that way. A syllabus or curriculum is only
so good. A great curriculum with a bad teacher will still be bad but a
great teacher can do a lot to salvage a horrible curriculum.&lt;/p&gt;
&lt;p&gt;
A curriculum only goes so far. At it&amp;#39;s most sparse, it&amp;#39;s a list of
topics. At the other end we frequently see worked out prescribed
lessons that can be a boon to a beginner but in the end constrains
great teachers. &lt;/p&gt;
&lt;p&gt;
As a side note, this was something I noticed years ago when touring
elementary schools for my own children. We saw one school where
everything was in lockstep - every classroom looked basically the
same. Every teacher taught the same subject at the same time as every
other teacher each day and what they taught and how they taught it was
tightly controlled. We opted for  a school where the teachers were
much more free to actually teach. The school in question was well
regarded and the more we dug in the more we realized that the
strictness the principal imposed helped bring the bad teachers up to a
certain level and got most students through the standardized tests but
there was no joy. Great teachers weren&amp;#39;t allowed to teach. It was a
perfect example of a Bloomberg era stat mill. &lt;/p&gt;
&lt;p&gt;
Anyway back to CS.&lt;/p&gt;
&lt;p&gt;
I was thinking about this while we watched the summer cohort&amp;#39;s topic
presentations. Three of the topics were ones that I teach annually -
AI Search, NLP, and Cipher decryption. Some of the others I&amp;#39;m planning
on mixing in next year. The presentations and supporting materials
were all terrific but in every case, the teachers chose to spin and
emphasize aspects different to those I would emphasize.&lt;/p&gt;
&lt;p&gt;
In the case of the cipher decryption lesson, the cohort emphasized the
machine learning type aspect. I spin the lesson more towards a
recommender system. Neither is better or worse. My guess is that we
each selected aspects that were exciting to us and riffed on
those. Similarly the other groups brought up nuances and emphases that
differed from mine. &lt;/p&gt;
&lt;p&gt;
It was terrific.&lt;/p&gt;
&lt;p&gt;
If you look at a syllabus, the search topic might just say &amp;#34;Depth
First Search.&amp;#34; It might be in the recursion section of the class and
thus lead you to teaching a recursive solution or it might be in
the data structure / stack section and lead you to implement your own
stack. If the curriculum is fleshed out it&amp;#39;ll give more specifics but
will it talk about states and state space? How about implicit data
structures? &lt;/p&gt;
&lt;p&gt;
There&amp;#39;s so much richness to a well taught course that&amp;#39;s never captured
by a curriculum and that includes tangents, side stories and limitless
discoveries. &lt;/p&gt;
&lt;p&gt;
When I talk to my students decades later it&amp;#39;s usually not those lines
on the syllabus they remember but the richness that lives in the ether
of a well taught class.&lt;/p&gt;
&lt;p&gt;
So cool that our certification program created an environment where
we&amp;#39;ve been able to mix the spices from so many different chefs and
each of us is leaving with something new and richer.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CS Teacher Certification - Topics in CS</title>
      <link>https://cestlaz.github.io/post/teacher-cert-topics/</link>
      <pubDate>Wed, 05 Aug 2020 07:13:01 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-topics/</guid>
      <description>&lt;p&gt;
Officially, the last course of the summer was &amp;#34;Modern Topics in
Computer Science.&amp;#34; The idea was that K12 CS teachers on the one hand
need depth beyond the typical terminal high school course, hence data
structures and also breadth so that they could create electives, mix
teasers in to the regular courses, or help precocious students with
independent or semi-independant explorations. &lt;/p&gt;
&lt;p&gt;
If someone was teaching this in a typical fall or spring semester
course, they&amp;#39;d probably have a list of topics and spend a couple of
weeks on each. We wanted to do it a little differently. &lt;/p&gt;
&lt;p&gt;
The original thought was to integrate some of the topics in with the
earlier computer science but there weren&amp;#39;t too many opportunities due
to the compressed nature of the program. Instead, a few days before we
wrapped up data structures we gave the cohort a list of potential
topics and asked them to select one. Since the cohort had all already
been teaching CS and had differing content backgrounds we also
encouraged them to choose a topic not on the list.&lt;/p&gt;
&lt;p&gt;
When it was time for them to begin work on the topics part of the
intensive, they all shared their desired topic. Fortunately, things
worked out. We ended up with two solo students and a bunch of small
teams. The teams were tasked with learning about the topic and
designing a lesson or unit covering it. This could be for their
current students or some other hypothetical group. Each group would
also have to create a program or programs to show an implementation
and or use of the topic. Once they chose their topics, we picked a few
out of the remaining selections as topics that we&amp;#39;d present. &lt;/p&gt;
&lt;p&gt;
The next few days were Topher, JonAlf and I delivering our topics and
the cohort working in groups. When they worked, we&amp;#39;d drop in and
support. The final two days consisted of the groups presenting their
work.&lt;/p&gt;
&lt;p&gt;
The topics they selected were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Data Mining&lt;/li&gt;
&lt;li&gt;Public Key Encryption&lt;/li&gt;
&lt;li&gt;Blockchain&lt;/li&gt;
&lt;li&gt;Natural Language Processing&lt;/li&gt;
&lt;li&gt;Classic AI - Decision Trees&lt;/li&gt;
&lt;li&gt;SQL / Cyber Security&lt;/li&gt;
&lt;li&gt;Visualization&lt;/li&gt;
&lt;li&gt;Machine Learning / Cipher Decryption&lt;/li&gt;
&lt;li&gt;Genetic Algorithms&lt;/li&gt;
&lt;li&gt;Classic AI - Search&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We weren&amp;#39;t sure exactly what to expect but we were blown away both in
terms of the CS content as well as what they prepared in terms of
lessons and units. &lt;/p&gt;
&lt;p&gt;
Since this is just year one of the program we thought we&amp;#39;d get ahead
of the game and set up a site where we could host and share these
units and other resources so check them out &lt;a href=&#34;https://github.com/hunter-teacher-cert/Teacher-Resources/blob/master/README.org&#34;&gt;here&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;
We didn&amp;#39;t have a strict format for the cohort to use so each one is a
little different but each link&amp;#39;s README.md file will get you started.&lt;/p&gt;
&lt;p&gt;
As I said, we were blown away by their work but super proud that we
also have the bonus of being able to make their work available to the
general CS Ed community. If you&amp;#39;re looking to create a unit in any of
these, check them out.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Preparing teachers to teach CS</title>
      <link>https://cestlaz.github.io/post/teacher-cert-recap-intro/</link>
      <pubDate>Mon, 03 Aug 2020 06:16:52 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-recap-intro/</guid>
      <description>&lt;p&gt;
Now that the summer portion of Hunter College&amp;#39;s Advanced Certificate
in Teaching Computer Science is over I thought I&amp;#39;d do a
postmortem. That is, a few posts about what we did and how it all
went. &lt;/p&gt;
&lt;p&gt;
First, though, an overview of the program.&lt;/p&gt;
&lt;p&gt;
The Advanced Certificate program is geared towards teachers who are
currently certified in another subject area who wish to earn an
additional New York State teaching certificate in Computer
Science. Aspiring teachers - people who don&amp;#39;t currently have either a
Masters degree or any teaching certification can enroll in our Masters
in Computer Science Education program. We&amp;#39;re starting a small cohort
of five on that in the Fall. &lt;/p&gt;
&lt;p&gt;
The certificate program consists of a bunch of graduate classes plus
field work which is required by the state. Over the summer we covered
four of the classes. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Programming - essentially a CS1 type course.&lt;/li&gt;
&lt;li&gt;Data Structures - since K12 teachers should go deeper than the last
HS course which is typically APCS-A.&lt;/li&gt;
&lt;li&gt;Topcs in Compute rScience - since K12 teachers need a wide breadth
of CS knowledge.&lt;/li&gt;
&lt;li&gt;Methods - since teachers need to know how to teach CS.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the fall, we&amp;#39;ll continue with Ethics in Computer Science and
Curriculum Development which also includes the field work.&lt;/p&gt;
&lt;p&gt;
For this summer we started with a cohort of 22 practicing teachers but
lost one along the way. They all came from different schools and we
had all five boroughs represented. Most of the teachers worked in high
schools but we had some middle school representation and in terms of
current certifications, we had at least math, special ed, and science
represented but that&amp;#39;s something we didn&amp;#39;t officially track.&lt;/p&gt;
&lt;p&gt;
Staffing wise, it was me along with two of my long time collaborators
JonAlf Dyrland-Weaver and Topher Mykolyk. JonAlf and Topher are two of
the best educators out there and part of my former core team at
Stuy. That team is the biggest thing I still miss having come over to
Hunter. They&amp;#39;re quite simply the best.&lt;/p&gt;
&lt;p&gt;
The program ran basically all day every day during the month of
July. we knew it would be tight so we also added on some pre-work
which made sure all participants had some experience with Java prior
to our official start. &lt;/p&gt;
&lt;p&gt;
More will be revealed over the next few posts but I&amp;#39;ll spoil the
ending - I&amp;#39;m super proud of our 21 participants - while they still
have more work to do to earn their certifications, if I ran a school,
I&amp;#39;d love to have any of them teaching my CS classes. &lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not planning on writing much about the programming and data
structure classes except possibly through the methods eye because both
of those courses are pretty well established and cut and dry but I do
plan to write at least the following: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The methods course &lt;/li&gt;
&lt;li&gt;More on the methods course &lt;/li&gt;
&lt;li&gt;The topics course &lt;/li&gt;
&lt;li&gt;Use of tools for remote teaching &lt;/li&gt;
&lt;li&gt;Our overall philosophy in designing and running the program.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, stay tuned for more.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pro Version Or Education Version</title>
      <link>https://cestlaz.github.io/post/pro-version-or-ed-version/</link>
      <pubDate>Fri, 29 May 2020 19:00:13 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/pro-version-or-ed-version/</guid>
      <description>&lt;p&gt;
I woke up to this tweet by Mark Guzdial today:#pro-version-or
ed-version.org#&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;An indication
that CS Ed in US high schools is about vocational training: 2 (of 5)
recommended sessions at the &lt;a
href=&#34;https://twitter.com/csteachersorg?ref_src=twsrc%5Etfw&#34;&gt;@csteachersorg&lt;/a&gt;
conference are on Github and Agile. Is &lt;a
href=&#34;https://twitter.com/CSforALL?ref_src=twsrc%5Etfw&#34;&gt;@CSforAll&lt;/a&gt;
a Silicon Valley jobs program? &lt;a
href=&#34;https://t.co/n8ugnmTU84&#34;&gt;https://t.co/n8ugnmTU84&lt;/a&gt;&lt;/p&gt;&amp;mdash;
Mark Guzdial (@guzdial) &lt;a
href=&#34;https://twitter.com/guzdial/status/1265986599952822272?ref_src=twsrc%5Etfw&#34;&gt;May
28, 2020&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
This led to a lively discussion throughout the day with lots of likes
and lots of comments. Two themes emerged. One wondered if the CSTA
conference should be highlighting these talks about professional
sensibilities and the other questioned the use of tools designed for
industry vs those designed for schools.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s look at the former first. For full disclosure JonAlf and I are
co-presenters of the GitHub session that was highlighted. Truth be
told I had no idea it was highlighted until I read Mark&amp;#39;s tweet
:-). CSTA is a conference for teachers, K12 teachers. Teachers go
to learn new practices. Sure there are sessions about advocacy and
the like but
it&amp;#39;s really more like a multi day professional development session on
steroids. That&amp;#39;s one of the things that makes it so wonderful. If a
session gives teachers something of value it&amp;#39;s worth presenting. It
can be what they teach, how they teach, or something ancillary to
teaching even things as mundane as gradebook management. If it helps
make a CS teacher better, it&amp;#39;s appropriate to include. &lt;/p&gt;
&lt;p&gt;
I can&amp;#39;t say why any particular session was chosen for highlight
but it really isn&amp;#39;t a big deal. There are always sessions on specific lesson
ideas, cross curricular stuff, ethics, standards, equity, CS4All,
APCS, and lots lots more. &lt;/p&gt;
&lt;p&gt;
Now, what I&amp;#39;d like to see would be a banner on the conference page
where every time you go there it displays a random assortment of
sessions that are being offered. &lt;/p&gt;
&lt;p&gt;
What about the second point - professional tools or educational ones. First
let&amp;#39;s lump things together, git is a tool, so is GitHub. Same for
agile - it&amp;#39;s a tools as are programming languages. Now a great
craftsman is a great craftsman but their job is a whole lot easier
with a full chest of quality tools. &lt;/p&gt;
&lt;p&gt;
If a professional tool makes a teacher better it&amp;#39;s worth learning. &lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s look at agile. I&amp;#39;ve never used terms like scrum or sprint in my
class but pair programming comes out of agile and that&amp;#39;s become a
mainstay of CS classes. Same thing for the short development cycle and
all the testing. These are agile concepts that we take for granted as
education tools. Are we going to use everything about agile in every
CS class? No. Does it belong in CS when CS is embedded in other
subject areas? Who knows but if a teacher gets exposed to it at CSTA
then they can make an informed decision and use it when and as
appropriate. &lt;/p&gt;
&lt;p&gt;
What about git/GitHub? I wouldn&amp;#39;t teach using it when CS is embedded
but I might in a HS programming course and I certainly would in APCS-A
or beyond. I&amp;#39;ve found that there are many positives of using them and
I&amp;#39;ve written about it before on this blog. &lt;/p&gt;
&lt;p&gt;
The truth is that both git and agile provide ways of increasing
student communication and collaboration and these are good things.&lt;/p&gt;
&lt;p&gt;
Even if I decided that my classes shouldn&amp;#39;t use git, I&amp;#39;d still use it
for my web presence and to distribute materials and that too makes it
worth learning.&lt;/p&gt;
&lt;p&gt;
Just because a tool came from industry it&amp;#39;s not
necessarily bad and if it came fro education it&amp;#39;s not necessarily
good. &lt;/p&gt;
&lt;p&gt;
Thonny is a beginner Python IDE. It was designed specifically to be a
learner environment. It&amp;#39;s great for that. Eclipse is a professional
IDE and I hate it for education. Other people disagree with me on both
counts.&lt;/p&gt;
&lt;p&gt;
On the other hand I&amp;#39;ve seen tools written by people in education that
are god awful.&lt;/p&gt;
&lt;p&gt;
Then you also have well designed education tools but they fill a
narrow niche - they&amp;#39;re so specialize that a teacher and student can
only use them in a specific case. A teacher then needs to find
multiple tools for their multiple classes and students need to learn
even more.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s assume we have a bunch of these educational tools and their all
pretty well designed and help students get to whatever it is they&amp;#39;re
supposed to learn. Taken individually each tool seems great but taken
as a whole? Where&amp;#39;s the line? Is it better to have the teacher learn
and support a handful of these and students learn even more or should
they spend more time/efforn to learn one or two tools where the tool
will beuseful beyond the narrow scope of the specialized one.&lt;/p&gt;
&lt;p&gt;
The answer is of course, it depends.&lt;/p&gt;
&lt;p&gt;
I was part of a workshop this past summer and this came up. We were
looking at a pretty sweet specialized tool that worked really well for
one niche area. We also looked at Google Sheets which were less
intuitive but more versatile and universal. Which to use? We never
came up with a compelling answer either way. &lt;/p&gt;
&lt;p&gt;
There&amp;#39;s nothing inherently bad about industry tools and there&amp;#39;s
nothing inherently good about educational ones. It&amp;#39;s true that
industry tools are designed for industry but education tools are by
and large not designed by teachers. They might be designed by people
who teach as part of their job or who have taught but that&amp;#39;s not the
same thing. Sometimes they hit but sometimes they miss their mark.&lt;/p&gt;
&lt;p&gt;
In math class we would typically draw arcs and circles on the board
with a giant chalk compass. It was specifically designed for
education. You know what works better? A shoelace.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Varying Remote Teaching</title>
      <link>https://cestlaz.github.io/post/varying-remote-teaching/</link>
      <pubDate>Wed, 15 Apr 2020 08:33:20 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/varying-remote-teaching/</guid>
      <description>&lt;p&gt;
When we first went remote I jumped on Zoom. I already new the
technology and it most simulated a live class. Basically, it was the
best combination if quick, easy, and effective and we were under the
gun to get something going and give our students some sense of
normalcy and continuity.&lt;/p&gt;
&lt;p&gt;
As we settled in though, it made sense to try some different
things. One was the &amp;#34;lab packet.&amp;#34; A self contained document with
instructions and partial walkthroughs. One of my classes is already
set up to do a number of labs in this way so that was an easy thing to
try.  Basically it ended up being an asynchronous experience with me
being available using the usual suspects - Slack and email. &lt;/p&gt;
&lt;p&gt;
I tried something different this past Monday. It was synchronous with
me available on Slack but we didn&amp;#39;t use Zoom. I set up a series of
videos. Each video was fairly short and most had a small assignment at
the end. I asked the class to fill out a form after each
video/assignment. The topic was binary trees.&lt;/p&gt;
&lt;p&gt;
The whole process seemed to go well but I&amp;#39;ll report back once I&amp;#39;ve
finished going over the feedback emails I&amp;#39;ve gotten from the class.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m particularly proud of this video that I made for the class, enjoy:&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/OvwIyQJ-s40&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>It&#39;s okay, I Get It</title>
      <link>https://cestlaz.github.io/post/i-get-it/</link>
      <pubDate>Fri, 10 Apr 2020 14:13:08 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/i-get-it/</guid>
      <description>&lt;p&gt;
I was reading Mary Clair Wright&amp;#39;s new &lt;a href=&#34;https://computationalthinkinginroom112.com/&#34;&gt;blog&lt;/a&gt; the other day. It&amp;#39;s always
great to see another teacher sharing publicly online.&lt;/p&gt;
&lt;p&gt;
One line caught my eye in her &lt;a href=&#34;https://computationalthinkinginroom112.com/2020/04/07/ap-csa-enrichment-gone-awry/&#34;&gt;latest post&lt;/a&gt; - &lt;/p&gt;
&lt;p&gt;
&amp;lt;blockquote&amp;gt;
Remote instruction is weird, I can’t see them. I have to trust that they will message me with questions.
&amp;lt;/blockquote&amp;gt;&lt;/p&gt;
&lt;p&gt;
This is a real problem. It&amp;#39;s hard enough in a regular class where we
can pick up an all sorts of cues and use all sorts formal and informal
assessments but when the students are on the other end of a
teleconference or even more challenging an email or chat it&amp;#39;s even
harder.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s also a reminder of how important those non verbal clues and
student feedback can be.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s great if we can create an environment where our students will ask
for help if they don&amp;#39;t know something but even under normal
circumstances there&amp;#39;s the danger of students thinking they get
it. If a student is totally lost they&amp;#39;ll usually know they&amp;#39;re totally
lost but after that, it&amp;#39;s not so clear. &lt;/p&gt;
&lt;p&gt;
A student might think they get it if they can basically follow along
with what&amp;#39;s being presented. It&amp;#39;s pretty easy to watch another student
or a teacher go through explaining a solution step by step and think
you really know what&amp;#39;s going on. Similarly they can read through an
example in a text or on a web site and think they understand. A little
better is when they can do the first couple of problems in the book
but those frequently mimic the samples and don&amp;#39;t require any
additional insight. Even in a traditional class a student can go week
to week like this and really think they understand things and then
they get hit over the head on a test or right before a big assignment
is due. &lt;/p&gt;
&lt;p&gt;
This isn&amp;#39;t the student&amp;#39;s fault. It&amp;#39;s hard to know what you don&amp;#39;t know
and truth be told, we don&amp;#39;t really teach our students how to study and
self assess. It&amp;#39;s also really hard for teachers to assess this even in
person. Now that we&amp;#39;re all remote it&amp;#39;s yet another huge red flag to
look out for.&lt;/p&gt;
&lt;p&gt;
No solutions here today and no suggestions just yet another concern as
we continue to work to do right by our kids.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Limitations Of Remote Teaching</title>
      <link>https://cestlaz.github.io/post/limitations-of-remote-teaching/</link>
      <pubDate>Mon, 30 Mar 2020 14:41:35 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/limitations-of-remote-teaching/</guid>
      <description>&lt;p&gt;
While tools like Zoom, Slack and others are a tremendous boon as we&amp;#39;re
forced to do all our teaching remotely the limitations become apparent
as we settle in and try to go beyond the basics of an offsite meeting.&lt;/p&gt;
&lt;p&gt;
Today was &lt;a href=&#34;https://cestlaz.github.io/post/code-review-2/&#34;&gt;code review&lt;/a&gt; day in my CS1 class. It&amp;#39;s a lesson that I enjoy
teaching and I think my students get a lot out of it. Today we had to
do it remote. The mechanics were largely the same:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Pair off the kids.&lt;/li&gt;
&lt;li&gt;Have them write out a commentary on their partners code without discussion&lt;/li&gt;
&lt;li&gt;pair off again&lt;/li&gt;
&lt;li&gt;Have one review the others code but this time via discussion and
note taking.&lt;/li&gt;
&lt;li&gt;Get everyone together and discuss&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Zoom supported all the basics. Splitting the class was pretty easy via
the breakout room interface and students were able to flag me when
they wanted to bring me in to their breakout. It was also pretty easy
to move newcomers into a room. There were some interface nits that
Zoom has to address like how when I entered and left a breakout room I
ended up losing part of the breakout window interface but I figured
out a workaround.&lt;/p&gt;
&lt;p&gt;
The big difference and limitation was that I couldn&amp;#39;t just lurk. In
a live in person class, I get a top down view. I can basically see what all the
pairs are doing. I can&amp;#39;t get the details from a distance but I can
basically see what&amp;#39;s going on. I can also sidle over near a group to
see how they&amp;#39;re doing without being obtrusive. I can also see some of
the students screens and notebooks to get the gist of what&amp;#39;s going on
and focus in on individual conversations.&lt;/p&gt;
&lt;p&gt;
You can&amp;#39;t do these things with Zoom and I daresay you can&amp;#39;t with any
remote conferencing platform. When I wasn&amp;#39;t in a breakout room I was
alone in the main room. When I was in a breakout room it was obvious I
joined and that in and of itself changed the room dynamic. I also
couldn&amp;#39;t see anything the kids were writing on paper or on screen
unless they explicitly shared it. &lt;/p&gt;
&lt;p&gt;
All of this changes the dynamic big time and limits my effectiveness
as a teacher. &lt;/p&gt;
&lt;p&gt;
Don&amp;#39;t take this to mean I&amp;#39;m down on Zoom. I&amp;#39;m really loving the tool
and without it or similar products my students would be getting &lt;strong&gt;much&lt;/strong&gt; 
less during this crisis. &lt;/p&gt;
&lt;p&gt;
It&amp;#39;s just a reminder that teaching is a contact sport and as much as
some people will tell you otherwise the best instruction is in person
in a small class with a knowledgeable dynamic teacher. We&amp;#39;re not
getting back there this semester but here&amp;#39;s hoping that we get back by
Fall.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Class Legends</title>
      <link>https://cestlaz.github.io/post/class-legends/</link>
      <pubDate>Wed, 25 Mar 2020 15:43:54 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/class-legends/</guid>
      <description>&lt;p&gt;
Let&amp;#39;s talk about something other than distance learning and COVID-19.&lt;/p&gt;
&lt;p&gt;
You know you&amp;#39;ve been doing something a long time when you&amp;#39;ve got
legends.&lt;/p&gt;
&lt;p&gt;
Over on my alumni mailing list JonAlf shared a web site showing off
what his current students were doing in their computer graphics
class. Somewhere in the thread, Con replied:&lt;/p&gt;

&lt;blockquote&gt;
Someone should put up a video of the fabulous and fantastically famous
hand animation called FINGER.MDL. It dates from a little before my
time, but stories elevated it to legendary status.
&lt;/blockquote&gt;
&lt;p&gt;
Indeed it had reached legendary status. Other projects over the years
including Larry&amp;#39;s anatomically correct robot had also risen to
infamy. &lt;/p&gt;
&lt;p&gt;
A little later in the thread the project&amp;#39;s author Josh chimed in and
shared his original source code. He still had it from May 1995. I&amp;#39;m
not entirely surprised - I had a copy of the code as well. The trouble
is it was written in Turbo-C on a DOS machine. Good luck compiling it
on a modern system. Fortunately, Josh was able to build and run the
project using an emulator. Check out the  marginally NSFW video at the
end of the post.&lt;/p&gt;
&lt;p&gt;
So, what&amp;#39;s the legend? Well, in addition to being a pretty terrific
project - particularly when you remember the horsepower it was running
on and that it was written by a student who was concurrently finishing
APCS, there&amp;#39;s a story.&lt;/p&gt;
&lt;p&gt;
It starts in one of my APCS classes. Students were working on final
projects. Tom was working on Tetris - an impressive project for APCS
done in Turbo Pascal. Tom wanted to add music to the project and had a
clever way of doing it. Back then you could get basic sounds by
turning on and off the speaker at certain frequencies. Tom had two
arrays, one with frequencies and one with durations.&lt;/p&gt;
&lt;p&gt;
Something like: &lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;notes&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;440&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;523&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;440&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;659&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;durations&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;
Then for the game loop&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#+begin_src python&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  current_note&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  note &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; notes[current_note]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  duration &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; durations[current_note]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  play(note) &lt;span style=&#34;color:#75715e&#34;&gt;# starts the note playing until you change or stop it&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; game_not_over:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      duration &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; duration &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; duration &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          current_note &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (current_note&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;length(notes)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          note &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; notes[current_note]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          duration &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; durations[current_note]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          play(note) &lt;span style=&#34;color:#75715e&#34;&gt;# starts the note playing until you change or stop it&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;# the rest of the game loop&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  stop_playing() &lt;span style=&#34;color:#75715e&#34;&gt;# stop the speaker&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#+end_src&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;
Still, he had to figure out all the frequencies and durations for
&amp;#34;Korobeiniki,&amp;#34; the tetris song. The class was more than happy to help.&lt;/p&gt;
&lt;p&gt;
Everyone&amp;#39;s working to help figure this out for Tom. It&amp;#39;s all pretty
cool when in walks Jinx Perullo - Stuy&amp;#39;s new principal along with the
President of the New York City Board of Education. The President&amp;#39;s jaw
drops as she hears a cacophony of Tetris music and screen after screen
of Tetris being played!!!!! &lt;/p&gt;
&lt;p&gt;
Jinx makes an abrupt about face and drags the dignitary out of the
room. &lt;/p&gt;
&lt;p&gt;
Fast forward a week or so. We&amp;#39;re in the graphics class at the end of
the day - it was held during an non-existent after school period so
that the students could attend. Josh&amp;#39;s working on his graphics program
at a computer by the door.&lt;/p&gt;
&lt;p&gt;
Jinx walked in again. This time with the school&amp;#39;s chancelor to be
greeted by:&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34;
src=&#34;https://www.youtube.com/embed/Ca_8q3ct6J4&#34; frameborder=&#34;0&#34;
allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Once again, a quick about face.&lt;/p&gt;
&lt;p&gt;
For some reason Jinx never brought important people to my classes
again.&lt;/p&gt;
&lt;p&gt;
Those were indeed the good old days.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Necessity is the mother of invention</title>
      <link>https://cestlaz.github.io/post/mother-of-invention/</link>
      <pubDate>Mon, 23 Mar 2020 18:59:40 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/mother-of-invention/</guid>
      <description>&lt;p&gt;
I didn&amp;#39;t expect to read a Fred Wilson post on &lt;a href=&#34;https://avc.com/2020/03/teaching-online/&#34;&gt;teaching online&lt;/a&gt; but
that&amp;#39;s what I found when I visited &lt;a href=&#34;https://avc.com/&#34;&gt;his blog&lt;/a&gt; this morning. Don&amp;#39;t get me
wrong - I suspect that Fred has the makings of a great teacher, it&amp;#39;s
just not what I expected to find. There have been many posts about
education but I don&amp;#39;t recall any about teaching or more specifically
the art of teaching. I did find &lt;a href=&#34;https://avc.com/2011/07/teaching/&#34;&gt;this post&lt;/a&gt; though which actually speaks
to some of the thoughts today&amp;#39;s post got churning.&lt;/p&gt;
&lt;p&gt;
Fred describes what sounds like a typical &amp;#34;lecture style&amp;#34; lesson he&amp;#39;s
delivered numerous times. This time, it would be delivered via
Zoom. Now, Zoom is great but it&amp;#39;s harder to do an interactive
lecture - ie active learning online than it is to do in person which
is what I&amp;#39;m guessing led him to set up some starter Google sheets and
use these shared documents for an active project based class.&lt;/p&gt;
&lt;p&gt;
At the end of the post, now that he came up with what sounds like
a much stronger approach. Fred wonders if he&amp;#39;ll ever teach this class
any other way. &lt;/p&gt;
&lt;p&gt;
The first thing I thought was that this would be even better in
person. I don&amp;#39;t know the specifics but I could think of a number of
ways of running this. All in person with time to work on the
spreadsheets is one. Giving some pre-work and the sheets and then pick
up somewhere in the middle is another. In person gives the feel - the
live interaction where a teacher can read the class but there&amp;#39;s no
reason why we can&amp;#39;t also leverage tech tools like shared Google
sheets in a live classroom.&lt;/p&gt;
&lt;p&gt;
Then I got thinking about necessity being the mother of
invention. Nothing stops us from changing things up, from trying
something in normal times but when the norm is disrupted sometimes it
spurs creativity or changes focus. I
try to continually evolve as a teacher but I&amp;#39;m no better than anyone
else and get caught in ruts. I force myself to try new
things. Sometimes they work and it&amp;#39;s great and sometimes &lt;a href=&#34;https://cestlaz.github.io/post/try-something-new/&#34;&gt;they
don&amp;#39;t&lt;/a&gt;. Live and learn. On the other hand, when all if a sudden you can&amp;#39;t do things the
usual way the brain works on alternatives. &lt;/p&gt;
&lt;p&gt;
One example was the lesson where I
&amp;#34;invented&amp;#34; live coding. It was a direct result of a forced change -
for some reason, and I don&amp;#39;t recall why, I couldn&amp;#39;t do things the way I
wanted that day so I winged it. Years later, I was chatting with a
former student and he, out of the blue mentioned that that lesson had
a profound influence on him. &lt;/p&gt;
&lt;p&gt;
Right now, I&amp;#39;m teaching using Zoom, slack, videos and email. Not being
in a room with my kids sucks. I feel less connected and it&amp;#39;s much
harder to read the class. What am I doing? On the one hand, I&amp;#39;m not
trying to change that much at once as I want my students to have some
stability in an uncertain time but I am working on new things. The
nice thing is that whatever I come up with I can share with my fellow
teachers here and take with me back into the classroom. &lt;/p&gt;
&lt;p&gt;
This was my big takeaway but the post also reminded me of why I turn
to teachers before I turn to &amp;#34;the research&amp;#34; or policy makers on how to
teach. Fred described the evolution of a lesson and a teaching
technique. What he essentially described is what teachers do every day
and we have to do it accounting for all the variables that the
research can&amp;#39;t. We teach multiple classes a day every day of the
week. We try things, assess the results, rinse and repeat. I get that
all teachers don&amp;#39;t do this but the good ones do.&lt;/p&gt;
&lt;p&gt;
The final thought I had was with the reality that while coming up with
interesting active learning experiences is great it also takes a lot
of time and there&amp;#39;s not much time when you&amp;#39;re teaching five classes a
day five days a week to 150 kids along with grading, advising, and
everything else. This is why I tell young teachers that you always
want to evolve and improve but not every lesson is going to be a home
run and that&amp;#39;s okay.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s particularly important for teachers to remember this now as
across the nation they&amp;#39;re re-inventing their syllabi on the fly to
move from in person to online and they&amp;#39;re doing it without time,
training, and in some cases tools. &lt;/p&gt;
&lt;p&gt;
Do the best you can and continue to develop your toolset. Not every
new online experience will be great but if they&amp;#39;re sincere, your kids
will know. In the end we&amp;#39;ll all be okay and back to normal but with a
whole bunch of new tricks up our sleeves.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Interesting Problems</title>
      <link>https://cestlaz.github.io/post/interesting-problems/</link>
      <pubDate>Sat, 07 Mar 2020 08:12:55 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/interesting-problems/</guid>
      <description>&lt;p&gt;
I organize a monthly professional development session for CS
teachers. It&amp;#39;s targeted at teachers who are beyond the beginner stage
and don&amp;#39;t want yet another hello world blinky arduino scratch
workshop. Don&amp;#39;t get me wrong, given the need for CS teachers we need
plenty of beginner workshops but we also need to take teachers to the
next level. I refer to my workshops as being for teachers of APCS-A,
similar, or beyond. Participants get three hours of CTLE credit and
thanks to our gracious hosts at &lt;a href=&#34;http://digitalocean.com&#34;&gt;Digital Ocean&lt;/a&gt; get to use a great space
and enjoy a free meal.&lt;/p&gt;
&lt;p&gt;
I particularly enjoyed last weeks workshop for two reasons. One is
that we talked about &amp;#34;interesting problems.&amp;#34; This in itself is
interesting because different teachers find different things
interesting. For me, this time around, I was thinking of problems that
could be approached by beginners but had some interesting insight that
allowed them to look at the problem differently and solve it more
efficiently. &lt;/p&gt;
&lt;p&gt;
The second reason I liked this session is because I wasn&amp;#39;t the only
one presenting!!!&lt;/p&gt;
&lt;p&gt;
I started the session talking about the Happy Ladybugs problem - a
Hackerrank problem I wrote about &lt;a href=&#34;https://cestlaz.github.io/posts/happy_ladybug/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
I then passed off to Justin who talked about finding the &lt;a href=&#34;https://en.wikipedia.org/wiki/Convex_hull&#34;&gt;convex hull&lt;/a&gt;
bounding a set of points. Justin talked about how you can relate this
abstract geometry problem to real world problems like bounding
neighborhoods as well as how this can be graphically motivated and
then moved to discussing &lt;a href=&#34;https://en.wikipedia.org/wiki/Convex_hull_algorithms&#34;&gt;algorithms&lt;/a&gt;. Students can pretty easily come
up with a in inefficient O(n^4) solution and then Justin talked about
incrementally guiding them through alternate solutions ending with
something that runs in O(nlgn). At the end of the day we had a problem
that could be done in a variety of ways with students at different
levels of experience. &lt;/p&gt;
&lt;p&gt;
We then moved to Barry&amp;#39;s presentation of a &lt;a href=&#34;http://www.baphl.org/20/&#34;&gt;puzzle hunt&lt;/a&gt; problem he
adapted. It involved decoding, translation, number bases and Barry
uses it as a platform to work with stacks.&lt;/p&gt;
&lt;p&gt;
I finished the evening talking about three problems but we didn&amp;#39;t look
at solutions. These were teasers for next time when we also hope to do a
SIGCSE recap.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teachers Pay Teachers - part 2 - the report</title>
      <link>https://cestlaz.github.io/post/teachers-pay-teachers-2/</link>
      <pubDate>Mon, 20 Jan 2020 10:03:27 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teachers-pay-teachers-2/</guid>
      <description>&lt;p&gt;
Continuing from yesterday, what about the &lt;a href=&#34;https://www.govtech.com/computing/Report-Most-Teacher-Created-Online-English-Materials-Subpar.html&#34;&gt;article&lt;/a&gt; and &lt;a href=&#34;https://fordhaminstitute.org/national/research/supplemental-curriculum-bazaar&#34;&gt;report&lt;/a&gt; on pay
and free teacher resources.&lt;/p&gt;
&lt;p&gt;
The report looked at three sources - one pay and two free. They came
up with a number of results but I think they largely missed the point.&lt;/p&gt;
&lt;p&gt;
Their bottom line conclusion was that &amp;#39;Overall, reviewers rate most
of the materials as “mediocre” or “probably not worth using”.&amp;#39; They
also didn&amp;#39;t seem to find that neither the for profit or free sources
were universally better.&lt;/p&gt;
&lt;p&gt;
The one thing I can agree with though is that a consistent rating
system for the types of resources found on these sites would be very
helpful.&lt;/p&gt;
&lt;p&gt;
I think the main problem with the report has to do with what they were
looking for. They concluded things like the resources didn&amp;#39;t line up
well with standards, didn&amp;#39;t have good assessments, didn&amp;#39;t address
cultural diversity and a few other &amp;#34;didn&amp;#39;t dos,&amp;#34;  As I said, I think they
missed the point.&lt;/p&gt;
&lt;p&gt;
It felt to me that the reviewers were looking for rote
experiences. Download a lesson and follow the script.&lt;/p&gt;
&lt;p&gt;
In spite of what reformers would have you think, that isn&amp;#39;t
teaching. A teacher new to a class might start with a well worked out
curriculum and largely follow it verbatim but as they develop their
chops they&amp;#39;ll want the curriculum and all related materials to become
their own.&lt;/p&gt;
&lt;p&gt;
A downloaded resource, taken as is, will likely not address a specific
classes cultural diversity, at least not more than in the general
sense because it was designed for the authors class and that&amp;#39;s a good
thing. It&amp;#39;s up to the person doing the downloading to take the
resource and then adapt it for their students in their situation. This
is why most of the items that the report considers bad to me are both
inevitable and fine. There is no universal lesson that you can cut and
paste to all schools. To expect it is rubbish.&lt;/p&gt;
&lt;p&gt;
On the CS side, there&amp;#39;s a good amount of sharing of materials as well
as providers well, providing content. Some is free some not but there
is a lot available. Forgetting about whole curricula resources, three
lesson / experience sites  I&amp;#39;m
reasonably familiar with are the SIGCSE &lt;a href=&#34;http://nifty.stanford.edu/&#34;&gt;Nifty Assignments&lt;/a&gt; and now the
CSTA&amp;#39;s &lt;a href=&#34;https://sites.google.com/site/cstaniftyassignments/&#34;&gt;corresponding project&lt;/a&gt; along with &lt;a href=&#34;https://www.engage-csedu.org/&#34;&gt;Engage CS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
The biggest problem with the Nifty sites is that they&amp;#39;re arranged
chronologically by the conference year they were presented. There are
no tags nor easy way to search.  Engage CS gives you some level of
searching like for course level, keyword, resource type, and more.&lt;/p&gt;
&lt;p&gt;
The sites present resources in a format that&amp;#39;s superficially
 consistent but the truth is, once you get past the headings they can
 be written up in radically different ways.&lt;/p&gt;
&lt;p&gt;
To me, that&amp;#39;s not a problem. Each resource was written by some
educator with the intent of sharing but since each author is unique so
to will be the content they produce. &lt;/p&gt;
&lt;p&gt;
The real value of all these resources are to get ideas - lesson
motivations, code samples, project ideas etc.. Sure, I wish they were
more discoverable via search - better tagged and yes, even better
rated but the value is from reading what some other teacher has done
and then pulling out aspects that can work for you.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve rarely used a Nifty Assignment nor something from EngageCS
explicitly but I have gotten value from both sites (CSTA Nifty
assignments are newer and I&amp;#39;ve been at all the CSTA sessions so
haven&amp;#39;t actually used the site). &lt;/p&gt;
&lt;p&gt;
Would I ever use a resources &amp;#34;as published?&amp;#34; Perhaps - if
it was really well aligned with how I do things. &lt;/p&gt;
&lt;p&gt;
Would I pay? Probably not. I&amp;#39;m not against paying for resources from a
philosophical point of view. Charge a fair price and give a reasonable
assurance that what you&amp;#39;re selling has value and provide some value
beyond the free sites. I haven&amp;#39;t used Teachers Pay Teachers and
probably won&amp;#39;t look at Amazon&amp;#39;s thing when it&amp;#39;s launched but to me,
they would have to bring value in terms of curation and search. If
they do at a fair price, then they may be worth using.&lt;/p&gt;
&lt;p&gt;
When I started teaching there was no public internet. None of this
existed. Teachers kept binders or books of lesson plans and if you
were lucky you could borrow from a friend or colleague. New York&amp;#39;s DOE
at one point had a few teachers in each subject area submit lesson
plans for &amp;#34;lesson books&amp;#34; which they published for each core
subject. My chairman wrote some of the math ones and those materials
largely got me through my first year. &lt;/p&gt;
&lt;p&gt;
Today we have an embarrassment of riches. That comes with the price
that we have to actually read and evaluate all of the materials we&amp;#39;re
presented with but I&amp;#39;ll take today&amp;#39;s resources over what I started with
any day.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teachers Pay Teachers  - part 1 - should they</title>
      <link>https://cestlaz.github.io/post/teachers-pay-teachers/</link>
      <pubDate>Mon, 20 Jan 2020 08:43:37 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teachers-pay-teachers/</guid>
      <description>&lt;p&gt;
There was a bit of buzz a couple of months ago when Amazon announced
an online marketplace for educational resources. It wasn&amp;#39;t a new
concept - on the pay side, &lt;a href=&#34;https://www.teacherspayteachers.com/?msclkid=a426c2c1625613061bc19ce4cdcb6a0a&amp;amp;utm_source=bing&amp;amp;utm_medium=cpc&amp;amp;utm_campaign=Search%2520-%2520Branded%2520-%2520Desktop&amp;amp;utm_term=teachers%2520pay%2520teachers&amp;amp;utm_content=Brand%2520Name&#34;&gt;Teachers Pay Teachers&lt;/a&gt; has been around for a
while and in terms of free, there are many online resources but
they&amp;#39;re not necessarily well organized or curated. What was the buzz?
Should teachers be charging their peers for class materials or should
they be providing them for free.&lt;/p&gt;
&lt;p&gt;
I was going to blog about it then but never got around to it The other
day, someone posted &lt;a href=&#34;https://www.govtech.com/computing/Report-Most-Teacher-Created-Online-English-Materials-Subpar.html&#34;&gt;this&lt;/a&gt; article which questioned the quality of both
free resources and pay ones. The article, based on &lt;a href=&#34;https://fordhaminstitute.org/national/research/supplemental-curriculum-bazaar&#34;&gt;this report&lt;/a&gt; by the
Fordham Institute looked at ELA resources. The report also only looked
at Teachers Pay Teachers and two free sites - ReadWriteThink and Share
My Lesson excluding many other teacher resources that could be, for
all we know, better curated and more discoverable. As an aside, I was
turned off by the reports referring to their evaluators as &amp;#34;experts&amp;#34;
which is a description I personally would question. Still, there&amp;#39;s
some good fodder for thought.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll get to the report in the next post but for now let&amp;#39;s tackle the
question that started the initial buzz - should teachers be charging
each other for materials?&lt;/p&gt;
&lt;p&gt;
It depends. If you&amp;#39;re paid by a school to develop materials they
belong to the school. In NY you can take a sabbatical to build a
course so anything you build during that time would be DOE property
and therefore you couldn&amp;#39;t sell it. Same thing if you&amp;#39;re being paid
off hours to develop materials. The gray area comes when you&amp;#39;re lesson
planning. Most real planning and development happens outside of
school hours. In an typical school day teacher are typically
allocated around 40 minutes to do all their planing, grading,
and paperwork so realistically most materials as well as planing,
paperwork, and grading are done off hours. This being the case, I&amp;#39;m of
the belief that those materials belong to the teacher (although I&amp;#39;ve
met some DOE educrats who would disagree).&lt;/p&gt;
&lt;p&gt;
So, should they sell it? Well, they have every right to. That said, my
personal feelings and practice is that if you&amp;#39;ve developed something
for yourself and have not spent extra time or effort to prepare it for
others then I think you should make it freely available to your
peers. On the other hand, if you spend extra time and effort to make
it useful for and usable by others then by all means charge if you&amp;#39;d
like.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll tackle the report in the next post and we&amp;#39;ll look at some of the
resources available on the CS side.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>