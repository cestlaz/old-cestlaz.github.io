<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>csed on C&#39;est la Z</title>
    <link>https://cestlaz.github.io/tags/csed/</link>
    <description>C&#39;est la Z (csed)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 28 Jul 2018 00:00:00 +0000</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/tags/csed/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>Two Faces of Project Based Learning</title>
      <link>https://cestlaz.github.io/posts/two-faces-of-pbl/</link>
      <pubDate>Sat, 28 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/two-faces-of-pbl/</guid>
      <description>&lt;p&gt;
If one looks at my twitter feed they&amp;#39;ll notice that in addition to CS
Ed, another issue I&amp;#39;m passionate about is school reform or rather
resistance to what is popularly known as and mislabeled as school reform. I&amp;#39;m anti
vouchers, charter schools, high stakes testing and more. One of the
heroes of this resistance is education historian Diane Ravitch. I&amp;#39;m a
big fan of Diane&amp;#39;s and she&amp;#39;s one of the true great champions of public
schools, kids, and teachers. She blogged today about how a superintendent on Long Island &lt;a href=&#34;https://dianeravitch.net/2018/07/27/new-york-district-on-long-island-shows-that-problem-based-curriculum-produces-better-results-than-test-prep/&#34;&gt;replaced test
prep with project based learning&lt;/a&gt;. The post which talks about how this
superintendent improved test results  is worth a read. My only
quibble was that we shouldn&amp;#39;t read anything into the results for a
variety of reasons including the fact that the group of students who
did the project based learning (PBL) units instead of test prep were
self selecting volunteers.&lt;/p&gt;
&lt;p&gt;
One of the comments caught my eye:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PBL is just another “student-centered” fad…&lt;/p&gt;
&lt;p&gt;
PBL operates on the myth of “transference” perpetuated by non-educators.&lt;/p&gt;
&lt;p&gt;
…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The comment continues on with a number of good points.&lt;/p&gt;
&lt;p&gt;
Why am I writing about it here? Because PBL is a big CS Ed buzzword
and like most buzzwords there&amp;#39;s both truth at the root of the hype and
hype that distorts the truth.&lt;/p&gt;
&lt;p&gt;
When done right with the right group of kids, project based learning
can be wonderful but it takes a lot of time and effort. You can&amp;#39;t just
set the kids loose to learn. You&amp;#39;ve got to train them to work
together, set up the project, as the teacher, you&amp;#39;ve got to know the
subject so as to know when to guide, when to tell, when to prod, and when to leave
them alone. Doing it right, at least for most students, is certainly
not giving them the instruction sheet and going off the check your
email.&lt;/p&gt;
&lt;p&gt;
On the other hand, it&amp;#39;s easy to do it wrong. If you&amp;#39;ve got high
performing kids, they&amp;#39;ll figure things out. If you&amp;#39;ve got a few high
performing kids, they can mask the fact that the majority of a group
isn&amp;#39;t getting things. You might have an assignment where a kid figures
out a formula from discovered data and might be able to then use it to
make predictions but there&amp;#39;s a good chance they won&amp;#39;t understand why
it works or it&amp;#39;s root derivation. That&amp;#39;s where we need the teacher.&lt;/p&gt;
&lt;p&gt;
One of the dangers of bad PBL is that it&amp;#39;s sexy. Kids are engaged and
it appears to work - particularly when the teacher doesn&amp;#39;t know the
subject area. This is my great fear whenever I hear things about
teachers being &amp;#34;Lead Learners.&amp;#34; Sure, when you&amp;#39;re a converted
something else teacher moving into CS you won&amp;#39;t know the subject
matter but that has to change over time. I&amp;#39;ve seen enough instances of
cases where teachers never develop their chops and just throw projects
at the kids augmented by scripted curricula or computer driver
content. The kids get through the class or program but are not
prepared for the next class or next level. I&amp;#39;ve seen this with the old
Cisco curriculum, any number of after school and summer programs -
some VERY highly regarded ones and I think we&amp;#39;ll see more and more of
this in states that are pushing CSforAll without developing the
necessary pre and in service programs for their teachers.&lt;/p&gt;
&lt;p&gt;
Don&amp;#39;t let my last two paragraphs leave you feeling that I&amp;#39;m anti
PBL. I&amp;#39;m not. It&amp;#39;s great when done right and if you have thee time and
resources in your school and classes you should be using it when
appropriate.&lt;/p&gt;
&lt;p&gt;
If you want some pointers on how to get going in the right direction with PBL in CS  check out &lt;a href=&#34;https://www.amazon.com/Computer-Science-K-12-Imagining-possibilities-ebook/dp/B07DYDXBSH/ref=sr_1_1?ie=UTF8&amp;amp;qid=1532808363&amp;amp;sr=8-1&amp;amp;keywords=doug+bergman&#34;&gt;this
book&lt;/a&gt; by my buddy Doug Bergman. It&amp;#39;s a great getting started guide by a
great teacher. He&amp;#39;s basically Mr. PBL and he does it right.  If you&amp;#39;re new to CS you&amp;#39;ll still need to learn content
and if you&amp;#39;re new to teaching, you&amp;#39;ll be developing your chops for
your entire career but it&amp;#39;s a great resource to get you and then your
kids started on the journey.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Time To Create An Ethics Course</title>
      <link>https://cestlaz.github.io/posts/time-to-create-an-ethics-course/</link>
      <pubDate>Sat, 21 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/time-to-create-an-ethics-course/</guid>
      <description>&lt;p&gt;
I think it&amp;#39;s time for me to start developing a CS Ethics class.&lt;/p&gt;
&lt;p&gt;
An ethics course isn&amp;#39;t a replacement for having teachers that live and
model good behavior and weave ethical issues throughout the curriculum
but still, adding a separate course on top of that has its merits.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not in a rush to create this course. I might be done in a month or
it might take a couple of years. When I&amp;#39;m done, I&amp;#39;ll add it as an
option in my CS Teacher education programs but hopefully it will be an
attractive course for undergrad CS majors as well.&lt;/p&gt;
&lt;p&gt;
While it&amp;#39;s easy enough to come up with possible topics - privacy,
moral responsibilities, biased algorithms, net neutrality and on and
on I&amp;#39;m looking for this course to have a serious coding component. I
want the students to build things to really understand the
implications of what they&amp;#39;re studying.&lt;/p&gt;
&lt;p&gt;
One topic I definitely want to cover is &lt;a href=&#34;https://news.harvard.edu/gazette/story/2011/10/youre-not-so-anonymous/&#34;&gt;anonimity&lt;/a&gt;. I&amp;#39;d love to find
the right combination of data sets and have the class discover that
some hidden information in the sets isn&amp;#39;t nearly as hidden as it seems
to be. When I was at Stuy, I was thinking about
having the kids give me permission to use their class schedules since
even with names removed we could probably identify many kids by
electives and overlapping classes. I have no idea what I&amp;#39;ll be able to
do at Hunter. If I can come up with something good I think this will
form the basis of a pretty amazing part of the class.&lt;/p&gt;
&lt;p&gt;
Another project I&amp;#39;d love to put together is something dealing with a
biased algorithm. Again, I don&amp;#39;t know where this will go, maybe
something where I can seed the class so that different groups
implement some project differently and we can then analyze each groups
biases, hidden or otherwise.&lt;/p&gt;
&lt;p&gt;
Beyond these two, I&amp;#39;m not sure.&lt;/p&gt;
&lt;p&gt;
How about you? Anyone out there have any good ideas for programming
projects for an ethical CS course? If so, please share. It might be a
while but when I do finish putting this together I&amp;#39;ll be sure to
publish whatever the end result is.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSTA 2018 - Funding and Direction</title>
      <link>https://cestlaz.github.io/posts/csta-2018-future/</link>
      <pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/csta-2018-future/</guid>
      <description>&lt;p&gt;
In addition to everything I wrote about last time there were a couple
of other big announcements at this year&amp;#39;s CSTA conference. Both
announcements deal with funding.&lt;/p&gt;
&lt;p&gt;
First, there is a new class of CSTA membership. The free tier remains
but now for $50 you can join &lt;a href=&#34;https://www.csteachers.org/page/cstaplus&#34;&gt;CSTA+&lt;/a&gt;. This new level of membership comes
with a bunch of extras that are probably good for K12 teachers but I
doubt I&amp;#39;ll use any of them. I did, however, get a snazzy CSTA+ water
bottle by joining at the conference. For me the interesting part is
that 50% of CSTA+ dues will go to support local chapters.&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t exactly know what that means but it&amp;#39;s what got me to
join. Ultimately, local teaching communities are important and CSTA+
supports that, I&amp;#39;m all in.&lt;/p&gt;
&lt;p&gt;
That said, what do chapters do? I know what goes on in NY but not
elsewhere. I bet the same is true for people all over the country. One
question that came up repeatedly at the conference, at least in my
circles was &amp;#34;what would the chapters use the money for?&amp;#34; I think it
would be wonderful if on the CSTA web site there was a page where
chapters could easily list activities funded by the central
organization. I&amp;#39;m not looking for a big write up - who has time to
read or write that. I&amp;#39;m looking for a line or two. What the chapter
did and maybe a few comments on details. Over time this could be  a
great way for chapters to steal ideas from each other.&lt;/p&gt;
&lt;p&gt;
The other piece of big news was &lt;a href=&#34;https://www.linkedin.com/pulse/new-partnership-support-computer-science-teachers-mary-snapp-1c/?published=&#34;&gt;Microsoft pledging a big chunk of
change to the CSTA&lt;/a&gt;. I&amp;#39;ve often lamented that so many CS Education (and
education decisions in general) are decided by everyone except the
teachers. The CSTA is our teacher&amp;#39;s professional organization and our
best bet for teacher representation when policy is made and
implemented. Once again it appears that some of these funds will help
support local chapters.&lt;/p&gt;
&lt;p&gt;
The Microsoft funding though got me thinking. The linked piece talks
about advocacy, professional development and curriculum. All important but
there&amp;#39;s an even greater need right around the corner. We need quality,
qualified CS teachers and we need them now. Taking a teacher with no
CS background and giving them some PD can be a stop gap but it isn&amp;#39;t a
solution. Long term we need pre and in service teacher preparation
programs similar to what we&amp;#39;re rolling out at Hunter. Programs that
include both pedagogy and content. As states begin to require these
programs, as they do in all other subject areas, teachers both new and
in service will have to take a number of graduate credits. In our
case, 18 for a certificate for an already licensed teacher and our MA
program is somewhere in the 30s.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;d love to see money allocated to pay for CS teacher certification
through our public colleges as they (we) roll out programs.&lt;/p&gt;
&lt;p&gt;
This said, the Microsoft commitment is great news for the CSTA and
CSTA is a great option for teachers that can afford it.&lt;/p&gt;
&lt;p&gt;
Here in NY, our CSTA chapter is fairly young. I&amp;#39;m excited to see what
this year brings both on the local and national level.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>I&#39;m not going to congratulate you on your AP results</title>
      <link>https://cestlaz.github.io/posts/ap-2018/</link>
      <pubDate>Thu, 05 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/ap-2018/</guid>
      <description>&lt;p&gt;
While busy finishing off my sides for my talk at CSTA2018 this weekend
I noticed a Facebook post about APCS exam grades now or shortly being
available.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m no longer teaching high school but still fancy myself a teacher
first and part of the K12CS community. We&amp;#39;re a growing community and
we&amp;#39;re growing fast.&lt;/p&gt;
&lt;p&gt;
Usually, at this time of year we see a number of people posting their
results. &amp;#34;I had 16 test takers, had 5 fives, 6 fours etc.&amp;#34;&lt;/p&gt;
&lt;p&gt;
I decided that not only won&amp;#39;t I be congratulating anyone on their
results this year but decided to write this quick post to say no one
should.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not saying that hundreds of teachers out there don&amp;#39;t deserve
congratulations - they do. The problem is, for everyone who&amp;#39;s kids
got all fours and fives, somewhere out there was a teacher who
possibly through no fault of their own had students scoring ones, twos
and threes.&lt;/p&gt;
&lt;p&gt;
When I was at Stuy, almost all of my kids got fours or fives when the
exam was the old AB exam. When it went to A only, it was almost
exclusively fives with a few fours and maybe a single one. That wasn&amp;#39;t
me. It was the kids. The AP CS teacher before me got similar results
as did all of my colleagues and the teachers who are still
there. Again, it was the kids.&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s not to say that I didn&amp;#39;t add value. I know I spent a career at
Stuy doing right by those kids regardless of test scores.&lt;/p&gt;
&lt;p&gt;
The fact is that there&amp;#39;s only so much a teacher can do.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Was APCS (A or principles) their first course?&lt;/li&gt;
&lt;li&gt;What other demands are placed on the students?&lt;/li&gt;
&lt;li&gt;How about the teacher?&lt;/li&gt;
&lt;li&gt;How many kids in a class? How much time?&lt;/li&gt;
&lt;li&gt;Is APCS an elective or required??&lt;/li&gt;
&lt;li&gt;Is the teacher getting the support they need?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And the list goes on. I know some great teachers who never had classes
with great AP results and meh teachers that did. Actually, I know some
APCS and Calc teachers that consistently had classes with good scores
through drill and kill and building student speed. Of course, at the
same time these teachers totally turned the kids off from the subjects&lt;/p&gt;
&lt;p&gt;
Our teachers do deserve praise and congratulations.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Praise for getting through another year.&lt;/li&gt;
&lt;li&gt;Praise for forging a path in this new subject area.&lt;/li&gt;
&lt;li&gt;Praise for doing more with less.&lt;/li&gt;
&lt;li&gt;Praise for inspiring kids and starting them on a path.&lt;/li&gt;
&lt;li&gt;Praise for changing lives for the better.&lt;/li&gt;
&lt;li&gt;And so on&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If your kids left with more than they came in with you did a great job
and deserve congratulations. If you set a seed that will later grow
you&amp;#39;ve done an enormous amount of good.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s like I would always tell my kids when they won an award. I was
never proud of them actually winning the award. I was proud of how they carried
themselves, prepared, performed or whatever. The award was just some
outsider also noticing they&amp;#39;re awesome.&lt;/p&gt;
&lt;p&gt;
Same thing here so I won&amp;#39;t be congratulating teachers on student test
results. The results coming in do provide some measure of closure for
the year though so I will congratulate you all on the year and your
work.&lt;/p&gt;
&lt;p&gt;
Hope to see many of you this weekend at CSTA2018.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Talking about CS teacher certification at CSTA 2018</title>
      <link>https://cestlaz.github.io/posts/csta-2018/</link>
      <pubDate>Sun, 01 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/csta-2018/</guid>
      <description>&lt;p&gt;
As I mentioned in my last post, this coming weekend is the Computer
Science Teachers Association (CSTA) conference. I&amp;#39;ve been a member of
CSTA since the beginning but this will be only the second time I&amp;#39;ve
made it to the annual conference.&lt;/p&gt;
&lt;p&gt;
The CSTA conference might be the largest conference specifically for
k12 computer science teachers and that makes it different from
conferences like SIGCSE which is for CS education and education
research at all levels or ISTE which seems to be more of an Ed Tech
conference.&lt;/p&gt;
&lt;p&gt;
I really enjoyed the conference last year but as the sessions seemed
to be weighted towards beginning CS teachers and towards the CSTA
standards I found most of the value in the &amp;#34;hallway track&amp;#34; when I got
to meet and chat with CS teachers from all over the country.&lt;/p&gt;
&lt;p&gt;
Glancing at the program, there looks to be a bunch of interesting
sessions and this time more sessions that I think I&amp;#39;ll personally be
interested in .&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m also giving a talk. New York State just approved and created K12
Computer Science Teacher Certification and we&amp;#39;re currently making
plans to roll out our Masters and Certificate programs for CS teachers
as soon as we get state approval. The Masters program will be largely
for preservice teacher candidates and the certificate program for in
service teachers certified in other areas.&lt;/p&gt;
&lt;p&gt;
The talk will cover a bit of the history of CS Education in New York,
what the state is doing and mostly what where building at Hunter and
why. It should be a fun talk. I&amp;#39;m hoping for some people from other
states attend so we can have a rich discussion during the session.&lt;/p&gt;
&lt;p&gt;
So, if you&amp;#39;re going to be at the CSTA conference, I&amp;#39;d love to see
you either at my session or at the conference in general. I&amp;#39;ll be
spending most of my non session time there with my friends at GitHub
education.&lt;/p&gt;
&lt;p&gt;
For those of you can&amp;#39;t make it, I hope to blog about the weekend and I
hope others do as well.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PD for people who know CS</title>
      <link>https://cestlaz.github.io/posts/pd-for-cs/</link>
      <pubDate>Wed, 27 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/pd-for-cs/</guid>
      <description>&lt;p&gt;
I saw a couple of tweets from Sarah Judd this morning:&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-conversation=&#34;none&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;A lot of CS Ed PD assumes you are new to CS. I really want CS Ed PD for people like us that came from a CS background and want to understand the pedagogy for CS in particular better. Do you know of some?&lt;/p&gt;&amp;mdash; Sarah Judd (@SarahEJudd) &lt;a href=&#34;https://twitter.com/SarahEJudd/status/1011785286693552139?ref_src=twsrc%5Etfw&#34;&gt;June 27, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-conversation=&#34;none&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Yes! I love SIGCSE and CSTA. I just feel like... Math teachers don&amp;#39;t get PD that starts with &amp;quot;and this is how you add and subtract!&amp;quot; and I&amp;#39;d love more CS PD that assumes the content is there, and can focus on the pedagogy.&lt;/p&gt;&amp;mdash; Sarah Judd (@SarahEJudd) &lt;a href=&#34;https://twitter.com/SarahEJudd/status/1011966102795059200?ref_src=twsrc%5Etfw&#34;&gt;June 27, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
It wasn&amp;#39;t the first time I&amp;#39;ve heard this refrain. Last year I attended
my first CSTA conference. I had numerous conversations with CS
teachers on the fact that everything was on an intro level in terms of
both content and teaching. Further conversations with local teachers
with stronger CS backgrounds led me to run a professional development
session at Hunter this past election day for more experienced CS
teachers at schools that offered more than the basics.&lt;/p&gt;
&lt;p&gt;
While it&amp;#39;s not surprising that most of the PD opportunities for CS teachers are
rather rudimentary given that nationally most programs are new and
most teachers are new to the subject but there are a few deeper
reasons.&lt;/p&gt;
&lt;p&gt;
To start, there are big players in the CS Ed movement that are pushing
curricula and specific programs and that leads to scripted PD for
their products and not depth of knowledge nor deep pedagogical content
knowledge let alone basic pedagogy. Add to this the fact that many of
the &amp;#34;thought leaders&amp;#34; in the space don&amp;#39;t have experience teaching CS
at the K12 level and in many cases don&amp;#39;t have a background either in
teaching nor tech and you can see where the problem comes from. On top
of this we have the erosion of respect for teaching as a profession
where reformers are trying to take the teacher out of teaching and are
trying to reduce pedagogy to following scripts. This problem goes well
beyond CS Ed but as the new kid on the block it probably hits us
hardest.&lt;/p&gt;
&lt;p&gt;
In any case, preparing beginners is both necessary and appropriate for
the time being but we can and must do a better job than what&amp;#39;s
currently &amp;#34;state of the art.&amp;#34; At the same time we have to do something
with the CS teachers who indeed do have strong content knowledge but
don&amp;#39;t feel comfortable with imparting that knowledge.&lt;/p&gt;
&lt;p&gt;
So, what should we do?&lt;/p&gt;
&lt;p&gt;
For new teachers the solution will ultimately have to come
from pre-service programs but what we end up getting is going to
largely be dictated on what&amp;#39;s required by individual states. If states
merely require passing an exam like the Praxis CS exam which, from
what I can gather isn&amp;#39;t a horrible content exam then we&amp;#39;re going to
see CS teachers bumble through their early to mid careers while trying
to figure out how to teach CS much like I did way back when. If they
end up endorsing pre-service programs that are focused on specific
curricula - APCS-A for teachers, APCS-P for teachers, &lt;a href=&#34;https://cestlaz.github.io/posts/math-for-math-teachers/&#34;&gt;Math for Math
teachers&lt;/a&gt; if you will but for CS, we&amp;#39;re also not going to get strong
well prepared pedagogues. On the other hand if you can design a
program that has a strong pedagogical component to go along with the
content, you have a chance. Even with a well designed program
implementation will still be a challenge. Who will teach it? Education
professors who don&amp;#39;t have CS backgrounds? CS professors with little
pedagogical training? Neither of those groups necessarily have any
real experience as actual K12 teachers. If you can find honest to
goodness experienced, strong K12 CS teachers to teach your pedagogy
courses that&amp;#39;s a big win but that&amp;#39;s going to be hard in most cases.&lt;/p&gt;
&lt;p&gt;
I think we designed a great program at Hunter and have a practical and
strong implementation plan. If you&amp;#39;re going to be
at CSTA2018 you can hear all about it and why we designed it as we did
in the talk I&amp;#39;m giving.&lt;/p&gt;
&lt;p&gt;
For the more experienced I don&amp;#39;t have a universal answer but I can say
what I&amp;#39;m planning. Teachers in NY have to complete 100 CTLE hours
every five years. For beginners, there are plenty of options, at least
content wise. For teachers who know CS, not so much. I was at a meetup
talking to a few friends a couple of weeks ago and one mentioned that
they get most of their hours in Math for America CS
workshops. Unfortunately more than a few of my CS teacher friends who
are in MFA tell me that the CS content in these workshops, while they
do satisfy the hours, are somewhat lacking on the CS / CS pedagogy
side.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s what I&amp;#39;m planning - we (Hunter) will host a once a month
dinner/session for CS teachers who are a little farther along CS
wise. I haven&amp;#39;t worked out all the details yet but I&amp;#39;ve got a few tech
companies that are already interested in sponsoring and helping out
should we need anything and we&amp;#39;ll probably set most of our agenda for
the year at the first session where I&amp;#39;ll make my best guess at a
useful agenda. This is something I&amp;#39;m pretty excited about. It should
help create a network of more experienced CS teachers which will both
help bolster that segment of the community and provide a long term
resource to newcomers and it should be a lot of fun.&lt;/p&gt;
&lt;p&gt;
In some ways, this is why I ended up joining Hunter. Regardless of
what the city and state do, we&amp;#39;re going to prepare the teachers and if
you have a well prepared teacher, you&amp;#39;ve got a shot.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Should CS for All be implemented at the college level?</title>
      <link>https://cestlaz.github.io/posts/csforall-in-college/</link>
      <pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/csforall-in-college/</guid>
      <description>&lt;p&gt;
There&amp;#39;s been a lively discussion on pushback to CS for All at the K12
level over on Facebook. &lt;a href=&#34;https://twitter.com/guzdial&#34;&gt;Mark Guzdial&lt;/a&gt; started a sub thread asking if CS
for All should first be implemented at the undergrad level rather than K12.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s an interesting question and as good as anything to get me out of
my month long non-blogging rut.&lt;/p&gt;
&lt;p&gt;
Mark was right when he said that if Colleges implement CS for All, K12 will
likely do so to follow - just look at AP. Colleges have been saying
that students should take more AP classes (while giving less credit)
and we all know where that&amp;#39;s led.&lt;/p&gt;
&lt;p&gt;
On the other hand, can colleges really do CS for All, what does it
mean and what would it look like.&lt;/p&gt;
&lt;p&gt;
Much like there is no single K12 - it&amp;#39;s 50 states and who knows how
many independent school districts, there won&amp;#39;t be a single CS for All
at the college level but let&amp;#39;s think about how things could play out.&lt;/p&gt;
&lt;p&gt;
Many colleges have distribution requirements. Students must take one
course from bucket A, two from bucket B etc. Many schools that I&amp;#39;ve
looked at already  count CS courses in one of their distribution
buckets. This doesn&amp;#39;t mean every student will take CS but in theory
means they can. Colleges could in theory create a required CS bucket
or even a required CS course but I don&amp;#39;t think it&amp;#39;s as easy as
that. It might be at a private institution but while I don&amp;#39;t know all
the ins and outs of Hunter&amp;#39;s governance rules I do know that adding a
universal student requirement is a HUGE undertaking.&lt;/p&gt;
&lt;p&gt;
So my take is that while it might be easy for a private college
to add a CS requirement I&amp;#39;m guessing other public institutions are
more similar to Hunter and it&amp;#39;s not going to be an easy task.&lt;/p&gt;
&lt;p&gt;
Regardless, let&amp;#39;s say we have a required class on the books. Will we
have the capacity to teach it? It seems that schools are struggling to deal
with their existing CS majors and running sufficient electives and
courses for them. Just a month or so ago there was an article about a
college ending its CS minor due to lack of resources. It doesn&amp;#39;t sound
like a radically different problem then that faced in K12. Maybe it&amp;#39;s
harder given that at least in NY, there is &lt;a href=&#34;http://cestlaz.github.io/posts/room-for-csforall&#34;&gt;room for a required CS
course&lt;/a&gt; if you can find the teacher.&lt;/p&gt;
&lt;p&gt;
Even so, assuming we have the capacity to enroll every undergrad in a
CS course what would that be? I think most people would be in
agreement that it shouldn&amp;#39;t be CS 101. Maybe existing pre-major
courses but even there I don&amp;#39;t know if that&amp;#39;s always the best
path. There could be a great pre-major course to give students the
basics and lead some into the major but what about a CS course for
students in majors that need some deeper but focussed programming
skills. The appropriate course for them isn&amp;#39;t the same as a
general/pre-major course. Using Statistics as an example, at Hunter,
many majors require a statistics course which is off loaded to the
Stats department. Each major has slightly different requirements. Over
years, the end result is a course that it seems that nobody is happy
with - a least common denominator course. CS for All at the college level
could give us a least common denominator course that doesn&amp;#39;t serve
anyone.&lt;/p&gt;
&lt;p&gt;
Now, if you have the resources, none of these are issues. A well
heeled private institution can run tons of sections of specialized
classes no problem but this means just like on the K12 level we&amp;#39;ll
get the CS for All tale of two cities that I see coming in NY where
the rich schools have good programs and the poor get a substandard
experience.&lt;/p&gt;
&lt;p&gt;
With all of this said, I&amp;#39;m finally getting to the big red flag with
college CS for All and it&amp;#39;s an issue that everyone conveniently
ignores. I&amp;#39;m talking about teacher quality. One of my big takeaways
from SIGCSE is that college faculty are well behind K12 teachers in
terms of pedagogy and I don&amp;#39;t see this changing anytime soon. This is
to be expected given that professor&amp;#39;s career advancement is really
based on research. Having a good teacher is always important but it&amp;#39;s
even more important for non-major students since a student in the
professor&amp;#39;s major will at least be passionate about the subject
area. To me, this is not a recipe for success.&lt;/p&gt;
&lt;p&gt;
One can certainly make the claim that we aren&amp;#39;t any better off right
now at the K12 level because we don&amp;#39;t have teachers who know either
the subject nor how to teach it and at least at the college level they
know the subject matter. This is very true and it&amp;#39;s why pre-service CS
teacher preparation is so critical to getting this right even though
it will take time. That&amp;#39;s something that both Mark and I have been
vocal about but more on that subject next time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>No Magic Bullets - Discovery Learning</title>
      <link>https://cestlaz.github.io/posts/no-magic-bullets-constructivism/</link>
      <pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/no-magic-bullets-constructivism/</guid>
      <description>&lt;p&gt;
The most recent NYC CSTA chapter meeting was &amp;#34;How do I assess CS?&amp;#34; I
wanted to go but it&amp;#39;s been such a crazy month I was just too wiped
out. Fortunately, the meetup was &lt;a href=&#34;https://www.youtube.com/watch?v=XIMKAZbHAiA&amp;amp;index=83&amp;amp;list=WL&amp;amp;t=1796s&#34;&gt;recorded&lt;/a&gt;. I was able to watch the
first half this morning while working out on my &lt;a href=&#34;https://www.staczero.com/hero&#34;&gt;stationary trainer&lt;/a&gt;
which leads me to today&amp;#39;s rare Saturday morning blog
post. The meetup consisted of two panels. The first was made up of K12
teachers who taught CS. I can&amp;#39;t talk about the second panel yet since I&amp;#39;m
only halfway through but there were a couple of points made by my
friend &lt;a href=&#34;https://twitter.com/KatieJergens&#34;&gt;Katie Jergens&lt;/a&gt; who teaches at Dalton that I thought were worth
talking about.&lt;/p&gt;
&lt;p&gt;
The first was when Katie noted that through working with the panel,
one of her takeaways was that:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Giving students an explicit strategy for solving a problem - &amp;#34;this is
how I would do it….,&amp;#34; - giving them an explicit strategy first and then giving them a
problem for which that strategy would apply is much more effective than
having them discover it on their own.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This was refreshing to hear after being beaten over the head on
discovery learning and constructivism for the past five or so
years as being the magic bullet for teachers. I shared more thoughts
on this a few weeks ago when I wrote about a SIGCSE paper presented by
&lt;a href=&#34;https://cestlaz.github.io/posts/sigcse2018-bootstrap/&#34;&gt;Bootstrap World&lt;/a&gt; that I very much liked.&lt;/p&gt;
&lt;p&gt;
Katie went on to talk about how the group found that while &amp;#34;discovery
learning&amp;#34; can be effective it can also be frustrating and lose kids
along the way. It also takes a lot of time and preparation, something
that&amp;#39;s short on supply in most public schools.&lt;/p&gt;
&lt;p&gt;
This made me think about the recent flurry
of discussion around the debunking of learning styles which had
previously been the magic bullet. When I started, the secret sauce was cooperative
learning.&lt;/p&gt;
&lt;p&gt;
Of course any good teacher knows there&amp;#39;s no magic bullet. You fill
your tool belt and chest with as much as you can and use what&amp;#39;s
best based on your strengths as a teacher combined with what will work
best with your students.&lt;/p&gt;
&lt;p&gt;
Another point that Katie made that I found refreshing had to do with
something she does with her classes. A good portion of a student&amp;#39;s grade is
based on what she calls a &amp;#34;booster.&amp;#34; Each student has to work one on
one with her on some project. The student either scores a 0 or a 100 -
the student keeps working with the direct support of the teacher until
it&amp;#39;s perfect.&lt;/p&gt;
&lt;p&gt;
The important thing that Katie said with respect to this is &amp;#34;I can
do this because my largest class is sixteen students.&amp;#34; No way could
this ever scale to a public school where a teacher can meet with over
150 students a day and barely has time eat lunch let alone
work one on one with a student in a suitably quiet place like an
office. The refreshing thing to hear was the acknowledgment of the
fact that what works in a rich private school won&amp;#39;t work in a public
school.&lt;/p&gt;
&lt;p&gt;
All to often education and yes, CS Ed is driven by people who
really have no clue. They&amp;#39;re anointed as thought leaders but they
don&amp;#39;t walk the walk. Some have some knowledge and experience but many
don&amp;#39;t. Until you&amp;#39;ve gotten a few years under your belt in a strap
cashed public school that takes all comers, don&amp;#39;t tell them how they
should do it. Katie didn&amp;#39;t - she acknowledged the problem - too bad so
many others don&amp;#39;t.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m looking forward to watching the rest of the video during a future
workout and might have more to share then. For now, take a look for
yourself.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tools and Complexity</title>
      <link>https://cestlaz.github.io/posts/tools-and-complexity/</link>
      <pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/tools-and-complexity/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://twitter.com/alfredtwo&#34;&gt;Alfred Thompson&lt;/a&gt; wrote about &lt;a href=&#34;http://blog.acthompson.net/2018/04/thoughts-on-where-cs-education-tools.html&#34;&gt;CS education tools&lt;/a&gt; earlier today. I&amp;#39;ve
also been meaning to write on the topic but from a different point of
view.&lt;/p&gt;
&lt;p&gt;
I do my best to keep up with the latest and greatest in the CS world
both on the academic side as well as the professional one. That&amp;#39;s not
really possible, but I do my best. When I have a small project to work
on I&amp;#39;ll some times use it as an excuse to play with some recent
technology. Over December, I wanted to write an application viewer to
use for company / student internship matching. I started by looking at
&lt;a href=&#34;https://reactjs.org/&#34;&gt;React&lt;/a&gt; but ended up using &lt;a href=&#34;https://vuejs.org/&#34;&gt;Vue.js&lt;/a&gt; which I liked much more for a variety
of reasons.&lt;/p&gt;
&lt;p&gt;
The viewer served it&amp;#39;s purpose but I think it can be turned into a
much more comprehensive student / employer internship platform. I
tried to steal a few minutes over this past week&amp;#39;s spring break to
start a rewrite using another toolset, Clojure, Clojurescript and
Reagent. I&amp;#39;m really liking the Clojure stack and using
Emacs and Cider for the IDE is really blowing me away.&lt;/p&gt;
&lt;p&gt;
What I&amp;#39;ve noticed is that for every new language of framework you also
have to learn a whole set of ancillary tools.&lt;/p&gt;
&lt;p&gt;
It didn&amp;#39;t used to be that way. Back in the day, things were much
simpler. I remembering doing work at Goldman Sachs, it was as simple
as typing something on the command line like &lt;code&gt;cc file1.c file2.c
file3.c&lt;/code&gt;. I of course had to be cutting edge and use fancy modern
tools like &lt;a href=&#34;https://www.gnu.org/software/make/&#34;&gt;Make&lt;/a&gt;. What&amp;#39;s more, the tools I used in industry were very
similar to what I used in college.&lt;/p&gt;
&lt;p&gt;
We now live in very different times.&lt;/p&gt;
&lt;p&gt;
If you go to the getting started guides for React or Vue it&amp;#39;s pretty easy to
get hello world up and running but beyond that you start to fall in to
the Javascript tooling hole. To start you need either &lt;strong&gt;npm&lt;/strong&gt; or &lt;strong&gt;yarn&lt;/strong&gt;
just to manage packages and dependencies. Then you need a build system
or bundler like &lt;strong&gt;webpack&lt;/strong&gt;, &lt;strong&gt;browserify&lt;/strong&gt;, or &lt;strong&gt;parcel&lt;/strong&gt; and that&amp;#39;s not even
considering older options like &lt;strong&gt;gulp&lt;/strong&gt; and &lt;strong&gt;grunt&lt;/strong&gt; and ancillary tools
like &lt;strong&gt;babel&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;
A typical React or Vue project is going to need a &lt;a href=&#34;https://github.com/krasimir/react-webpack-starter/blob/master/package.json&#34;&gt;project.json&lt;/a&gt; and
&lt;a href=&#34;https://github.com/krasimir/react-webpack-starter/blob/master/webpack.config.js&#34;&gt;webpack.config.js&lt;/a&gt; file and sometimes some other files as well. Check
out the links. They&amp;#39;re from a simple project template I found
online. Far from simple.&lt;/p&gt;
&lt;p&gt;
When I was playing with Vue.js a couple of months ago, I ended up
using Webpack to convert the source code into the final JS, take care
of live-reloading, and in general manage the project. I still have no
idea how most of it works. I don&amp;#39;t know if it&amp;#39;s just me but I&amp;#39;m very
uncomfortable relying on tools that I really don&amp;#39;t fully understand to
build my systems.&lt;/p&gt;
&lt;p&gt;
The Clojure world is little better with Leiningen and Boot. If you
don&amp;#39;t believe me, try to make heads or tails of &lt;a href=&#34;https://github.com/bhauman/figwheel-template/blob/master/src/leiningen/new/figwheel/project.clj&#34;&gt;this&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
While it&amp;#39;s true that as a professional you&amp;#39;ll likely use one set of
tools on a day to day basis and you&amp;#39;ll eventually get to know them
that doesn&amp;#39;t mean it&amp;#39;s not a good idea to prepare kids for what&amp;#39;s to
come.&lt;/p&gt;
&lt;p&gt;
On the K12 side we have drag and drop languages, specialized learning
IDEs like BlueJ, simple cut down IDEs like Dr Racket and completely
online environments like repl.it. All great starter tools that
insulate beginners from the complexities to come. College&amp;#39;s
might get closer to the &amp;#34;real world&amp;#34; but just a tad.&lt;/p&gt;
&lt;p&gt;
Don&amp;#39;t get me wrong, I like many of the tools used in K12
classes and there&amp;#39;s far too much complexity in the professional world to
throw at beginners. If we look at a student&amp;#39;s entire school
career, classes are already so packed with material it would be hard to
really prepare kids for the real world within their classes. You could
take that tried and true teacher / professor technique of just
requiring it and having the kids figure it out on their own but that&amp;#39;s
really just downright abusive.&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t have an answer for this one.&lt;/p&gt;
&lt;p&gt;
I have my kids use tools like Git and GitHub early along with using
testing frameworks and external libraries. I also try to move my
students to a general purpose programmable platform like Emacs or
Vim. I think these are sound practices but students will still have a
big learning curve when they finally get to industry.&lt;/p&gt;
&lt;p&gt;
What I really would love it to see the tooling become simpler and
documentation better. &lt;a href=&#34;https://github.com/parcel-bundler/parcel&#34;&gt;Parcel&lt;/a&gt;, a Javascript bundler is one of the newer
kids on the block and is much simpler and cleaner than alternatives
like Webpack. The new version of Clojure has it&amp;#39;s own command line
tool which is also simpler than the alternatives. Maybe we are already
moving in the right direction and this entire rant will become moot in a couple of years.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NYC CS4All - This Is Not The CS We&#39;re Looking For</title>
      <link>https://cestlaz.github.io/posts/this-is-not-the-cs-were-looking-for/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/this-is-not-the-cs-were-looking-for/</guid>
      <description>&lt;p&gt;
It&amp;#39;s no secret that I&amp;#39;m something of an old curmudgeon in the K12 CS
Education world and I&amp;#39;ve been critical of a number of initiatives and
organizations over the years but I&amp;#39;ve been pretty quiet on the CS4All
movement in NYC Department of Education. I&amp;#39;ve had and any number of
concerns though.&lt;/p&gt;
&lt;p&gt;
This past week at the inaugural meeting of New York City&amp;#39;s CSTA
chapter we got a taste of the &lt;a href=&#34;http://blueprint.cs4all.nyc/&#34;&gt;NYC CS4All Blueprint&lt;/a&gt;. A highlight was
this video:&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe src=&amp;#34;&lt;a href=&#34;https://player.vimeo.com/video/224494221&#34;&gt;https://player.vimeo.com/video/224494221&lt;/a&gt;&amp;#34; width=&amp;#34;640&amp;#34; height=&amp;#34;360&amp;#34; frameborder=&amp;#34;0&amp;#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/p&gt;
&lt;p&gt;
Along with the &lt;a href=&#34;http://blueprint.cs4all.nyc/resources/3/%0A&#34;&gt;supporting web page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
TL;DR - in a elementary school CS class, the students kept tapping out
drumbeats on the desk because they had drumming class the period
prior. Now the drumming teacher is teaching rhythms that match
segments of HTML so the students can tap and chant the line as a
memory aid.&lt;/p&gt;
&lt;p&gt;
Sure, it&amp;#39;s nice when teachers can work together to support each other
but at the end of the day this is a mnemonic aid to memorize
HTML. Nothing particularly innovative here. Mnemonics like this are
great until there are too many to keep track of or ones that are too
similar.&lt;/p&gt;
&lt;p&gt;
The part that saddened me was that this  was the video that was
chosen  as a highlight, an exemplar. It was OK but there was
nothing new or innovative. What was worse was that there was no
computer science.&lt;/p&gt;
&lt;p&gt;
The kids were memorizing HTML. As we watched the video, my neighbor
nudged me and asked &amp;#34;why are they memorizing HTML?&amp;#34; I would ask the
same question. Now, I do think that HTML or some other mechanism to
create content that can be shared with the world is important. Having
students get there work out in the word can be tremendously rewarding
and motivating. Also, although I&amp;#39;m not sold on it, some say that HTML
is a good stepping stone to CS but still.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s try an experiment.&lt;/p&gt;
&lt;p&gt;
Imagine that lesson but instead of HTML the kids were learning
Microsoft word so instead of a chant for &lt;code&gt;&amp;lt;a href=&amp;#34;&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt; you have a
chant for putting a link into a word document or instead of a chant
for &lt;code&gt;&amp;lt;b&amp;gt;somethingbold&amp;lt;/b&amp;gt;&lt;/code&gt; you have a chant like
&lt;code&gt;control-b-typestuff-then-control-b&lt;/code&gt;. Same lesson, same technique,
still no CS. You could also say that this was just one video and maybe
most of the year is about real CS. Maybe, but then why highlight this
on the CS4All web site as a featured resource.&lt;/p&gt;
&lt;p&gt;
This was disappointing but not surprising.&lt;/p&gt;
&lt;p&gt;
Some will say that kids aren&amp;#39;t ready for hardcore CS at that
age. That&amp;#39;s fine. We can have that discussion but if CS is appropriate
for whatever grade was in the video then it should be real CS. We can
also have endless discussing about what that is but memorizing HTML is
not it.&lt;/p&gt;
&lt;p&gt;
I wondered if the video was representative so I looked at &lt;a href=&#34;http://blueprint.cs4all.nyc/resources/5/&#34;&gt;another&lt;/a&gt;. It
turned out this was also a lesson on HTML and again the video could of
been about any number of subject areas. I will give this one credit
for highlighting that you can do &amp;#34;unplugged&amp;#34; activities but it wasn&amp;#39;t
really a CS activity.&lt;/p&gt;
&lt;p&gt;
Then there was &lt;a href=&#34;http://blueprint.cs4all.nyc/resources/15/&#34;&gt;this one&lt;/a&gt;. No video here but how we structure a CS
lesson. We have this outline:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Warm-up&lt;/li&gt;
&lt;li&gt;Mini lesson&lt;/li&gt;
&lt;li&gt;Independent work time&lt;/li&gt;
&lt;li&gt;Share session&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Or, as we used to say back in the stone age:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Do Now&lt;/li&gt;
&lt;li&gt;Instructional activity&lt;/li&gt;
&lt;li&gt;practice&lt;/li&gt;
&lt;li&gt;summary&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nothing new and nothing CS here. I used that model when I taught math
but deviated from it more and more as I developed my CS teaching
chops.&lt;/p&gt;
&lt;p&gt;
Finally I looked at &lt;a href=&#34;http://blueprint.cs4all.nyc/resources/24/%0A&#34;&gt;this one&lt;/a&gt;. For full disclosure I have to say that
Eric, the teacher, is a friend of mine and I &lt;strong&gt;&lt;strong&gt;know&lt;/strong&gt;&lt;/strong&gt; he&amp;#39;s a dynamite
teacher and I know he knows his stuff.&lt;/p&gt;
&lt;p&gt;
This video, however was all about differentiation. Just like the other
resources, there&amp;#39;s nothing wrong with them per se but there&amp;#39;s not
really about CS. You could reskin them for any subject.&lt;/p&gt;
&lt;p&gt;
I also agree with a lot of what Eric says in the video but as CS
Standards take hold and standardized exams become the norm we&amp;#39;ll find
that individualized instruction and meeting students where they are
is in direct conflict with the testing that comes with standards. I&amp;#39;ll
talk more about that in my standards rant that I keep putting off
writing.&lt;/p&gt;
&lt;p&gt;
Sure, the resources site has  a page with concepts like algorithms and
many schools, for better or worse, in the upper grades just fall back
on AP offerings but the more I dig the more it&amp;#39;s apparent to me that
CS4All in NY will be more about getting something into every classroom
rather than something appropriate and good.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Cost of AP Exams</title>
      <link>https://cestlaz.github.io/posts/cost-of-ap-exams/</link>
      <pubDate>Thu, 17 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cost-of-ap-exams/</guid>
      <description>&lt;p&gt;
Now that I&amp;#39;m back from vacation and summer&amp;#39;s winding down I thought
I&amp;#39;d start getting back to more classroom related posts. I still have a
few summer topics I want to write about – standards and side projects
in particular but I&amp;#39;m also looking forward to talking more about the
classroom since, after all, at my core, I&amp;#39;m a teacher. When I saw &lt;a href=&#34;http://www.slate.com/articles/technology/future_tense/2017/08/how_online_textbooks_could_help_more_students_take_ap_exams.html&#34;&gt;this&lt;/a&gt;
article in my inbox this morning I thought I&amp;#39;d talk about it.&lt;/p&gt;
&lt;p&gt;
In the piece, Lindsey Tepe since more kids are taking AP classes and
they&amp;#39;re very expensive, schools should look to lower other costs
related to AP classes so as to provide financial support so that
students can take that oh so important end of year exam:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;While the College Board continues to reimburse about one-third of the
test cost for eligible low-income students, only about half of states
are now offering any further financial assistance for students.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ms. Tepe&amp;#39;s solution? Lower text book costs. As a way of lowering
school costs, I&amp;#39;m all for it. I&amp;#39;ve used free online resources in lieu
of textbooks for years but the savings should go somewhere where it
can make a difference. Perhaps lowering class sizes. The fatal flaw in
Ms. Teps&amp;#39;s piece is that it continues spinning the misplaced narrative
that AP Exams are a very important part of a child&amp;#39;s education.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s be reminded of something: The AP Exam is one thing - an exam - a
single test at the end of the year.&lt;/p&gt;
&lt;p&gt;
The narrative is that students should take more and more AP classes,
that they&amp;#39;re somehow better for kids. Part of this is due to the
potential college credit and part is because the public has been
bamboozled by the ridiculous school ratings that give credit for AP
classes taken. Back in &amp;#34;the day,&amp;#34; AP classes were basically early
college. You could then argue that they were the most rigorous classes
offered in a school. AP Calc was basically college Calc. Same for
APCS-AB, AP-Bio and the rest. Now, with classes like APCS-P aimed to
be accessible to typical high school students in the lower grades,
they can&amp;#39;t (but still will) make that claim. In fact, at Stuy, my
former school, there are plenty of non AP classes that are more
rigorous than AP classes and the best AP teachers don&amp;#39;t always cover
the whole syllabus because they&amp;#39;re more concerned with their students
actually learning rather than scoring 5 on an exam.&lt;/p&gt;
&lt;p&gt;
On the college credit front, if a student has a high probability of
saving money through AP credit then I&amp;#39;m all for it but otherwise, it&amp;#39;s
just money going to the college board.&lt;/p&gt;
&lt;p&gt;
It seems ridiculous for me to have to write this but the important
part of a class is, you know, the class. Not the single exam given by
an outside agency at the end and graded after the semester concludes.&lt;/p&gt;
&lt;p&gt;
My suggestion? Offer college level work to students that are ready for
it but don&amp;#39;t push the AP exam. This would save a ton of money. What value
does the college board actually bring to the table? Remember, they&amp;#39;re
making a pretty penny on all of this testing. A math teacher should be
able to teach calculus with or without AP. A good text being used by
that teacher in class - be it free or paid for is actually much more
important to a student learning calculus than a single exam taken at
the end of the year. I&amp;#39;d go further and say that I&amp;#39;d trust the
teacher&amp;#39;s exam more than the college board&amp;#39;s. If a teacher knows the
math but needs to see some sample syllabi, they&amp;#39;re a web search
way. The same is true for most other college courses that have AP
equivalents and maybe even more so for computer science.&lt;/p&gt;
&lt;p&gt;
At the end of the day it should be about students learning not about
students taking high stakes exams.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A friendly reminder to use the right language when describing CS</title>
      <link>https://cestlaz.github.io/posts/languages-or-cs/</link>
      <pubDate>Mon, 10 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/languages-or-cs/</guid>
      <description>&lt;p&gt;
I was part of this conversation the other day:&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;When science teachers asked me if I taught AP Java I&amp;#39;d always respond by asking them if they taught AP Microscope.&lt;/p&gt;&amp;mdash; Mike Zamansky (@zamansky) &lt;a href=&#34;https://twitter.com/zamansky/status/883327927831711745&#34;&gt;July 7, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I always use that line to emphasize that I teach CS - a way of
thinking and problem solving and looking at the world. The languages
we use in our classes are tools to help us communicate ideas not the
ends but rather a means.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve spent the past couple of days at the CSTA conference. It&amp;#39;s been a
lot of fun. I&amp;#39;ve been spending the time with old friends and meeting
new ones and as everyone who knows me knows - I love talking shop.&lt;/p&gt;
&lt;p&gt;
I overheard a conversation today. One CS teacher describing what they
did to a few others. I overheard:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We teach Scratch then Swift and C++ and also teach Python&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I heard statements like this describing programs more than a couple of
times. I know we&amp;#39;re at a conference of CS Educators but even in this
community we have everything from beginners getting their feet wet to
hardcore computer scientists to everything in between.&lt;/p&gt;
&lt;p&gt;
We shouldn&amp;#39;t be teaching languages as an ends unto themselves and the
majority of us don&amp;#39;t.&lt;/p&gt;
&lt;p&gt;
What many of us do, though, is take the easy path and use the name of
a programming language to describe what we do rather than really
define what we do. This is why we hear &amp;#34;I teach Java&amp;#34; or &amp;#34;I teach a
class in Swift&amp;#34; even when the teacher teaching Java might really be
teaching Object Oriented program design and development or data
structures or something similar just using Java as the language or
tool.&lt;/p&gt;
&lt;p&gt;
I too fall into this trap but I try to catch myself. I try not to say
&amp;#34;I teach Scheme&amp;#34; but rather I&amp;#39;ll say &amp;#34;I teach Scheme. Actually, we&amp;#39;re
studying functional programming using Scheme as the language but for
convenience, I&amp;#39;ll just say Scheme for the rest of this talk….&amp;#34;&lt;/p&gt;
&lt;p&gt;
The words we use to describe our field set the tone. If we&amp;#39;re sloppy
and say &amp;#34;we teach Java,&amp;#34; it&amp;#39;s just like biology teacher saying &amp;#34;I
teach microscope.&amp;#34;&lt;/p&gt;
&lt;p&gt;
As we try to define our field in the K12 space and seek equal footing
with established subject areas it&amp;#39;s important that we use the right
language so that other educators and policy makers don&amp;#39;t get the wrong
idea.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Plea to AP teachers- don&#39;t measure yourself by your scores</title>
      <link>https://cestlaz.github.io/posts/teachers-you-arent-your-test-scores/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/teachers-you-arent-your-test-scores/</guid>
      <description>&lt;p&gt;
AP scores just came out. As usual, I see the posts and take part in
conversations where teachers talk about their results. Some are happy
about their results, some aren&amp;#39;t, some don&amp;#39;t really care.&lt;/p&gt;
&lt;p&gt;
I just want to make a plea to all AP teachers out there:&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;Don&amp;#39;t let your value be dictated by the college board or any other
exam.&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
I never really cared much about my students&amp;#39; actual AP scores. There
were a number of years when I never even saw the results. Of course, I
had a population that would do reasonably well regardless of teacher
so I was never placed under any pressure to &amp;#34;do better.&amp;#34; One year -
while the APCS-AB exam was still offered, my principal called me down
to discuss the results to see if we could get more kids scoring 4s and
5s (which most of the kids already did). I told him that I thought
we were doing fine, explained why I couldn&amp;#39;t advocate more teaching to
the test (such as more than paying lip service to the case study or
more rote practice on the multiple choice), and told him how I
measured our success as a program. He was happy with my answer and
that was that.&lt;/p&gt;
&lt;p&gt;
The AP exam is one test on one day and in my opinion the least
valuable measure of my students&amp;#39; achievement. This is one of
the reasons I was so dismayed by the CSEd community&amp;#39;s efforts in
pushing the AP exams - not the class or the subject but the actual exam.&lt;/p&gt;
&lt;p&gt;
So, how should you judge your success? That&amp;#39;s up to you. I can only
tell you how I judge myself.&lt;/p&gt;
&lt;p&gt;
First and foremost - and I know this sounds cheesy - are you a &amp;#34;force
for good&amp;#34; in your student&amp;#39;s lives. Do you leave them in a better
place? Have you opened the door to a possible future for them? Have
you helped them grow? Beyond that, have they progressed in your
subject and as students in general.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve had kids &amp;#34;fail&amp;#34; the AP exam and go on to wonderful careers in
tech and come back to thank me for giving them their start. I&amp;#39;ve also
had kids that have gone into other fields but appreciate what we&amp;#39;ve
done for them. I&amp;#39;ve also had my failures and I do mean my
failures. Students I couldn&amp;#39;t reach or couldn&amp;#39;t figure out how to
help.&lt;/p&gt;
&lt;p&gt;
As teachers, we work day to day trying to improve but we can get a
great overview of how we&amp;#39;re doing by using a much longer feedback
loop - looking at what our graduates are up to. When young teachers
would comment on former students coming back or running into them at
tech events that they would have graduates of their own in a few years
and invariably they do.&lt;/p&gt;
&lt;p&gt;
To really evaluate how you&amp;#39;re doing you have to go with the long
game. Very few people get that. I remember talking to a Google
Executive while I was designing CAPE 2010. He said something to the
effect of &amp;#34;I know we won&amp;#39;t know if this program works for about ten
years but we&amp;#39;ll have to come up with something short term to satisfy
the powers that be.&amp;#34;  That so few &amp;#34;get it&amp;#34; and need instant feedback
is one of the reasons that our society is so test driven. We shouldn&amp;#39;t
be. Our focus should be on helping the students learn and progress.&lt;/p&gt;
&lt;p&gt;
So don&amp;#39;t get distressed over AP results and don&amp;#39;t get to high on them
either. Certainly don&amp;#39;t use them to drive what and how you teach. Let
your students and your conscience be your guide.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SIGCSE 2017 - Recap</title>
      <link>https://cestlaz.github.io/posts/sigcse-2017-recap/</link>
      <pubDate>Tue, 14 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse-2017-recap/</guid>
      <description>
&lt;p&gt;As a high school teacher, I was never able to attend SIGCSE, the
conference of the ACM&amp;#39;s Special Interest Group on Computer Science
Education. Between the number of instructional days I would lose and
the cost, I could never justify going. Instead I looked over the
proceedings and read many of the papers.&lt;/p&gt;
&lt;p&gt;
Now that I&amp;#39;m at Hunter, I was finally able to attend. This year in
Seattle, the conference ran from Wednesday through Saturday. I was
part of a panel on &amp;#34;Tools we can&amp;#39;t live without.&amp;#34; Over the next few
weeks, I hope to blog about a number of things I thought and talked
with people about over the conference including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The path I use to teach git and why GitHub a good teaching tool&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(my talk).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The relationship of different CS Ed stakeholders - teachers,&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;researchers, organizations, etc.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Teaching at the high school level vs college - perceptions and&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;reality.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The challenges of tech tool adoption in schools.&lt;/li&gt;
&lt;li&gt;What&amp;#39;s going on in K12 CS Certification.&lt;/li&gt;
&lt;li&gt;Maybe some other stuff.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Today, some overall thoughts.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
The good
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
As with many conferences, the &amp;#34;hallway track&amp;#34; along with receptions
sponsored by &lt;a href=&#34;https://csnyc.org/our-work/cs4all&#34;&gt;the CS4All consurtium&lt;/a&gt;, &lt;a href=&#34;http://tealsk12.org&#34;&gt;TEALS&lt;/a&gt;, &lt;a href=&#34;http://code.org&#34;&gt;Code.org&lt;/a&gt; were terrific. I
was able to finally meet in person many people who I&amp;#39;ve only known
virtually and got to know many more as well. I left the conference
with a much larger address book and a long list of follow up
items. Being in Seattle, I also enjoyed being able to spend time with
people from &lt;a href=&#34;http://tealsk12.org&#34;&gt;TEALS&lt;/a&gt; and &lt;a href=&#34;http://code.org&#34;&gt;Code.org&lt;/a&gt;, two of the CS Ed groups working hard
to do some real good (yes - I do like and support these guys even
though I call them out on things I disagree with, but that&amp;#39;s the
subject of another post).&lt;/p&gt;
&lt;p&gt;
I attended sessions on CS certification, teacher preparation,
assessments, POGIL based instruction to name a few. They ranged from
valuable to interesting and to be honest, a couple of &amp;#34;what were they
thinking&amp;#34; but the overall experience was very much worth the trip. I
also got to speak to a number of wonderful students at the
poster sessions.&lt;/p&gt;
&lt;p&gt;
The keynotes are also well worth a read (sorry if you don&amp;#39;t have ACM
digital library access). &lt;a href=&#34;http://dl.acm.org/citation.cfm?id=3025045&amp;amp;CFID=738971273&amp;amp;CFTOKEN=22106692&#34;&gt;Jeannette Wing&lt;/a&gt; talked about the importance of
probability and statistics in CS Ed, and aspects of  &lt;a href=&#34;http://dl.acm.org/citation.cfm?id=3025047&amp;amp;CFID=738971273&amp;amp;CFTOKEN=22106692&#34;&gt;Gail Chapman&lt;/a&gt;&amp;#39;s talk
&amp;#34;Inspire, Innovate, and Improve…&amp;#34; keynote and &lt;a href=&#34;http://dl.acm.org/citation.cfm?id=3025046&amp;amp;CFID=738971273&amp;amp;CFTOKEN=22106692&#34;&gt;Mitch Resnick&lt;/a&gt;&amp;#39;s
&amp;#34;Fulfilling Papert&amp;#39;s Dream&amp;#34; both spoke to the educator inside me.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
The bad
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The biggest downside to me was that I found very little value added in
a number of the paper sessions over just reading the papers. Part of
this is probably because of my own over-inflated expectations given the
number of years I&amp;#39;ve waited to attend. Part of it though, was the fact
that sessions were so tightly packed that I didn&amp;#39;t have time to follow
up with presenters before having to run to the next
thing. Unfortunately, in some
cases, it was because the presenter merely
&amp;#34;read&amp;#34; the paper much as a professor sometimes just reads the slides
or the book to his class.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Other thoughts
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
One paper presentation I very much liked was &lt;a href=&#34;http://dl.acm.org/citation.cfm?id=3017701&amp;amp;CFID=738971273&amp;amp;CFTOKEN=22106692&#34;&gt;Exam Wrappers: Not a
Silver Bullet&lt;/a&gt; presented by &lt;a href=&#34;https://michellecraig.github.io/&#34;&gt;Michelle Craig&lt;/a&gt; and &lt;a href=&#34;http://pages.cpsc.ucalgary.ca/~bdstephe/&#34;&gt;Ben Stephenson&lt;/a&gt;. I
actually came in late since I was hustling over from the Code.org
lunch. The result was that I didn&amp;#39;t actually know what &amp;#34;Exam Wrappers&amp;#34;
were until well after the talk when I ran into &lt;a href=&#34;https://twitter.com/jkhuggins&#34;&gt;Jim Huggins&lt;/a&gt;. Exam
wrappers, in short, are merely when you require the students fill out something
for some credit when picking up their exams. The funny thing is that
it&amp;#39;s a strategy that high school teachers have used for years without
a special name and we already knew the good and bad of it without the
research but that&amp;#39;s not what I want to get at here. What I loved about
the talk, besides the fact that Ben and Michelle are clearly strong
presenters is that this was a negative result that was being
presented. I also loved the fact that they didn&amp;#39;t present their
research as gospel but rather pointed out the strengths and weaknesses
of their approach - they made a case to what and why we should pay
attention to and what should be taken with a grain of salt.&lt;/p&gt;
&lt;p&gt;
This was a major breath of fresh air after being exposed to so much
education &amp;#39;research&amp;#39; over the course of my life that the author or
presenter felt was just as strong as a mathematical proof rather than
an indication based on a specific experience or small set of
experiences.&lt;/p&gt;
&lt;p&gt;
I also felt a little weird at times during the week when west coast people seemed
to know me. I know I&amp;#39;m a loud mouthed curmudgeon and I go on my
periodic ed rants but given the dearth of comments on this blog I was
really surprised to get as many as &amp;#34;great to meet you in person after
reading your blog&amp;#34; or &amp;#34;we know you and your work&amp;#34; all week. It was
weird and somewhat humbling.&lt;/p&gt;
&lt;p&gt;
Finally, another highlight f`or me was that I got to catch up with
some of family.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/sigcse-seattle.jpg&#34; alt=&#34;/img/sigcse-seattle.jpg&#34; title=&#34;/img/sigcse-seattle.jpg&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
Already planning to submit something to present at SIGCSE 2018 in Baltimore.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Student Projects 2014 - Let&#39;s go to the video tape</title>
      <link>https://cestlaz.github.io/posts/2014-06-23-softdev-videos-2014/</link>
      <pubDate>Mon, 23 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-06-23-softdev-videos-2014/</guid>
      <description>&lt;!DOCTYPE html&gt;



&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
Just completed the second time through for my Software Development
course. Last year we had a great time at our Demo Night hosted at
Google.
&lt;/p&gt;

&lt;p&gt;
This year, unfortunately, due to a variety of reasons, we couldn&#39;t get
the event together. Still, the kids did great work so I thought I&#39;d
share.
&lt;/p&gt;

&lt;p&gt;
This year, I asked each group to make a short video.
&lt;/p&gt;

&lt;p&gt;
First up, we&#39;ve got bit&amp;lt;&amp;lt;shift - a search engine for code. Nice idea
and a really slick interface.
&lt;/p&gt;

&lt;div class=&#34;center&#34;&gt;
&lt;iframe src=&#34;//player.vimeo.com/video/98697078&#34; width=&#34;500&#34; height=&#34;281&#34; frameborder=&#34;0&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt; &lt;p&gt;&lt;a href=&#34;http://vimeo.com/98697078&#34;&gt;bitshift: a source code search engine&lt;/a&gt; from &lt;a href=&#34;http://vimeo.com/ear&#34;&gt;Ben Kurtovic&lt;/a&gt; on &lt;a href=&#34;https://vimeo.com&#34;&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;


&lt;p&gt;
Next up, we&#39;ve got Socialpedia - our answer to Klout -
&lt;/p&gt;


&lt;div class=&#34;center&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/uhLZBsZWQGk&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;
And then Twitch Rock-em-Sock-em Robots -
&lt;/p&gt;

&lt;div class=&#34;center&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34;
src=&#34;//www.youtube.com/embed/Am3PTB_FvNs&#34; frameborder=&#34;0&#34;
allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;
There were a bunch of other neat projects including a site that
crowd-sources 311 trash related problems and a version of the game
&#34;Frozen Synapse&#34; where you can program your forces using an embedded
Lisp interpreter.
&lt;/p&gt;

&lt;p&gt;
Very cool stuff.
&lt;/p&gt;

&lt;p&gt;
Good job guys!!!!!
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Build it first</title>
      <link>https://cestlaz.github.io/posts/2013-11-19-build_it/</link>
      <pubDate>Tue, 19 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-11-19-build_it/</guid>
      <description>&lt;p&gt;The subtitle of this post is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;and why my students are going to hate me tomorrow.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When my good friend Gerry Seidman talks to my classes, he frequently
says &amp;ldquo;never use a data structure or algorithm you couldn&amp;rsquo;t build yourself.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;This doesn&amp;rsquo;t mean that you have to write everything from scratch, just
that you should have some knowledge as to what&amp;rsquo;s going on under the
hood. I find that all too often young programmers just rely on APIs
and libraries and really don&amp;rsquo;t know how their computers and programs are working.&lt;/p&gt;
&lt;p&gt;And it&amp;rsquo;s never too early to start.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ve been spending time talking about arrays recently. Now, most of
my students have some exposure to Python and so we started talking
about the flexibility and power of the Python list vs the limited
facilities of the Java array.&lt;/p&gt;
&lt;p&gt;How to solve the problem and make Java easier to work with? Let&amp;rsquo;s
write our own list class. We started simple:&lt;/p&gt;
&lt;p&gt;public class myList {
private int[] data;
private int numItems;&lt;/p&gt;
&lt;p&gt;public myList() {
data = new int[5];
numItems = 0;
}&lt;/p&gt;
&lt;p&gt;// append to the end of the list
public add(int d) {
if (numItems &amp;gt;= data.length) {
tmp = new int[data.length+data.length/2];
for (int i=0;i&amp;lt;numItems;i++)
tmp[i]=data[i];
data = tmp;
}&lt;/p&gt;
&lt;p&gt;data[numItems]=d;
numItems = numItems + 1;
}
}&lt;/p&gt;
&lt;p&gt;from there we added functionality such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Inserting in arbitrary locations&lt;/li&gt;
&lt;li&gt;Removing items from the list&lt;/li&gt;
&lt;li&gt;Searching for an item&lt;/li&gt;
&lt;li&gt;Setting the item at a location to a value&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And of course we were also able to talk about things like refactoring
out growing the array into a private method.&lt;/p&gt;
&lt;p&gt;And tonight the classes are changing the internal array from int[] to String[].&lt;/p&gt;
&lt;p&gt;Of course, what we&amp;rsquo;re building is an ArrayList. Tomorrow we&amp;rsquo;ll reveal
that little fact and of course the classes will all hate me, but then,
they&amp;rsquo;ll really understand what&amp;rsquo;s going on under the hood.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Back to Work</title>
      <link>https://cestlaz.github.io/posts/2012-11-02-back-to-work/</link>
      <pubDate>Fri, 02 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-11-02-back-to-work/</guid>
      <description>&lt;h3 id=&#34;on-going-back-to-work-today&#34;&gt;On going back to work today&lt;/h3&gt;
&lt;p&gt;Since school was still out due to Sandy, we ran a second online class
yesterday. At the end of the session, which I&amp;rsquo;ll summarize below, I
told the class what I wanted them to accomplish today and over the
weekend. One student queried &amp;ldquo;you mean no class on Friday :-(?&amp;rdquo; Alas
no &amp;ndash; while students aren&amp;rsquo;t reporting to school this morning, teachers
are.&lt;/p&gt;
&lt;p&gt;Of course the logic as to why is far from sound. Some schools are
fine, some not, in our case, there&amp;rsquo;s no subway service south of 34th
street or coming in from Brooklyn and we&amp;rsquo;re located near the tip of
Manhattan.&lt;/p&gt;
&lt;p&gt;What are we going to do? Who knows. We don&amp;rsquo;t have lessons to plan and
while Stuy has power, phones and internet are out. Professional
development? Even when planned extensively, I&amp;rsquo;ve found it to be mostly
useless (I always have to sit through math PD, for example, learning
how to use a graphing calculator).&lt;/p&gt;
&lt;p&gt;So, we&amp;rsquo;re going to report in for no real purpose. Best I can figure,
the city wants teachers in so they can call it a professional
development day then they can try to change things so that students
will report during Brooklyn Queens day next semester thus restoring
one instructional day lost this week. Not a bad idea to recapture the
day but to make teachers - coming from all over the area - trudge in
for no purpose just to play politics is distasteful but unfortunately typical.&lt;/p&gt;
&lt;p&gt;To add to the insult, not only are us teachers still in the dark as to
what&amp;rsquo;s going on, we weren&amp;rsquo;t even told when to report until after
midnight yesterday. I woke up at my usual 5:00am to exercise but first
checked my email &amp;ndash; waiting was an email from Chancellor Dennis
Walcot. I recieved it at 12:52 this morning. This was when I was first
told that I was to report to school at 10:00am. I can&amp;rsquo;t believe this
decision couldn&amp;rsquo;t have been made and emailed out a few hours
earlier. In any event, I&amp;rsquo;m waiting until 10:00 to get in - I&amp;rsquo;ve often
found the building locked when I&amp;rsquo;ve shown up before official opening hours.&lt;/p&gt;
&lt;p&gt;So now for the part of my job that I actually enjoy:&lt;/p&gt;
&lt;h3 id=&#34;how-did-yesterdays-online-class-go&#34;&gt;How did yesterday&amp;rsquo;s online class go?&lt;/h3&gt;
&lt;p&gt;Today&amp;rsquo;s class was a wrapup of a mini project &amp;ndash; basically an
add-a-line story site. You can see an unfinished version that two of
the students put together &lt;a href=&#34;http://ml7.stuycs.org:5200&#34;&gt;here&lt;/a&gt;. You can
see more of the stuff we are using on our &lt;a href=&#34;http://github.com/organizations/stuycs-ml7&#34;&gt;class github
page&lt;/a&gt;. The students are
using &lt;a href=&#34;http://flask.pocoo.org&#34;&gt;Flask&lt;/a&gt; which is a python website
generator along with &lt;a href=&#34;http://www.mongodb.org&#34;&gt;MongoDB&lt;/a&gt;. We had to tie
up some loose ends.&lt;/p&gt;
&lt;p&gt;We again broadcast a Google+ hangout live through YouTube and we again
used a google doc as a chat space. This time we used the right hand
side bar for comments and only used the document for more permanent
material (a web refernce for example). It worked much better.  The
vertical flow of comments on the sidebar were much easier to track and
work with than a freeform document.&lt;/p&gt;
&lt;p&gt;The session still had the time delay problem and the feedback loop is
still a killer but the students again seemed to enjoy the
experience. This is clearly not a replacement for in person teaching,
but again, better than nothing on a day off.&lt;/p&gt;
&lt;h3 id=&#34;and-a-note-on-the-stuy-cs-culture&#34;&gt;And a note on the Stuy CS Culture&lt;/h3&gt;
&lt;p&gt;The seniors were game for this experiment and would be happy to go
again today if we were able to.  They also continually surprise me in
little ways. When we started this mini project, we all had to learn
how to use MongoDB (myself included). At first I had a hard time
confirming that they had done the outside work to learn the MongoDB
specifics. Only as they continually gave me better alternatives to my
approaches did I know that they were on top of things.&lt;/p&gt;
&lt;p&gt;On the other hand, my sophomores were much less receptive to an online
class during the hurricane days. A handful wanted to give it a go, but
the majority never responded to my email. Why was that?&lt;/p&gt;
&lt;p&gt;I have a few thoughts.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A big reason is that I&amp;rsquo;ve only been with my sophomores for a short
time. We haven&amp;rsquo;t yet built the rapport and culture that exists in my
senior classes. I always notice a difference in class attitude around
Halloween but we really don&amp;rsquo;t have the feeling of family until late
November or some time in December.&lt;/li&gt;
&lt;li&gt;The sophomores are in a required course, the seniors an elective. I
think this is secondary to the culture / rapport but I&amp;rsquo;m sure it has
an effect.&lt;/li&gt;
&lt;li&gt;I believe the seniors have a better understanding that what we&amp;rsquo;re doing in class is to their benefit and the sophomores are still&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;rsquo;m going to have to pay more attention to the time line from when
students come into my class and when they become part of &amp;ldquo;the family.&amp;rdquo;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sandy Bridge and Screen Casting</title>
      <link>https://cestlaz.github.io/posts/2012-10-31-sandy-bridge/</link>
      <pubDate>Wed, 31 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-10-31-sandy-bridge/</guid>
      <description>&lt;!DOCTYPE html&gt;


Here&#39;s what the bridge leading across the West Side Highway over to
Stuy during the storm. Hence the title with the weak tech reference.

&lt;div align=&#34;center&#34;&gt;
&lt;img  width=&#34;300&#34; src=&#34;https://cestlaz.github.io/img/hurricane-bridge.jpg&#34;&gt;
&lt;/div&gt;

The storm has kept the schools closed all week so it&#39;s as good a
time as any to try to resurrect this blog.
&lt;p&gt;
As you can see, I&#39;ve moved from blogger to a Jekyll based blog hosted
on Github. I&#39;m really liking the way it works but more on that at a
later date.
&lt;p&gt;
Some time Monday evening or Tuesday morning, I asked Batya if she
thought my seniors would be up for a livestreamed class (Batya, my
daughter, for anyone who doesn&#39;t know, is in one of the sections of
the class). It turned out they were all in.
&lt;p&gt;
I&#39;ve got to say that I&#39;ve got amazing classes -- the fact that they&#39;re
into the same brand of insanity as I am and even willing to go again tomorrow isawesome.
&lt;p&gt;
So, here was today&#39;s experiment:
&lt;p&gt;
A Google+ hangout based live stream of Stuyvesant&#39;s
Software Development class. In my favor was the fact that I was just
going to introduce CSS - not a subject that lends itself to deep
classroom discussion. Against me was the use of technologies I haven&#39;t
used before and the fact that we have about 64 students that I was
hoping to reach.
&lt;p&gt;
So, how did it go?
&lt;p&gt;

&lt;h3&gt;First, let&#39;s talk about the technical side.&lt;/h3&gt;

Here&#39;s the basic setup:

&lt;img src=&#34;https://cestlaz.github.io/img/screenshot.png&#34;&gt;

I&#39;ve got two monitors and Google would only broadcast the screenshot
from the smaller one on the right. It had Emacs and a chrome going
most of the time with an occasional shell. While teaching about CSS, I
also introduced the students
to &lt;a href=&#34;https://github.com/magit/magit/downloads&#34;&gt;Magit&lt;/a&gt; as
well as
Emacs &lt;a href=&#34;https://github.com/skeeto/impatient-mode&#34;&gt;impatient&lt;/a&gt;
mode both of which are awesome. On the left hand screen I had the
actual Hangout as well as the Google shared doc.
&lt;p&gt;
It turns out that you can&#39;t make a public Hangout and also stream it
live on YouTube, you can only invite people in your circles. Since
most of my students aren&#39;t in my circles, only a few could &#34;join&#34; the
Hangout. Most watched the YouTube stream and we all connected to a
shared Google Doc for notes and questions.
&lt;p&gt;
The Google Doc turned out not to be the best idea. It got everyone
writing in the same document but people ended up writing all over the
document. If something wasn&#39;t on the screen I wouldn&#39;t see it. We&#39;re
going to try something more sequential tomorrow -- maybe disqus
comments.
&lt;p&gt;
The other two problems were the low resolution of the screenshot
broadcast and the lag. I really had to blow up the font size. If
anyone has any ideas how to do this well, please share. The lag was
also a problem since it kept me from having anything resembling a reasonable feedback loop.
&lt;p&gt;
On the other hand, my students were left with this enduring image of me:


&lt;div align=center&gt;&lt;img width=50% src=&#34;https://cestlaz.github.io/img/monocle.jpg&#34;&gt;&lt;/div&gt;

&lt;h3&gt;And the view from a teacher&lt;/h3&gt;

On the one hand, it was pretty cool to be at home and able to work
with my students but there were some major deficiencies:

&lt;dl&gt;
&lt;dt&gt;Can&#39;t see the audience&lt;/dt&gt;
&lt;dd&gt;Even at best, with the Hangout you can only see 10 people. I&#39;m guessing it feels like a stage actor doing a movie. I was talking but couldn&#39;t see my audience. No nodding heads, no nodding off heads, just talking to a screen. It was a little disconcerting. Teachers adjust to their class all the time both consciously and subconsciously. You might do something overt like call on a particular student or maybe sense it&#39;s time for a joke or even little things like how or where you stand. All of this was lost.&lt;/dd&gt;
&lt;dt&gt;Need a better chatroom&lt;/dt&gt;
&lt;dd&gt;I mentioned that the Google Doc wasn&#39;t a great idea. I think
something that&#39;s more vertical like a chatroom will work better. I&#39;ll
know tomorrow.&lt;/dd&gt;
&lt;dt&gt;An shared board space would be very cool&lt;/dt&gt;
&lt;dd&gt;The other missing piece is a way for the students to directly interact with what I&#39;m presenting. A shared Emacs would be amazing.&lt;/dd&gt;
&lt;dt&gt;The delay is a killer&lt;/dt&gt;
&lt;dd&gt;This was also a problem. I found myself saying or doing something then waiting until something came through the document. This hurt the flow considerably&lt;/dd&gt;

I really found the experience enlightening. People keep talking about
recorded lectures and MOOCS and all that but if anything, today&#39;s
experience just confirms to me that there&#39;s nothing like an in class
teacher, particularly with a small group of students.

That said, I think this was a good experience and my students seem to
agree. We spent part of an otherwise unproductive day in a productive
manner and we&#39;re planning on doing it again tomorrow.

&lt;p&gt;
Since Students will be home until Monday, I&#39;d like to go for a third
class on Friday but I&#39;ll be back at work so it looks like no class
after tomorrow until Monday.

&lt;p&gt;
Comments?


</description>
    </item>
    
    <item>
      <title>Anyone can cook</title>
      <link>https://cestlaz.github.io/posts/2012-04-15-anyone-can-cook/</link>
      <pubDate>Sun, 15 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-04-15-anyone-can-cook/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;div style=&#34;text-align: center;&#34;&gt;&lt;span style=&#34;font-size: x-large;&#34;&gt;Anyone can cook&lt;/span&gt; - Chef Gusteau&lt;/div&gt;&lt;br /&gt;These days the rage seems anyone can code.&lt;br /&gt;&lt;br /&gt;On line attempts to teach coding and computing abound.&lt;br /&gt;&lt;br /&gt;We&#39;ve got Udacity and Coursera trying to bring college level academic offerings to the masses on one extreme and more down to earth &#34;learn to code&#34; efforts with Codecademy getting the most press.&lt;br /&gt;&lt;br /&gt;While I applaud any effort to make knowledge more accessible, there are a lot of unanswered questions as to the effectiveness of these latest attempts. Recent posts by&amp;nbsp;&lt;a href=&#34;http://blog.mrmeyer.com/?p=13213&#34;&gt;Dan Meyer&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href=&#34;http://hackeducation.com/2012/04/14/udacity-cs101/&#34;&gt;Audrey Watters&lt;/a&gt;&amp;nbsp;have started to raise questions and in my opinion some of the hype has worn off.&lt;br /&gt;&lt;br /&gt;At some point, I plan to talk at length about the Udacity and Coursera offerings as well as attempts to increase on line course offerings at the high school levels. I&#39;ll talk about the difficulties and dangers that lie ahead.&lt;br /&gt;&lt;br /&gt;Today, I&#39;d like to talk about the more vocational offerings such as what Codecademy is doing.&lt;br /&gt;&lt;br /&gt;The premise seems to be that anyone can code and that everyone should code. I&#39;ve been thinking about this for a while and I keep coming back to the question, &#34;what&#39;s the endgame?&#34;&lt;br /&gt;&lt;br /&gt;Teaching Javascript, HTML and the like narrowly focuses on creating web pages. Even if we forget about difficulties of on line learning that include lack of an interactive feedback loop, lack of follow up, &amp;nbsp;a narrow curriculum, and the fact that programming beyond the basics is not easy, what&#39;s the goal? While I find making an interactive web site cool, I don&#39;t know how much it benefits the masses.&lt;br /&gt;&lt;br /&gt;One could argue that the mental exercise of programming is a benefit and having a better understanding of how a computer works is a good thing. I&#39;d agree, but what we really could benefit from is a different paradigm in terms of how we approach using computers. A new approach would make even rudimentary scripting skills of greater value to all.&lt;br /&gt;&lt;br /&gt;Most of us use computers as program loaders. That is, we sit down, load our word processor, edit something, and exit the word processor. Load our web browser, search the web, exit, load the next program, do something, etc. We might have multiple programs up at the same time, but we use them in isolation.&lt;br /&gt;&lt;br /&gt;This is how most people&#39;s computing experience has evolved.&lt;br /&gt;&lt;br /&gt;With this mindset, I&#39;m not sure how useful coding will be for the masses. People might benefit from some rudimentary scripting a la Excel macros or Google App Scripts, but power users already do this. I don&#39;t think that the ability to program within the constraints of scripting individual applications will be a game changer. &amp;nbsp;To make rudimentary programming skills valuable we must use computers in a way that allows us to use simple techniques to tie together powerful applications.&lt;br /&gt;&lt;br /&gt;A few years ago, right before our Christmas break, I stopped over in the Math Chairman&#39;s office to wish him a good holiday. Danny was hard at work. He was frantically trying to change the math web site before he left.&lt;br /&gt;&lt;br /&gt;The math site was a mess. It consisted of a few dozen loosely arranged folders each with multiple sub folders. Danny was looking in each folder for old sample final exams, each saved as a Tiff file. He would load the file into Photoshop, convert it to another format and save it. He would then change the corresponding HTML file to reference the new file. He had been at it for hours with no end in sight. I said &#34;Danny, I&#39;ve got this, go home.&#34;&lt;br /&gt;&lt;br /&gt;I went to my office, wrote a small shell script, maybe 10 lines, hit enter, got on my bike and rode home. When I got there, the job was done.&lt;br /&gt;&lt;br /&gt;Now Danny&#39;s a really smart guy and he&#39;s technically savvy. The difference is that I was taught to try to tie programs together through the command line while he was taught to do things in the Windows/Mac way of loading one program and using it in isolation. I used a simple shell script to tie together a number of powerful Linux applications (find, imagemagick, sed) rather than pointing and clicking over and over again.&lt;br /&gt;&lt;br /&gt;I&#39;ve seen this &#34;program loader&#34; mind set time and time again and in surprising places. My good friend and colleague&amp;nbsp;&lt;a href=&#34;http://garyrubinstein.teachforus.org/&#34;&gt;Gary Rubenstein&lt;/a&gt;&amp;nbsp;has done a lot of work debunking the &#34;educational reformers&#34; that are currently in power. Gary had been using Excel to do all his analysis until I pointed out that he could download his data and use simple Python scripts to greater effect. Why was I&amp;nbsp;surprised that Gary wasn&#39;t already doing this? Well, in addition to being an amazing math teacher, Gary holds a Masters degree in Computer Science and had worked as a professional programmer in a prior life.&lt;br /&gt;&lt;br /&gt;Of course, our life isn&#39;t made any easier with closed file formats and vendors that try to isolate their data, but if we could re-educate people to use computers across applications, that would make rudimentary programming useful to all and then indeed there would be a reason for everyone to code.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-448488222916899193?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>CS Stress</title>
      <link>https://cestlaz.github.io/posts/2012-01-29-cs-stress/</link>
      <pubDate>Sun, 29 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-01-29-cs-stress/</guid>
      <description>&lt;!DOCTYPE html&gt;

I&#39;ve been mostly underwater for the last couple of weeks.&lt;br /&gt;&lt;br /&gt;End of term issues combined with the Academy of Software Engineering announcement has pretty much eaten up all of my out of class time.&lt;br /&gt;&lt;br /&gt;It&#39;s going to be a week or so before I can finish writing the posts I was planning on, but it looks like a storm is brewing around Stuyvesant and Computer Science so I thought I&#39;d put up this short semi-related post.&lt;br /&gt;&lt;br /&gt;Stuyvesant has a reputation of being something of a pressure cooker. The day can be as long as ten periods and it&#39;s not uncommon for a student to take three or more AP classes, even before the senior year. The question of student workload and stress has been a hot topic for a number of years.&lt;br /&gt;&lt;br /&gt;There&#39;s frequently tension over how many courses and which courses a student should be allowed to take. &amp;nbsp;Usually, this revolves around the school placing a limit on the number of classes, or more specifically, the number of A.P. classes a student can take. Most recently, the conversation looks to be turning to the number of classes a student can take overall.&lt;br /&gt;&lt;br /&gt;Given that most A.P. classes fall within a Stuyvesant student&#39;s required sequence of classes - that is, Calculus is just &#34;the next math class&#34; and A.P. U.S. History is slotted in place of a students regular U.S. History course, limiting the number of classes a student can take, A.P. or otherwise could have a major impact on Computer Science at Stuyvesant.&lt;br /&gt;&lt;br /&gt;What&#39;s most disturbing is that limiting student options in terms of courses may not do anything to decrease stress and workload. No one has looked at what is actually going on in student&#39;s required classes.&lt;br /&gt;&lt;br /&gt;I decided to collect some information from our students. I sent out a survey to five of our seven A.P. C.S. classes (three of mine, two of JonAlf&#39;s -- the other two classes don&#39;t have a mailing list). I asked them to rate the work load and stress factor for A.P. CS, their typical Stuy course and their typical Stuy A.P.course. So far, I&#39;ve gotten 80 responses (out of about 150 students emailed). Here&#39;s what we got (ratings were on a 1-10 scale):&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;&lt;/th&gt;&lt;th&gt;A.P. C.S.&lt;/th&gt;&lt;th&gt;Reg. Class&lt;/th&gt;&lt;th&gt;A.P. Class&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Workload avgs   &lt;/td&gt;&lt;td&gt;4.97    &lt;/td&gt;   &lt;td&gt;6.65    &lt;/td&gt;   &lt;td&gt;7.13    &lt;/td&gt;   &lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Workload dev   &lt;/td&gt;&lt;td&gt;1.94    &lt;/td&gt;   &lt;td&gt;1.41   &lt;/td&gt;   &lt;td&gt;1.52   &lt;/td&gt;   &lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Stress avgs   &lt;/td&gt;&lt;td&gt;4.67   &lt;/td&gt;   &lt;td&gt;6.39    &lt;/td&gt;   &lt;td&gt;6.94   &lt;/td&gt;   &lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Stress dev   &lt;/td&gt;&lt;td&gt;2.24   &lt;/td&gt;   &lt;td&gt;1.63    &lt;/td&gt;   &lt;td&gt;1.64    &lt;/td&gt;   &lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;I know this isn&#39;t really hard data, but it seems that our A.P. C.S. classes are considered to be both easier and less stressful than other classes at Stuyvesant. Given that our kids do very well at C.S., we&#39;re probably doing something right and it will be a shame if student opportunities become limited. I&#39;ll certainly write more on this as the situation develops.&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;For you educators out there, is stress an issue at your schools and how do you deal with making room for students to take CS at your schools?&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-7465860293098412736?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Reboot</title>
      <link>https://cestlaz.github.io/posts/2011-11-27-reboot/</link>
      <pubDate>Sun, 27 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2011-11-27-reboot/</guid>
      <description>&lt;!DOCTYPE html&gt;

A couple of weeks ago, I attended the K-12 workshop at the Grace Hopper Celebration of Women in Computing Conference. It was great to reconnect with some old friends, make some new ones, and talk shop for the weekend.&lt;br /&gt;&lt;br /&gt;One result was that I promised to start blogging again.&lt;br /&gt;&lt;br /&gt;I&#39;ve got a number of ideas for posts lined up. Some on pedagogy, some technical, and some cultural. Hope you enjoy them.&lt;br /&gt;&lt;br /&gt;Earlier today Ben Chun tweeted about this post:&amp;nbsp;&lt;a href=&#34;http://worrydream.com/SomeThoughtsOnTeaching/&#34;&gt;http://worrydream.com/SomeThoughtsOnTeaching/&lt;/a&gt;. &amp;nbsp;To summarize -- teachers should practice what they preach. In the post, Bret Victor wonders if there are calculus teachers who spend their evenings doing calculus.&lt;br /&gt;&lt;br /&gt;I know a number of math teachers who spend a considerable amount of their free time working on problems and refining their math skills, I also know many who don&#39;t.&lt;br /&gt;&lt;br /&gt;I know wonderful, inspirational teachers in both camps. I&#39;ve also known weak teachers that fall into both categories. Great teachers in both categories also spend large amounts of time working on how to best deliver instruction.&lt;br /&gt;&lt;br /&gt;Before I started developing the computer science program at Stuyvesant, there were one or two sections of A.P. Computer Science. They were taught by a terrific teacher -- one of my mentors and role models, but he was a math guy and not passionate about CS. When I took over, the enrollment&amp;nbsp;immediately&amp;nbsp;shot up. Not because I was any great shakes, and Dave, the previous teacher was legendary. Rather, the students knew I loved CS. Part of that love was that I enjoy solving problems with computers, coding and what have you. The students can tell.&lt;br /&gt;&lt;br /&gt;The fact that I code is a byproduct of my passion and part of the whole package that defines me as a teacher and a person. Whatever success I achieve is a result of this package. It&#39;s something I enjoy, and it also keeps me current with the field.&lt;br /&gt;&lt;br /&gt;I&#39;ve seen &#34;naturals&#34; who are just great teachers and get by without a passion for their subjects. More often than not, there&#39;s a ceiling in terms of what they can give their students either in terms of content, or more importantly, in terms of&amp;nbsp;inspiration. Some times the ceiling is high enough that there isn&#39;t a problem.&lt;br /&gt;&lt;br /&gt;Over the years, my &#34;practice&#34; has taken different shapes. Early on, while my students were working on&amp;nbsp;&lt;a href=&#34;http://www.usaco.org/&#34;&gt;USACO&lt;/a&gt;&amp;nbsp;problems. I figured I had better be able to represent, so I started doing them. Later on, I would write systems to support my teaching.&lt;br /&gt;&lt;br /&gt;More recently, I&#39;ve been lucky enough to be surrounded by a number of like minded educators. We frequently share little projects we work on.&lt;br /&gt;&lt;br /&gt;This semester, I&#39;ve been taking the Stanford on line&amp;nbsp;&lt;a href=&#34;http://ai-class.org/&#34;&gt;AI&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href=&#34;http://ml-class.org/&#34;&gt;ML&lt;/a&gt;&amp;nbsp;classes -- both have been lots of fun.&lt;br /&gt;&lt;br /&gt;This is just what I do and who I am and it is reflected in how I teach.&lt;br /&gt;&lt;br /&gt;Of course, time and job constraints make coding difficult during the school year. With ~150 students, lesson planning, grading, and ancillary responsibilities take their tolls.&lt;br /&gt;&lt;br /&gt;So, I guess I&#39;m an example of what Bret Victor was talking about. I&#39;m not sure I fully agree with his thesis, but it seems to work for me.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-1460836429704454417?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s Next</title>
      <link>https://cestlaz.github.io/posts/2010-02-18-whats-next/</link>
      <pubDate>Thu, 18 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-02-18-whats-next/</guid>
      <description>&lt;!DOCTYPE html&gt;

Just a short follow up on the last post.&lt;br /&gt;&lt;br /&gt;In thinking about how I frequently programs, once I have a plan, I work on one part of the project, and then ask myself &#34;what&#39;s next?&#34; That is, what is the next step towards completion.&lt;br /&gt; &lt;br /&gt;It reminded me about a guest speaker we had a about a year and a half ago at one of our &#34;professional development&#34; days. For the past two years, our school has had &#34;writing across the curriculum&#34; as one of it&#39;s goals. While it&#39;s a laudable idea, I find the rationale for this goal to be poorly communicated to our faculty and the implementation weak at best.&lt;br /&gt;&lt;br /&gt;Regardless, the guest speaker, &lt;a href=&#34;http://en.wikipedia.org/wiki/William_Zinsser&#34;&gt;William Zinsser&lt;/a&gt;, made a few good points.&lt;br /&gt;&lt;br /&gt; The most important reason for most of us to write is to convey ideas or arguments. In short, communication. Many students have problems organizing and ordering their thoughts and as a result, their writing is all over the place. Zinsser simplified it to the following:&lt;br /&gt;&lt;br /&gt;&lt;ol&gt;&lt;li&gt;What does the audience know?&lt;/li&gt;&lt;li&gt;What do they need to know next?&lt;/li&gt;&lt;/ol&gt;That drives your next sentence. You continue this 1-2 punch until you&#39;ve communicated your ideas.&lt;br /&gt;&lt;br /&gt;This makes loads of sense, but here I was 40 years old and it was the first time I heard writing explained this way. What really struck me, however was that this concept wasn&#39;t new at all. Every ninth or tenth grader goes through this process time and time again.&lt;br /&gt;&lt;br /&gt;Think about geometric proof. We have some given information and a conclusion we wish to prove. At each step along the way its:&lt;br /&gt;&lt;br /&gt;&lt;ol&gt;&lt;li&gt;What do we know so far?&lt;/li&gt;&lt;li&gt;What&#39;s the next step to get us closer to the conclusion?&lt;/li&gt;&lt;/ol&gt;&lt;br /&gt;Same idea.&lt;br /&gt;&lt;br /&gt;The same can be said for program development.&lt;br /&gt;&lt;br /&gt;Of course this makes tremendous sense since all thee things: writing, proof, and programming, are methods of communication.&lt;br /&gt;&lt;br /&gt;Just something to think about.&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-1983623605693836355?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>They teach programming, don&#39;t they?</title>
      <link>https://cestlaz.github.io/posts/2010-02-15-they-teach-programming-dont-they/</link>
      <pubDate>Mon, 15 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-02-15-they-teach-programming-dont-they/</guid>
      <description>&lt;!DOCTYPE html&gt;

One evening, many years ago, when I was in college, I had an epiphany. Maybe not as enlightening as the epiphany I had while watching &#34;The Mummy Returns&#34;&amp;nbsp; many years later, but that&#39;s a story for another day.&lt;br /&gt;&lt;br /&gt;While working on some class project, I realized that soon, within a couple of&amp;nbsp; years, I&#39;d be working for a real company and I&#39;d actually have to write code that &lt;b&gt;REALLY&lt;/b&gt; works. Not just something that gets past the grader, or answers all the test cases. Something well designed, well written, maintainable, and reliable.&amp;nbsp; Scary thought.&lt;br /&gt;&lt;br /&gt;I&#39;ve thought about this a lot since I started teaching computer science. We teach programming languages, algorithms, and assign projects. Maybe the students hear something like &#34;comment your code,&#34; or &#34;use good variable names,&#34; but we never really give them the tools to take a project from description to completion.&lt;br /&gt;&lt;br /&gt;Too often young programmers rush to the keyboards and write copious amounts of code without any plan and with little discipline. In short they do everything they can to set themselves up for a difficult road ahead.&lt;br /&gt;&lt;div style=&#34;text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;There are probably a number of reasons for this. When we teach introductory&amp;nbsp; programming, assignments are so short and simple that we can&#39;t easily model good programming techniques, and if we do, it&#39;s difficult to get students to &#34;buy in&#34; since it&#39;s hard for them to see the value. As complexity increases, we&#39;re faced with limited time to actually cover the prescribed course content, leaving little room for a protracted unit on &#34;program development.&#34;&lt;br /&gt;&lt;br /&gt;I&#39;m certainly not going to be so bold as to say that I have the answer to the problem, but I&#39;ve tried some things to help address it.&lt;br /&gt;&lt;br /&gt;We&#39;ll take a few class days to take a project from beginning to end. Something that can be done incrementally but isn&#39;t particularly difficult. &lt;br /&gt;&lt;br /&gt;This semester, I attempted this with my AP students. We wrote a series of text filters in Java. I lifted the topic from Kernighan and Plauger&#39;s &#34;Software Tools.&#34; We wrote versions of character count, word count, detabbing a file, run length encoding and a simple version of tr. Nothing too heavy, but it allowed us to focus on the development piece rather than coming up with clever algorithms and data structures (which is what the rest of the class is for). The problem may be a little contrived, but I hope the benefits outweighed any issues with the choice of problem.&lt;br /&gt;&lt;br /&gt;We start by talking about the importance of understanding the problem, which includes finding out what &#34;the client&#34; wants and not making our own assumptions. Some times, I try to leave a little ambiguity to give us a platform to discuss the &#34;what the client wants&#34; issue.&lt;br /&gt;&lt;br /&gt;From there comes design, which might be mixed with writing some code to make sure we understand certain aspects of the problem and the environment we&#39;ll be working in.&lt;br /&gt;&lt;br /&gt;Once we have a design and a plan we can start incremental development. This is what I think is most important for the youngsters. I try to model and emphasize the idea of coding one &#34;concept&#34; at a time. Frequently testing that concept and only moving on once it&#39;s completed. &lt;br /&gt;&lt;br /&gt;I&#39;ll also talk about things that have worked for me along the way. I always like to put consistent comment blocks at the top of my functions, trying to keep functions a &#34;screen length&#34; or shorter, my preferences for naming, indentation, etc. Of course, I&#39;m careful to emphasize that my way works for me, but it&#39;s just one approach. I try to present alternatives when possible.&lt;br /&gt;&lt;br /&gt;Other ideas I try to emphasize is actually reading ones code and having others read it. Last semester I experimented with &#34;pair programming&#34; and while I have no idea how good it is as a professional development technique, I like it from a pedagogical point of view.&lt;br /&gt;&lt;br /&gt;I think presenting these ideas while actually developing the project helps to drive in the concepts.&lt;br /&gt;&lt;br /&gt;I&#39;d like to think adding units like this helps to develop stronger programmers. Any teachers out there -- your thoughts?&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;center&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;table style=&#34;width: auto;&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&#34;http://picasaweb.google.com/lh/photo/ljE9q55t6ltZzZVKwTzA9g?authkey=Gv1sRgCOSJ5YGwwb7e_AE&amp;amp;feat=embedwebsite&#34;&gt;&lt;img src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/S3m2eJx5aiI/AAAAAAAAFj4/I57gKwaFxzQ/s144/2010-02-15%2008.49.59.jpg&#34; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/center&gt;&lt;br /&gt;&lt;br /&gt;In an unrelated note, yesterday was valentines day. We don&#39;t really do anything to celebrate it, but in anticipation of her new loom, Devorah had to clear off some room in the apartment. She stumbled upon love letters sent between my parents back in the fifties. If you&#39;d like a small taste of the past, you can see here post on squidknits &lt;a href=&#34;http://squid-knits.blogspot.com/2010/02/love-letters.html&#34;&gt;here&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Although we have gained all this immediacy with the electronics age, it sometimes feels that somethings been lost.&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-3365288827630860097?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>