<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cs on C&#39;est la Z</title>
    <link>https://cestlaz.github.io/tags/cs/</link>
    <description>C&#39;est la Z (cs)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Sep 2018 00:00:00 +0000</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/tags/cs/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>Creating a school for CS</title>
      <link>https://cestlaz.github.io/posts/creating-a-school/</link>
      <pubDate>Tue, 11 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/creating-a-school/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;http://blog.acthompson.net/2018/09/do-we-really-need-cs-focused-high.html&#34;&gt;Do we really need CS focused high schools?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s the question Alfred Thompson asked partly in reaction to my
&lt;a href=&#34;https://cestlaz.github.io/posts/that-time-bill-gates-visited-afse&#34;&gt;post&lt;/a&gt; talking about Bill Gates&amp;#39; visit to &lt;a href=&#34;http://afsenyc.org&#34;&gt;AFSE&lt;/a&gt;, a NYC public school
with a CS focus.&lt;/p&gt;
&lt;p&gt;
On both posts, &lt;a href=&#34;https://twitter.com/reallymdp&#34;&gt;Michael Preston&lt;/a&gt; shared some important and good points about
AFSE as a starting point and gateway that helped lead to CS4All in NYC
and also specifically about AFSE.&lt;/p&gt;
&lt;p&gt;
In response to Alfred&amp;#39;s question I thought it was time I shared a bit
about what I was pushing for AFSE back when I was involved. I wasn&amp;#39;t
able to talk publicly about any of this at the time because I was
warned very sternly by one DOE person involved that I shouldn&amp;#39;t talk
to &amp;#34;outsiders&amp;#34; about my concerns or designs. In retrospect, since I
stopped getting replies to my emails and was apparently dropped from
email lists after they selected their founding principal, I probably
should have been more public about my critiques. On the other hand, I
should have been more politic internally prior to getting to that
point.&lt;/p&gt;
&lt;p&gt;
Reading Alfred&amp;#39;s post, what I was pushing for AFSE at the time cuts
right to Alfred&amp;#39;s question so I thought I&amp;#39;d write about it today.&lt;/p&gt;
&lt;p&gt;
Before starting though I want to be &lt;strong&gt;absolutely clear&lt;/strong&gt; about one
thing. This is not a critique of AFSE as it stands. There are some
great teachers and wonderful students there and I do what I can to
support both whenever I can. This is a post about my design vs the
DOE&amp;#39;s design and later implementation. Also note that the numbers,
sizes, restrictions and designs are all based on NY state and NYC
requirements along with what one can typically do in a NYC public
school.&lt;/p&gt;
&lt;p&gt;
Even though it&amp;#39;s the least important issue with respect to a CS school
or not, let&amp;#39;s start by getting the dirty word out of the way. Given
the stated mission of the school (at the time) I wanted a screen. Not
a &amp;#34;Stuy test&amp;#34; screen but something. Probably something more along the
lines of the screen used by the Manhattan Science Hunter High
School. We never got that far in discussing it. My contention was and
still is that if you want to produce &amp;#34;Google ready&amp;#34; software engineers
by high school graduation, particularly in a small school, you can&amp;#39;t
start with kids 2 or 3 years behind in math. Now, if your goal isn&amp;#39;t
&amp;#34;Google ready engineers&amp;#34; but rather to use CS to engage a population
that isn&amp;#39;t otherwise engaged, I can get behind that and you don&amp;#39;t need
a screen. It&amp;#39;s important however to note it&amp;#39;s a different mission.&lt;/p&gt;
&lt;p&gt;
The DOE would maintain that you don&amp;#39;t need any screen and kids can
start out years behind and by the end of their senior year they&amp;#39;d be
years ahead. It doesn&amp;#39;t work that way.&lt;/p&gt;
&lt;p&gt;
They&amp;#39;d ask tech people at meetings what they looked for in employees
knowing that they&amp;#39;d get back &amp;#34;teamwork, creativity etc.&amp;#34; I would of
course follow up with &amp;#34;where do you look for these candidates&amp;#34; and
they&amp;#39;d say &amp;#34;MIT, Cal Tech, Harvard.&amp;#34;&lt;/p&gt;
&lt;p&gt;
The DOE insisted on no screen. This is fine but it&amp;#39;s no surprise that
Google&amp;#39;s not beating down the doors for AFSE graduates right out of
high school and the math regents show that you indeed can&amp;#39;t take kids
from multiple years behind and end up with them multiple years ahead
given typical school resources. They&amp;#39;re doing really good work there
but there&amp;#39;s no such thing as a miracle school just hard work and
incremental progress. I have heard more than once that the founding
principal had lobbied for a screen so I feel my original assessment
was correct.&lt;/p&gt;
&lt;p&gt;
Next up, size. The DOE insisted on a small school focused on CS. They
wanted a school of around 136 kids per grade, which makes for 4
&amp;#34;homerooms,&amp;#34; and that the school would focus on CS. My proposal was
very different. I advocated for a school with about 340 kids per grade
and not specifically focused on CS but rather with a great model CS
program - a Software Engineering Institute at the blah blah school if
you would.&lt;/p&gt;
&lt;p&gt;
A small school can&amp;#39;t support a wide range of classes. With 4 classes
of kids per grade you don&amp;#39;t have a lot of schedule flexibility in
terms of class levels or electives. You also have very few teachers
per subject - for a subject taught for a full year every year for a
single period, you&amp;#39;d have one teacher per grade in that subject. If
you&amp;#39;re a school for CS you&amp;#39;re not going to be able to offer a robust
schedule of music or arts classes. Likewise an arts school is going to
be hard pressed to offer a suite of science electives. Remember,
public schools are not flush with money and can&amp;#39;t just offer loads of
courses for a handful of kids.&lt;/p&gt;
&lt;p&gt;
What we end up with is a school with limited offerings beyond CS and
we&amp;#39;re asking kids to decide in 8th grade if that&amp;#39;s the career path for
them. This is a hidden problem of all small schools. Kids shouldn&amp;#39;t
have to decide on their future in the 8th grade. They should all be
able to go to schools that offer a wide range of subjects to a good
degree of depth. Only large public schools can do this. I know that
public schools come with their own problems but this is one of the
trade offs. I believe that having this selection done in 8th grade
along with the tech stereotypes and preconceptions is a big part of
the schools difficulty in appealing to girls.&lt;/p&gt;
&lt;p&gt;
Now even if every student who applied and is randomly accepted into
AFSE does indeed want to be a CS person then we&amp;#39;ve also lost because
we&amp;#39;ve done nothing to get more kids into the pool. It could still
potentially function as a model school in terms of courses or possibly
pedagogy but it won&amp;#39;t expose and inspire anyone new with respect to
tech.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s contrast that with what I proposed. I wanted around 340 kids per
grade or 10 &amp;#34;homerooms.&amp;#34; How did I arrive at that number? It wasn&amp;#39;t
just a guess. Schools like Stuyvesant or Brooklyn Tech are clearly too
large and impersonal but small 136 kids per grade schools are too
small. The 10 homeroom per grade school seems to be the best
compromise. There are enough teachers so that there&amp;#39;s institutional
memory when one leaves, enough of them and students for a varied set
of electives. It also means that there are enough teachers to avoid
bad fits between teacher and student. At the same time, it&amp;#39;s not so
large that kids get lost. I also spoke with some of the best
programmers I know - not computer programmers but people who schedule
students for classes in schools and this seems to be the best
compromise size range. Also, with this size you don&amp;#39;t necessarily need
a screen if you want &amp;#34;Google ready&amp;#34; software engineers. There will be
enough of a range kids that come in behind and kids that come in ahead
can get what they need.&lt;/p&gt;
&lt;p&gt;
I also didn&amp;#39;t want it to be a CS school but rather a school with great
CS. That way it would appeal to a range of students. Kids who think
they want to do CS and those who don&amp;#39;t. At the end of they day some of
the kids that think they wanted CS won&amp;#39;t want it and those kids will
have other options. At the same time some of the non-tech kids will
take the required CS and find out that &amp;#34;this is neat stuff&amp;#34; and we get
to increase the number of people in the tent.&lt;/p&gt;
&lt;p&gt;
I still believe my design would have worked out better but that&amp;#39;s not
to say that I don&amp;#39;t think that AFSE has been and is important. As Mike
pointed out in his comment, AFSE was the first unscreened school to
offer legit and it did (and does) offer a place for CS kids that don&amp;#39;t
get into or don&amp;#39;t want to go to a place like Stuy which is very much a
large school and an unforgiving machine. It was also a showpiece that
helped pave the way for CS in all NYC schools. All of that&amp;#39;s good.&lt;/p&gt;
&lt;p&gt;
I do regret parts of what went down between me and DOE. I don&amp;#39;t regret
sticking to my beliefs in terms of school design but I would like to
have been able to handle the politics of the situation better. Had I
remained involved I think I had more to offer. I don&amp;#39;t regret it too
much â€“ at the time it went from the DOE telling me one week to &amp;#34;you
can have any role in the school you want&amp;#34; to the next week &amp;#34;we want to
introduce you to the person who we&amp;#39;re making principal&amp;#34; and I
recognize that I&amp;#39;d have a hard time putting that aside now and the me
of a decade ago would have found it impossible. That said, I think
everyone would have been better off if both sides could have played
things better.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;d still love to have the chance someday to set up and run a school
of my design with my team. It&amp;#39;ll probably never happen but it would be
nice.&lt;/p&gt;
&lt;p&gt;
&amp;#34;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Do you need to know binary for CS?</title>
      <link>https://cestlaz.github.io/posts/why-binary/</link>
      <pubDate>Wed, 05 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/why-binary/</guid>
      <description>&lt;p&gt;Yesterday, Alfred Thompson asked &lt;a href=&#34;https://twitter.com/alfredtwo/status/1036982959587446784&#34;&gt;&amp;#34;Why is it important for CS students
to understand binary?&amp;#34;&lt;/a&gt; on Twitter which led to a number of interesting
responses. Alfred summarized and wrote his own thoughts on &lt;a href=&#34;http://blog.acthompson.net/2018/09/why-teach-binary-in-computer-science.html&#34;&gt;his blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
I wanted to add a comment but I already wrote a post for yesterday so
put it off until today.&lt;/p&gt;
&lt;p&gt;
First let me say that you can have a very successful career in tech
and not really know binary or number bases other than 10. That career
could be as as programmer, software engineer, network specialist,
devops or in many other areas that fall on the CS side of tech.&lt;/p&gt;
&lt;p&gt;
You also can&amp;#39;t really get through a CS program without learning about
binary. If you&amp;#39;re self taught or go to a code school then that&amp;#39;s
another story.&lt;/p&gt;
&lt;p&gt;
The question is, is it worth the time spent.&lt;/p&gt;
&lt;p&gt;
One can easily argue that systems - that is low level, close to the
metal knowledge is one of the two &amp;#34;latins&amp;#34; of CS, the other being CS
theory. You might not explicitly use either but they give you a
stronger foundation in everything. You also can&amp;#39;t study systems without a
good knowledge of binary so if you want to do anything low level, you
need it.&lt;/p&gt;
&lt;p&gt;
What about beyond those easy but not all to convincing to new students
answers?&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s loo at a few things we can do with binary.&lt;/p&gt;
&lt;p&gt;
A big part of binary notation is that you can look at data as a string
of bits. You can also manipulate that data using things like &lt;code&gt;and&lt;/code&gt;,
&lt;code&gt;or&lt;/code&gt;, &lt;code&gt;not&lt;/code&gt;, and &lt;code&gt;xor&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;
At it&amp;#39;s core &lt;code&gt;and&lt;/code&gt; let&amp;#39;s you turn off bits. &lt;code&gt;And&lt;/code&gt; any bit with a 0 and
it will become a 0. &lt;code&gt;And&lt;/code&gt; it with a 1 and it stays the same.&lt;/p&gt;
&lt;p&gt;
\begin{array}{ccccc}
&amp;amp;1 &amp;amp; 1 &amp;amp; 0 &amp;amp; 0\\
and &amp;amp;0 &amp;amp; 1 &amp;amp; 0 &amp;amp; 1\\\hline
&amp;amp;0 &amp;amp; 1 &amp;amp; 0 &amp;amp; 0\\
\end{array}&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Or&lt;/code&gt; is used to turn on bits. You &lt;code&gt;or&lt;/code&gt; any bit with a 1 and it gets
turned on. &lt;code&gt;Or&lt;/code&gt; it with a 0 and it stays as it was.
$$
\begin{array}{ccccc}
&amp;amp;1 &amp;amp; 1 &amp;amp; 0 &amp;amp; 0\\
or &amp;amp;0 &amp;amp; 1 &amp;amp; 0 &amp;amp; 1\\\hline
&amp;amp;1 &amp;amp; 1 &amp;amp; 0 &amp;amp; 1\\
\end{array}
$$
&lt;code&gt;Xor&lt;/code&gt; a bit with a 1 and the bit flips, with a 0 it stays the same.
$$
\begin{array}{ccccc}
&amp;amp;1 &amp;amp; 1 &amp;amp; 0 &amp;amp; 0\\
xor &amp;amp;0 &amp;amp; 1 &amp;amp; 0 &amp;amp; 1\\\hline
&amp;amp;1 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1\\
\end{array}
$$&lt;/p&gt;
&lt;p&gt;
What can we do with this? For one thing, image processing. Students
frequently play with images where each pixel is represented as a 24
bit color. Three bytes, one each for red, green, and blue. Each byte
is really 8 bits. We can use bitwise operations on the binary digits
to turn on or off color.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s say we have this rgb triple: (200, 15, 80) which in hexadecimal
is C8 0F 50 or 10111000 00001111 01010000 in binary. If we want to
turn off the reddest reds we could &lt;code&gt;and&lt;/code&gt; the color with 00001111
11111111 11111111 or 0FFFFF:&lt;/p&gt;
&lt;p&gt;
$$
\begin{array}{cccc}
&amp;amp; 10111000 &amp;amp; 00001111 &amp;amp; 01010000\\
and &amp;amp; 00001111 &amp;amp; 11111111 &amp;amp; 11111111\\\hline
&amp;amp; 00001000 &amp;amp; 00001111 &amp;amp; 01010000\\
\end{array}
$$
Yes, you could just use the base 10
values and keep on calling color setting and conversion functions but
if you understand binary it&amp;#39;s quicker and easier and what&amp;#39;s going on
will actually make sense.&lt;/p&gt;
&lt;p&gt;
Of course you probably wouldn&amp;#39;t write out the binary but would rather
use the hex notation which once a student realizes is just 4 bit
groupings of binary becomes really easy. As a bonus, once you&amp;#39;re used
to binary and hex those hexadecimal color values will all of a sudden
make sense.&lt;/p&gt;
&lt;p&gt;
This is just the tip of the image processing and graphics iceberg with
respect to binary.&lt;/p&gt;
&lt;p&gt;
Related although I haven&amp;#39;t played with it myself, I&amp;#39;d imagine you could use
these types of bitwise operations on images to play with
steganography.&lt;/p&gt;
&lt;p&gt;
Another use of binary is in cybersecurity. Things like buffer
overflows and blowing the stack all make much more sense if you know
how memory is arranged and that&amp;#39;s easier to understand if you
understand binary, bytes, and word sizes. I do experiments with my
classes when we use C or C++ where they access arrays off the ends and
end up messing with neighboring variables. It seems like magic unless
you know about memory and to know memory you need to know binary.&lt;/p&gt;
&lt;p&gt;
How about image file formats? Many image file formats start with a
fixed size header. Here&amp;#39;s the header definition for the GIF file
format:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;align-right&#34;&gt;Offset&lt;/th&gt;
&lt;th&gt;Length&lt;/th&gt;
&lt;th&gt;Contents&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td&gt;3  bytes&lt;/td&gt;
&lt;td&gt;&amp;#34;GIF&amp;#34;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;3&lt;/td&gt;
&lt;td&gt;3  bytes&lt;/td&gt;
&lt;td&gt;&amp;#34;87a&amp;#34; or &amp;#34;89a&amp;#34;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;6&lt;/td&gt;
&lt;td&gt;2  bytes&lt;/td&gt;
&lt;td&gt;&amp;lt;Logical Screen Width&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;8&lt;/td&gt;
&lt;td&gt;2  bytes&lt;/td&gt;
&lt;td&gt;&amp;lt;Logical Screen Height&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;10&lt;/td&gt;
&lt;td&gt;1  byte&lt;/td&gt;
&lt;td&gt;bit0: Global Color Table Flag (GCTF)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;bit&lt;/td&gt;
&lt;td&gt;1..3:  Color&lt;/td&gt;
&lt;td&gt;Resolution&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;bit&lt;/td&gt;
&lt;td&gt;4:  Sort&lt;/td&gt;
&lt;td&gt;Flag to Global Color Table&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;bit&lt;/td&gt;
&lt;td&gt;5..7:  Size&lt;/td&gt;
&lt;td&gt;of Global Color Table:2^(1+n)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;11&lt;/td&gt;
&lt;td&gt;1  byte&lt;/td&gt;
&lt;td&gt;&amp;lt;Background Color Index&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;12&lt;/td&gt;
&lt;td&gt;1  byte&lt;/td&gt;
&lt;td&gt;&amp;lt;Pixel Aspect Ratio&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;13&lt;/td&gt;
&lt;td&gt;?  bytes&lt;/td&gt;
&lt;td&gt;&amp;lt;Global Color Table(0..255 x 3 bytes)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;?&lt;/td&gt;
&lt;td&gt;bytes  &amp;lt;Blocks&amp;gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;td&gt;bytes  &amp;lt;Trailer&amp;gt;&lt;/td&gt;
&lt;td&gt;(0x3b)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
The header info is defined bit by bit so you have to know about binary
and know how to manipulate data on a bit level.&lt;/p&gt;
&lt;p&gt;
Those were three biggies but there are other places where knowing
binary makes tons of sense:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flag type parameters&lt;/li&gt;
&lt;li&gt;understanding floating point numbers&lt;/li&gt;
&lt;li&gt;using shifts for quick doubling and halving of data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Does this mean that binary has to be or should be in a first course?
No. Should it be somewhere? Certainly and rather than doing binary
because it&amp;#39;s on the test or because &amp;#34;you should know it&amp;#34; you can pick
and choose your spots and cover it when it will be fun and interesting
for your kids.&lt;/p&gt;
&lt;p&gt;
world&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rite Of Passage Projects</title>
      <link>https://cestlaz.github.io/posts/rite-of-passage-projects/</link>
      <pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/rite-of-passage-projects/</guid>
      <description>&lt;p&gt;
JCS&amp;#39;s &lt;a href=&#34;https://irreal.org/blog/?p=7414#comment-4045190612&#34;&gt;post&lt;/a&gt; on Irreal today brought me back. It was about &lt;a href=&#34;https://en.wikipedia.org/wiki/Brief_(text_editor)&#34;&gt;Brief&lt;/a&gt; which
was the editing hotness back in the day. I played with it a little
really mostly used Emacs clones for real work when I was stuck on
MS-DOS systems. Usually either &lt;a href=&#34;https://en.wikipedia.org/wiki/JOVE&#34;&gt;JOVE&lt;/a&gt; or &lt;a href=&#34;https://en.wikipedia.org/wiki/Epsilon_(text_editor)&#34;&gt;Epsilon&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
In the comments Jon reminded me about the &lt;a href=&#34;https://en.wikipedia.org/wiki/MKS_Toolkit&#34;&gt;MKS Toolkit&lt;/a&gt;
which brought most everyday Unix tools to DOS along with a shell and
a version of Vi. I didn&amp;#39;t use Vi much and I only used their shell
until I wrote my own.&lt;/p&gt;
&lt;p&gt;
This got me thinking about &amp;#34;rite of passage&amp;#34; projects. I was in
college in the mid to late 80s. It was the heyday of the
IBM-PC. Schools still used older time sharing systems like DEC-20s and
Vaxen but the PC was all the rage. The cool thing about them was that
you had full control and access to the machine and it was simple
enough to get your head around pretty much everything about it. The
downside was that MS-DOS was very limited and of course there was
little to no networking going on.&lt;/p&gt;
&lt;p&gt;
On the one hand, you could dive into the low level machine language
stuff very easily. Get Norton&amp;#39;s book:&lt;/p&gt;
&lt;img src=&#34;https://covers.openlibrary.org/b/id/7446489-L.jpg&#34; alt=&#34;https://covers.openlibrary.org/b/id/7446489-L.jpg&#34; title=&#34;https://covers.openlibrary.org/b/id/7446489-L.jpg&#34; align=&#34;center&#34; height=&#34;250&#34;/&gt;
&lt;p&gt;
and you&amp;#39;re on your way.&lt;/p&gt;
&lt;p&gt;
On the other hand many student&amp;#39;s graduated with no concept of time
sharing and the ramifications of sharing a system or resources were
foreign to many kids.&lt;/p&gt;
&lt;p&gt;
Even though we always look back to the &amp;#34;good old days,&amp;#34; in many ways
things weren&amp;#39;t much different. I got a very strong background in
academic CS from NYU (Courant Institute) but just like today, there
was no real preparation for the real world.If you wanted to really develop your
coding chops you had to work on side projects.&lt;/p&gt;
&lt;p&gt;
I seem to recall, a typical &amp;#34;rite of passage&amp;#34; side project was writing
your own shell. It didn&amp;#39;t have to be anything as powerful as BASH or
ZSH but it would typically be much more powerful than DOS and much
more Unixy.&lt;/p&gt;
&lt;p&gt;
I recall writing my first shell down in UC-49 of Tisch Hall when the
computer labs weren&amp;#39;t busy. I wrote it in C which was what the cool
kids used back then. Specifically I used the &lt;a href=&#34;https://en.wikipedia.org/wiki/Mark_Williams_Company&#34;&gt;Let&amp;#39;s C&lt;/a&gt; compiler from the
Mark Williams company. This was before Turbo C 2.0 so Let&amp;#39;s C was
pretty much the only game in town for a cheap Unix style C compiler
for DOS. There was also Run/C but that was a C interpreter, not a
compiler. I also used that to learn C. Funny story - I certainly
didn&amp;#39;t know this at the time but Run/C was written by Peter
Brooks. Peter and I would later meet when he became my colleague at
Stuyvesant teaching CS and I now have the privilege of being able to
call him friend. I joke that I owe him ~ $100 for the interpreter from
back in the day.&lt;/p&gt;
&lt;p&gt;
Since this was on DOS, I couldn&amp;#39;t do real Unix style pipes like
&lt;code&gt;cat file | sort | uniq -c | sort -n&lt;/code&gt; but I did simulate it with redirection and temporary
files. It also supported aliases, simple scripts and I think a few
other things.&lt;/p&gt;
&lt;p&gt;
I was pretty happy with it and used it for a couple of years. It was
also one of the first substantial programs I wrote. I learned a lot
from doing it.&lt;/p&gt;
&lt;p&gt;
Another &amp;#34;rite of passage&amp;#34; program that was common back then was a
text based window library. Somethig like ncurses that would allow you
to make text based windows and menus on the text only screen. I also
wrote one of these and actually got to use it for a project when I
started working at Goldman.&lt;/p&gt;
&lt;p&gt;
I guess the third &amp;#34;rite of passage&amp;#34; project I remember was writing a C
compiler but that was different because it was for a class. It was a
significant project but the class didn&amp;#39;t really help with writing a
large program in general - it was all about the compiler and all the
theory behind it. Great course but not one in software engineering.&lt;/p&gt;
&lt;p&gt;
Nowadays the projects have changed. Text based windowing is long gone
and while I still think writing a shell is a useful and rewarding
exercise it&amp;#39;s not scratching an itch the way it did back when we were
stuck on DOS. I guess writing a full stack web app is probably a
pretty typical one for students these days.&lt;/p&gt;
&lt;p&gt;
Any others?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hunter CS - a lot of progress in a short time</title>
      <link>https://cestlaz.github.io/posts/hunter-cs-year-two/</link>
      <pubDate>Fri, 29 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/hunter-cs-year-two/</guid>
      <description>&lt;p&gt;
Yesterday I was back on campus for an early orientation session for
Hunter&amp;#39;s incoming Daedalus CS honors students. It was the first time
all of us got to meet face to face. The students I met with will be
my third cohort. I got to thinking how far we&amp;#39;ve come in under three
years.&lt;/p&gt;
&lt;p&gt;
Hunter&amp;#39;s had a strong but little known undergraduate
CS program for as long as I&amp;#39;ve known. Much like any program, we&amp;#39;ve got
our strengths and weaknesses but you go through our program and
academically you&amp;#39;ll be as well prepared as from anywhere else. We have some
challenges being a commuter school, a liberal arts school and a school
not commonly thought of for CS but the core has always been there.&lt;/p&gt;
&lt;p&gt;
Hunter has been making a concerted effort to up its computer science
game and my joining the team has been part of that. The Daedalus
program is an honors scholarship program. It&amp;#39;s similar to the well
known CUNY Macaulay program but it&amp;#39;s specific to Hunter and specific to
CS. Our kids get scholarships, laptops, special classes (with me),
activities and events and more. Our first cohort had 12. This past
year we had 23 but a funny thing happened right after we started. Hunter&amp;#39;s
Macaulay CS students heard about what was going on and wanted in. The
end result was that last years cohort had a total of 27 students
as we invited the incoming Hunter Macaulay CS students into the
fold. This year, we&amp;#39;re up to about 50 total and it looks to be a very
strong group. To be honest I&amp;#39;m a little
scared of growing this quickly. The kids will be great but it will be
a challenge building the community across multiple classes.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m really pleased with the first two cohorts performance both in
class and out. They&amp;#39;re progressing well through the academic program
and are ahead of schedule in terms of internships and outside
activities but I&amp;#39;m even happier that they&amp;#39;ve been working to level up
Hunter CS as a whole. They started a once a week Dojo last year where
all Hunter CS students could hang out and work on tech projects and
have a speaker series on tap for this coming year. For my part, I&amp;#39;ve
got a couple of new ideas up my sleeve but I&amp;#39;m going to keep them
under wraps for now.&lt;/p&gt;
&lt;p&gt;
Three years ago Hunter wasn&amp;#39;t so much on the map for CS inclined high
school students and while there&amp;#39;s much work to be done, many of our
incoming cohort members chose us over other programs that have
traditionally been considered CS strongholds.&lt;/p&gt;
&lt;p&gt;
At the same time, our efforts to connect Hunter CS to the NY Tech community have begun to
raise our profile on the other end of the pipeline.&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s still a long rode ahead but I thought I&amp;#39;d give myself a day to
look back on how far we&amp;#39;ve come in a short time. Having a great public college option for CS
education is critical for NYC. This was one of the things I left Stuy to
accomplish and we&amp;#39;re well on our way.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teaching recursion early? Make sure to use a good tool.</title>
      <link>https://cestlaz.github.io/posts/recursion-early/</link>
      <pubDate>Wed, 30 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/recursion-early/</guid>
      <description>&lt;p&gt;
I replied this tweet yesterday and thought I&amp;#39;d expound a bit.&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;We started kids using scheme on 10th grade at stuy so did recursion early. Not everyone got all of it but it think it made things much easier for those that you more CS later.&lt;/p&gt;&amp;mdash; Mike Zamansky (@zamansky) &lt;a href=&#34;https://twitter.com/zamansky/status/1001508028439519233?ref_src=twsrc%5Etfw&#34;&gt;May 29, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
We introduced recursion very early in our intro course at Stuy and I
think it worked well. In that course we started by using Racket (nee
Scheme) as the first programming unit. Originally we
started the kids out first using NetLogo or StarLogo and followed with
Scheme but after a few years we switched the order.&lt;/p&gt;
&lt;p&gt;
I wouldn&amp;#39;t always recommend Scheme for a first course and in fact
frequently don&amp;#39;t but given how the Stuy course was introduced and
developed it made sense and worked.&lt;/p&gt;
&lt;p&gt;
Was it worth doing things this way? I think so. Prior to that intro
course becoming a requirement I got to see students coming in from
different pathways to APCS. Some came in raw with zero formal
experience, some self taught, some through that intro course and some
having taken another more traditional intro programming course or
experience. The kids who started on Scheme had no more difficulty
mastering loops and iteration but had an easier time getting to the
more advanced recursive techniques. This wasn&amp;#39;t a surprise - it wasn&amp;#39;t
their first rodeo. This also jived with reports I read at the time
that felt that when students did recursion first, iteration was just
as easy but when they did iteration first, recursion was harder.&lt;/p&gt;
&lt;p&gt;
You can of course make a strong case that recursion isn&amp;#39;t necessary
for a kid that isn&amp;#39;t going to study more CS. I&amp;#39;ll merely argue that
what we did at Stuy worked with that population and I wouldn&amp;#39;t change
it. At the same time, I&amp;#39;ve helped a number of teachers design classes and programs
where we agreed that recursion first was not the way to go.&lt;/p&gt;
&lt;p&gt;
In any event, it wasn&amp;#39;t that I specifically wanted to do recursion
early but rather, there were a number of things I wanted to do with
the class for which Scheme made sense and recursion was just one of
them.&lt;/p&gt;
&lt;p&gt;
Some reasons to like (or for some, to dislike) Scheme early:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It&amp;#39;s functional â€“ everything is a function. While this is&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;technically not true, we can fudge it a bit at this level. You put
things in parens so instead of add(a,b) you write (add a b) or
really (+ a b). You can also do (+ a b c). Things that would be
statements are also functions: (if Booelean TruePart FalsePart) is the &lt;strong&gt;if&lt;/strong&gt;
statement. For example &lt;code&gt;(if (&amp;gt;= a b) a b)&lt;/code&gt; returns the larger of a
and b.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Because it&amp;#39;s functional it avoids the issue kids have with &lt;code&gt;=&lt;/code&gt; being&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;for assignment rather than comparison.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It has great support for list processing.&lt;/li&gt;
&lt;li&gt;Recursion is much more natural.&lt;/li&gt;
&lt;li&gt;It&amp;#39;s a super simple language with simple rules and a simple, small  syntax&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of course, Scheme isn&amp;#39;t perfect and some people dislike the above
reasons. It&amp;#39;s also easy to come up with a number of other good reasons
not to use a language like Scheme.&lt;/p&gt;
&lt;p&gt;
On the recursion front, it makes things much easier. There are no
loops so recursion develops as a natural form for repetition:&lt;/p&gt;
&lt;div class=&#34;src src-scheme&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-scheme&#34; data-lang=&#34;scheme&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-scheme&#34; data-lang=&#34;scheme&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;define &lt;/span&gt;f (&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;x&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(* x  (&lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt; (- x &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)))))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This defines a function that takes one parameter and returns
&lt;code&gt;x*(x-1)*(x-2)...&lt;/code&gt;. It repeats, but never ends. This leads to adding
a base case:&lt;/p&gt;
&lt;div class=&#34;src src-scheme&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-scheme&#34; data-lang=&#34;scheme&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-scheme&#34; data-lang=&#34;scheme&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;define &lt;/span&gt;f (&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;x&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;if &lt;/span&gt;(&amp;lt; x &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(* x (&lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt; (- x &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))))))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Which is your basic factorial function.&lt;/p&gt;
&lt;p&gt;
Since this use of recursion for repetition  develops naturally as we
introduce language concepts it&amp;#39;s easier for kids to get their heads
around it as opposed to when they&amp;#39;ve seen loops already and have an
&amp;#34;easier&amp;#34; alternative. You can make the case that you could introduce
recursion this way in a language with loops like Python but once loops
are available and particularly when loops are idiomatic, students will
find them and getting them to think recursively will be more
difficult.&lt;/p&gt;
&lt;p&gt;
Scheme and most other functional programming languages also have
strong support for lists and list recursion. This means you don&amp;#39;t have
to limit yourself to mathy problems. Think about a todo list:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Go to the market&lt;/li&gt;
&lt;li&gt;Buy a gallon of milk&lt;/li&gt;
&lt;li&gt;If they have eggs, get a dozen (heh heh)&lt;/li&gt;
&lt;li&gt;Go home&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Processing a todo list is really a recursive problem:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If the list is empty you&amp;#39;re done&lt;/li&gt;
&lt;li&gt;Take the first item off  the list&lt;/li&gt;
&lt;li&gt;Do it&lt;/li&gt;
&lt;li&gt;Recurse&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Once you start working with lists, you can play with all sorts of
recursive examples.&lt;/p&gt;
&lt;p&gt;
At the end of the Scheme unit the big project is creating a sentence
generator. The kids don&amp;#39;t know it but they&amp;#39;re learning about grammars
and in fact are writing a recursive descent parser - they just think
they&amp;#39;re writing a program that creates silly sentences. It&amp;#39;s a really
nice project that uses recursion in a way that&amp;#39;s different and I&amp;#39;d
argue more fun and interesting than the usual approaches.&lt;/p&gt;
&lt;p&gt;
I chose Scheme for a variety of reasons. I also chose NetLogo for
specific reasons. Unlike Scheme (or most other popular learning
languages), NetLogo is really all about agent based parallel
processing. There are concepts that we can explore easily and in depth
with NetLogo that would be tremendously difficult in any other
language and at the same time, there are things that are easy to
explore in other languages that Netlogo doesn&amp;#39;t lend itself to.&lt;/p&gt;
&lt;p&gt;
So, in the end, this post really isn&amp;#39;t about when to teach
recursion. It&amp;#39;s more about how languages lend themselves to solving
different problems and teaching different concepts in different
ways. If all you have is a hammer, everything looks like a
nail. Fortunately, we can do better.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why Strong K12 Teacher Certification is Important</title>
      <link>https://cestlaz.github.io/posts/strong-teacher-certification/</link>
      <pubDate>Tue, 10 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/strong-teacher-certification/</guid>
      <description>&lt;p&gt;
About a week ago New York State&amp;#39;s new regulation creating a &lt;a href=&#34;http://www.crainsnewyork.com/article/20180327/NEWS/180329893/new-york-will-finally-have-certified-computer-science-teachers&#34;&gt;K12 CS
teacher certification&lt;/a&gt; went live. Just the other day I was honored to be
interviewed by  &lt;a href=&#34;https://twitter.com/mflamm_reporter&#34;&gt;Matt Flamm&lt;/a&gt; of Crain&amp;#39;s New York in a &lt;a href=&#34;http://www.crainsnewyork.com/article/20180410/TECHNOLOGY/180419999/asked-answered-teacher-changed-jobs-to-push-for-new-york-states-new&#34;&gt;follow up piece&lt;/a&gt;
about it.&lt;/p&gt;
&lt;p&gt;
Having K12 CS teacher certification is big and having quality programs
that lead to certification is &lt;strong&gt;HUGE&lt;/strong&gt;. In my view, it&amp;#39;s a game changer.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s Focus on high school, my wheelhouse.&lt;/p&gt;
&lt;p&gt;
From a course offerings point of view it&amp;#39;s the wild west. I don&amp;#39;t mean
this as a bad thing, it&amp;#39;s just that there&amp;#39;s a huge range of offerings
from AP to home brew, physical computing, game based, cyber security,
you name it, there&amp;#39;s a curriculum. The long and short of this is that
schools need teachers to teach all of these experiences. Without a
strong certification pathway we&amp;#39;re going to be stuck with the current
training based model where teachers are trained to deliver canned
curricula rather than truly teach. With strong teacher preparation
programs teachers will be prepared not only to deliver all the
existing curricula but, arguable more importantly design their own
learning experiences appropriate for the populations they work with.&lt;/p&gt;
&lt;p&gt;
This is important and alone would make having CS certification
worthwhile but to me the BIG win is that it creates a viable career
path.&lt;/p&gt;
&lt;p&gt;
People say we&amp;#39;ll never find enough CS teachers because the tech
industry pays so well. I&amp;#39;ve never believed that. We find math teachers
even though many could flee to finance and chem teachers in spite of
big pharma&amp;#39;s call so why can&amp;#39;t we find CS teachers? Because we&amp;#39;ve
never provided a path into the profession and a viable career track.&lt;/p&gt;
&lt;p&gt;
Certification means that over time schools will be able to build CS
teachers and the discipline will be treated as the other
subjects. Prior to certification, a CS teacher might be cut if a
school&amp;#39;s math department downsized. With certification, the career
track for a CS teacher is the same as the track for any other teacher.&lt;/p&gt;
&lt;p&gt;
It also means that young people starting out who are interested in
both teaching and computer science will have a way of getting into the
profession - something that has never before existed.&lt;/p&gt;
&lt;p&gt;
Having CS certification alone won&amp;#39;t woo a
plethora of current tech professionals into teaching but over time,
we&amp;#39;ll start to have CS Ed majors or CS majors pursuing CS ED Masters
degrees and entering the profession. This won&amp;#39;t happen in a press or
election cycle but it will happen.&lt;/p&gt;
&lt;p&gt;
This all hinges on quality prep programs. I think I&amp;#39;ve hit the sweet
spot with what I&amp;#39;ve designed at Hunter. The critical components are of
course content and pedagogy. Teacher candidates must have both
sufficient depth and breadth in the subject and all the pedagogical
content knowledge that comes along with it. I don&amp;#39;t agree with the
common approach of taking a course to teach a course - that is, having
courses like &amp;#34;APCS - Principles for teachers&amp;#34; or &amp;#34;APCS - A for
teachers.&amp;#34;  I want my teachers to be able to teach any reasonable
curriculum or design their own so we&amp;#39;ll be rolling out courses that
examine the commonly offerd curricula but prepare teachers for a whole
lot more.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s been an exciting week in NY CS Ed and there&amp;#39;s a lot more to come.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Competitions and Hackathons</title>
      <link>https://cestlaz.github.io/posts/hs-competitions/</link>
      <pubDate>Fri, 06 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/hs-competitions/</guid>
      <description>&lt;p&gt;
Today&amp;#39;s the last day of spring break. After the weekend it&amp;#39;s back to
the grind. It really hasn&amp;#39;t been much of a spring break. The rain and
the snow made for very little spring and between working on the Hunter
/ CUNY2X Internship program and reviewing applications for my Hunter
Daedalus CS Honors program there has been very little break.&lt;/p&gt;
&lt;p&gt;
Today was no exception - I spent much of the day working but I did
take a few hours to head over to Cornell Tech on Roosevelt
Island. Why? To check out the &lt;a href=&#34;https://www.cs.cornell.edu/events/cornell-high-school-programming-contest&#34;&gt;Cornell High School Progrmaming
Contest&lt;/a&gt; - first time in NYC.&lt;/p&gt;
&lt;p&gt;
I was invited by my friend and organizer &lt;a href=&#34;https://twitter.com/diane_levitt&#34;&gt;Diane Levitt&lt;/a&gt;. I only stayed
for an hour or so but it was shaping up to be a great event. It looked
like around a hundred kids from maybe a dozen or so schools and it was
run simultaneously with high schoolers on the Ithaca campus where the
competition has been running for a few years.&lt;/p&gt;
&lt;p&gt;
The format was similar to other high school programming competitions
I&amp;#39;ve been to. Teams of two or three sharing a single computer to solve
a number of programming problems that varied in difficulty. You can
check out a few &amp;#34;warm up&amp;#34; problems on the competition &lt;a href=&#34;https://www.cs.cornell.edu/events/cornell-high-school-programming-contest&#34;&gt;site&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
The competition reminded me of the &lt;a href=&#34;https://www.sjcny.edu/long-island/academics/programs-departments/mathematics-and-computer-science/programming-competition&#34;&gt;St. Joseph&amp;#39;s High School
Programming Competition&lt;/a&gt; held every spring but in NYC so more
convenient for city dwellers. I went to the St. Joseph&amp;#39;s competition a
few times and I&amp;#39;m a big fan. I particularly like the awards luncheon
after the competition. If I were to make one suggestion to the
organizers there it would be to mix the seating at the luncheon so
that kids get to sit with and spend time with kids from different
schools.&lt;/p&gt;
&lt;p&gt;
These competitions contrast nicely with hackathons like &lt;a href=&#34;http://stuyhacks.com/%0A&#34;&gt;StuyHacks&lt;/a&gt;
for which I acted as a judge a couple of months ago. Competitions are, well,
competitive. Hackathons can be but don&amp;#39;t have to be. Competitions are
about solving problems, hackathons, building things. Each can speak to
a different kind of student.&lt;/p&gt;
&lt;p&gt;
Both competitions and hackathons have problems as well. On the competition
side we have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Schools with more developed CS programs dominate&lt;/li&gt;
&lt;li&gt;A single strong student can carry a team&lt;/li&gt;
&lt;li&gt;Some kids don&amp;#39;t like or do well in the competitive environment&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And on the hackathon side:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;24 hours of straight work is just a bad idea and a bad thing to&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;encourage.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Big advantage to teams that bring prefab code.&lt;/li&gt;
&lt;li&gt;Big advantage to kids with experience.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Both types of events are great opportunities for young
programmers. They&amp;#39;re celebrate academic work, bring tech kids together
as a community and when done right are
something of a CS party. Neither type of event speaks to all kids so
it&amp;#39;s great to have both competitions and hackathons to go along with
other types of events available for our kids.&lt;/p&gt;
&lt;p&gt;
Another thing I love abut the Cornell and St, Joseph&amp;#39;s competitions
along with StuyHacks is that they&amp;#39;re open to all schools and hence all
students. There&amp;#39;s room for the novice and also the expert and you
don&amp;#39;t have to be in a particular school or program to participate.&lt;/p&gt;
&lt;p&gt;
There are other events beyond these three. There are online
competitions like &lt;a href=&#34;http://www.usaco.org/&#34;&gt;the USACO&lt;/a&gt;, competitions on HackerRank and Topcoder,
&lt;a href=&#34;http://halite.io&#34;&gt;Halite&lt;/a&gt; along with it&amp;#39;s hackathon which is great but specialized and in
person ones that are farther away like the &lt;a href=&#34;http://pclassic.org/%0A&#34;&gt;PClassic&lt;/a&gt; in Philidelphia
and Rowan&amp;#39;s &lt;a href=&#34;http://elvis.rowan.edu/rupc/%0A&#34;&gt;HS programming competition&lt;/a&gt; in New Jersey but it&amp;#39;s great to
see great local opportunities like these emerging and hopefully
running for years to come.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tools and Complexity</title>
      <link>https://cestlaz.github.io/posts/tools-and-complexity/</link>
      <pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/tools-and-complexity/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://twitter.com/alfredtwo&#34;&gt;Alfred Thompson&lt;/a&gt; wrote about &lt;a href=&#34;http://blog.acthompson.net/2018/04/thoughts-on-where-cs-education-tools.html&#34;&gt;CS education tools&lt;/a&gt; earlier today. I&amp;#39;ve
also been meaning to write on the topic but from a different point of
view.&lt;/p&gt;
&lt;p&gt;
I do my best to keep up with the latest and greatest in the CS world
both on the academic side as well as the professional one. That&amp;#39;s not
really possible, but I do my best. When I have a small project to work
on I&amp;#39;ll some times use it as an excuse to play with some recent
technology. Over December, I wanted to write an application viewer to
use for company / student internship matching. I started by looking at
&lt;a href=&#34;https://reactjs.org/&#34;&gt;React&lt;/a&gt; but ended up using &lt;a href=&#34;https://vuejs.org/&#34;&gt;Vue.js&lt;/a&gt; which I liked much more for a variety
of reasons.&lt;/p&gt;
&lt;p&gt;
The viewer served it&amp;#39;s purpose but I think it can be turned into a
much more comprehensive student / employer internship platform. I
tried to steal a few minutes over this past week&amp;#39;s spring break to
start a rewrite using another toolset, Clojure, Clojurescript and
Reagent. I&amp;#39;m really liking the Clojure stack and using
Emacs and Cider for the IDE is really blowing me away.&lt;/p&gt;
&lt;p&gt;
What I&amp;#39;ve noticed is that for every new language of framework you also
have to learn a whole set of ancillary tools.&lt;/p&gt;
&lt;p&gt;
It didn&amp;#39;t used to be that way. Back in the day, things were much
simpler. I remembering doing work at Goldman Sachs, it was as simple
as typing something on the command line like &lt;code&gt;cc file1.c file2.c
file3.c&lt;/code&gt;. I of course had to be cutting edge and use fancy modern
tools like &lt;a href=&#34;https://www.gnu.org/software/make/&#34;&gt;Make&lt;/a&gt;. What&amp;#39;s more, the tools I used in industry were very
similar to what I used in college.&lt;/p&gt;
&lt;p&gt;
We now live in very different times.&lt;/p&gt;
&lt;p&gt;
If you go to the getting started guides for React or Vue it&amp;#39;s pretty easy to
get hello world up and running but beyond that you start to fall in to
the Javascript tooling hole. To start you need either &lt;strong&gt;npm&lt;/strong&gt; or &lt;strong&gt;yarn&lt;/strong&gt;
just to manage packages and dependencies. Then you need a build system
or bundler like &lt;strong&gt;webpack&lt;/strong&gt;, &lt;strong&gt;browserify&lt;/strong&gt;, or &lt;strong&gt;parcel&lt;/strong&gt; and that&amp;#39;s not even
considering older options like &lt;strong&gt;gulp&lt;/strong&gt; and &lt;strong&gt;grunt&lt;/strong&gt; and ancillary tools
like &lt;strong&gt;babel&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;
A typical React or Vue project is going to need a &lt;a href=&#34;https://github.com/krasimir/react-webpack-starter/blob/master/package.json&#34;&gt;project.json&lt;/a&gt; and
&lt;a href=&#34;https://github.com/krasimir/react-webpack-starter/blob/master/webpack.config.js&#34;&gt;webpack.config.js&lt;/a&gt; file and sometimes some other files as well. Check
out the links. They&amp;#39;re from a simple project template I found
online. Far from simple.&lt;/p&gt;
&lt;p&gt;
When I was playing with Vue.js a couple of months ago, I ended up
using Webpack to convert the source code into the final JS, take care
of live-reloading, and in general manage the project. I still have no
idea how most of it works. I don&amp;#39;t know if it&amp;#39;s just me but I&amp;#39;m very
uncomfortable relying on tools that I really don&amp;#39;t fully understand to
build my systems.&lt;/p&gt;
&lt;p&gt;
The Clojure world is little better with Leiningen and Boot. If you
don&amp;#39;t believe me, try to make heads or tails of &lt;a href=&#34;https://github.com/bhauman/figwheel-template/blob/master/src/leiningen/new/figwheel/project.clj&#34;&gt;this&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
While it&amp;#39;s true that as a professional you&amp;#39;ll likely use one set of
tools on a day to day basis and you&amp;#39;ll eventually get to know them
that doesn&amp;#39;t mean it&amp;#39;s not a good idea to prepare kids for what&amp;#39;s to
come.&lt;/p&gt;
&lt;p&gt;
On the K12 side we have drag and drop languages, specialized learning
IDEs like BlueJ, simple cut down IDEs like Dr Racket and completely
online environments like repl.it. All great starter tools that
insulate beginners from the complexities to come. College&amp;#39;s
might get closer to the &amp;#34;real world&amp;#34; but just a tad.&lt;/p&gt;
&lt;p&gt;
Don&amp;#39;t get me wrong, I like many of the tools used in K12
classes and there&amp;#39;s far too much complexity in the professional world to
throw at beginners. If we look at a student&amp;#39;s entire school
career, classes are already so packed with material it would be hard to
really prepare kids for the real world within their classes. You could
take that tried and true teacher / professor technique of just
requiring it and having the kids figure it out on their own but that&amp;#39;s
really just downright abusive.&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t have an answer for this one.&lt;/p&gt;
&lt;p&gt;
I have my kids use tools like Git and GitHub early along with using
testing frameworks and external libraries. I also try to move my
students to a general purpose programmable platform like Emacs or
Vim. I think these are sound practices but students will still have a
big learning curve when they finally get to industry.&lt;/p&gt;
&lt;p&gt;
What I really would love it to see the tooling become simpler and
documentation better. &lt;a href=&#34;https://github.com/parcel-bundler/parcel&#34;&gt;Parcel&lt;/a&gt;, a Javascript bundler is one of the newer
kids on the block and is much simpler and cleaner than alternatives
like Webpack. The new version of Clojure has it&amp;#39;s own command line
tool which is also simpler than the alternatives. Maybe we are already
moving in the right direction and this entire rant will become moot in a couple of years.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Do It The Dumb Way</title>
      <link>https://cestlaz.github.io/posts/do-it-the-dumb-way/</link>
      <pubDate>Fri, 30 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/do-it-the-dumb-way/</guid>
      <description>&lt;p&gt;
There&amp;#39;s so much to like in the shape drawing lessons I talked about
in my &lt;a href=&#34;http://cestlaz.github.io/posts/refactoring/&#34;&gt;refactoring&lt;/a&gt; post that I thought I&amp;#39;d share a little more here.&lt;/p&gt;
&lt;p&gt;
It can be argued that the most important things for a program to do is work. The
most clever, elegant, creative program is worthless if it doesn&amp;#39;t
produce the desired result. All too often, beginners and hot shot beginners in particular try to
be too clever too early and get themselves into trouble.&lt;/p&gt;
&lt;p&gt;
When doing the shape drawing lessons the first couple of shape are
pretty easy&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;

| ****            |    | *               |
| ****            |    | **              |
| ****            |    | ***             |
| ****            |    | ****            |
| ****            |    |                 |
|                 |    |                 |
&lt;/pre&gt;
&lt;p&gt;
but things get more interesting with the right justified triangle:&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
----*       *
---**      **
--***     ***
-****    ****
*****   *****
&lt;/pre&gt;
&lt;p&gt;
For this triangle, students want to come up with the formula for the
number of spaces. They usually figure out something like this with
&lt;code&gt;h-i-1&lt;/code&gt; spaces and &lt;code&gt;i+1&lt;/code&gt; stars:&lt;/p&gt;
&lt;div class=&#34;src src-c++&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The formulas become harder to figure out as the shapes become more
complex and sometimes students get stymied.&lt;/p&gt;
&lt;p&gt;
The truth is that while they&amp;#39;re struggling to find the perfect
solution, it&amp;#39;s sometimes better to do it the dumb way.&lt;/p&gt;
&lt;p&gt;
Consider drawing a trapezoid like this example of height 5 and
starting width 12:&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
************
**********
********
******
****
&lt;/pre&gt;
&lt;p&gt;
A student could come up with the &amp;#34;formulas&amp;#34; for spaces and stars but
sometimes there&amp;#39;s a more straightforward way.&lt;/p&gt;
&lt;p&gt;
Consider the number of spaces on each line on the left hand side of
the shape. First line is 0 then 1, 2 etc. Why not start a variable
&lt;code&gt;spaces&lt;/code&gt; at 0 and increment it on each loop iteration.&lt;/p&gt;
&lt;p&gt;
For the number of stars, it&amp;#39;s starting at the width and being reduced
by 2 each time.&lt;/p&gt;
&lt;p&gt;
This leads to a solution similar to this (using the line routine from
the earlier refactoring post):&lt;/p&gt;
&lt;div class=&#34;src src-c++&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This solution is simple to construct, simple to understand, and quite
frankly, hard to get wrong.&lt;/p&gt;
&lt;p&gt;
It can also lead a student to discovering a pattern or &amp;#34;formula&amp;#34; such
as what was used to solve the earlier problems.&lt;/p&gt;
&lt;p&gt;
This might seem to some as a cheap way out, the dumb approach -
creating extra variables and have them count along the way but I
don&amp;#39;t. There&amp;#39;s nothing wrong with simple and straightforward. Yes, you
could come up with an elegant formula but the bottom line is you need
something to count 0,1,2,3â€¦ so create a variable to do it. You need
something to count 12,10,8,â€¦ create one for that as well.&lt;/p&gt;
&lt;p&gt;
Now, I&amp;#39;m not advocating writing 100 if statements rather than a loop
but I think you get the idea.&lt;/p&gt;
&lt;p&gt;
The best solution is one that works and Sometimes the &amp;#34;dumb&amp;#34; approach is the best approach.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Refactoring</title>
      <link>https://cestlaz.github.io/posts/refactoring/</link>
      <pubDate>Wed, 21 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/refactoring/</guid>
      <description>&lt;p&gt;
One of my laments on teaching computer science is that students are
rarely taught and given the chance to develop  good programming
practices. There&amp;#39;s usually not enough time. Beginners work on small
&amp;#34;toys&amp;#34; which don&amp;#39;t lend themselves to good software development
practices and later on, there&amp;#39;s so much other material like
algorithms, data structures etc. to teach and
learn that programming practices usually amount to lines like:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;#34;Make sure to comment your code..&amp;#34;&lt;/p&gt;
&lt;p&gt;
&amp;#34;Indent properlyâ€¦&amp;#34;&lt;/p&gt;
&lt;p&gt;
&amp;#34;Use functionsâ€¦&amp;#34;&lt;/p&gt;
&lt;p&gt;
&amp;#34;It&amp;#39;s important to test your codeâ€¦&amp;#34;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
so when I see an opportunity to use a simple example to drive home a
good practice,  I try to jump on it.&lt;/p&gt;
&lt;p&gt;
Drawing shapes with text is a typical early project. I&amp;#39;ve seen it in
text books and online and have been doing it for years. I recall doing
it back in the 80s in Fortran IV when the programs we wrote were on &lt;a href=&#34;https://en.wikipedia.org/wiki/Punched_card&#34;&gt;punch cards&lt;/a&gt;, run
overnight on an &lt;a href=&#34;https://en.wikipedia.org/wiki/IBM_1130&#34;&gt;IBM 1130&lt;/a&gt;, and printouts picked up the next day.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s a nice use of nested loops. The students will write functions to
create assorted shapes out of asterisks  like rectangles and
triangles. Typical solutions look like this:&lt;/p&gt;
&lt;div class=&#34;src src-c++&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Which results in shapes like these:&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;

| ****            |    | *               |
| ****            |    | **              |
| ****            |    | ***             |
| ****            |    | ****            |
| ****            |    |                 |
|                 |    |                 |
|                 |    |                 |
| *************** |    | *               |
| *************** |    | **              |
| *************** |    | ***             |
| *************** |    | ****            |
| *************** |    | *****           |
| *************** |    | ******          |
| *************** |    | *******         |
&lt;/pre&gt;
&lt;p&gt;
Then there will be more interesting shapes including things like:&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;

*       *            *****
**      ***           *   *            and more
***     *****          *   *
****      ***           *****
&lt;/pre&gt;
&lt;p&gt;
This is a great time to talk about refactoring.  All of the shape
drawing functions follow the same pattern - there&amp;#39;s an outer loop for
the height and then one or more inner loops to draw each line. We can
factor out the inner loops in to a separate &lt;code&gt;line()&lt;/code&gt; function.&lt;/p&gt;
&lt;div class=&#34;src src-c++&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
It&amp;#39;s just like factoring in algebra:&lt;/p&gt;
&lt;div class=&#34;latex-block&#34;&gt;
&lt;p&gt;
(RectangleOuterLoop Ã— Line) + (TriangleOuterLoop Ã— Line) â‡’ Line  (Rectangleouterloop Ã— TriangleOuterloop)&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;
We end up with:&lt;/p&gt;
&lt;div class=&#34;src src-c++&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
It&amp;#39;s simpler, cleaner, and also can lead us to thinking about the
&amp;#34;harder&amp;#34; shapes in an interesting way. Instead of looking at the right
justified triangle as a triangle, we can think of each level as two
lines - one of spaces (shown here as dashes) followed by a line of
stars:&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
----*       *
---**      **
--***     ***
-****    ****
*****   *****
&lt;/pre&gt;
&lt;p&gt;
Noticing that  for a height of 5, the dashed lines count down in
length 4,3,2,1,0 and the star lines count up 1,2,3,4,5, we get:&lt;/p&gt;
&lt;div class=&#34;src src-c++&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Here we have typical early CS assignment that really lends itself to
talking about structuring programs and refactoring. Where else can we
inject good programming practices in ways that make sense early on?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Testing Part 2</title>
      <link>https://cestlaz.github.io/posts/testing-part2/</link>
      <pubDate>Sun, 18 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/testing-part2/</guid>
      <description>&lt;p&gt;
A few weeks ago I wrote about &lt;a href=&#34;https://cestlaz.github.io/posts/testing-testing/#.Wq7Ud3XwZhE&#34;&gt;introducing testing&lt;/a&gt; in CS classes,
specifically using a testing framework. In that post I talked about
the plan but now I can talk about the results.&lt;/p&gt;
&lt;p&gt;
My class interleaves with Hunter&amp;#39;s CSCI 13500 - Software Analysis and
Design I class. One day each week, my students have complete a hands
on lab focusing on whatever is being covered in the 13500 class. I
decided to use one of those labs as a first foray into testing.&lt;/p&gt;
&lt;p&gt;
I had each student use a classmates lab solution. They were to examine
their solution and write a test suite for the lab using the &lt;a href=&#34;https://github.com/onqtam/doctest&#34;&gt;doctest&lt;/a&gt;
C++ testing framework.&lt;/p&gt;
&lt;p&gt;
I think this proved to be a valuable exercise.&lt;/p&gt;
&lt;p&gt;
Partway into the exercise, a few students independently had an issue -
they couldn&amp;#39;t even build the tests.&lt;/p&gt;
&lt;p&gt;
The code looked right. Something like this:&lt;/p&gt;
&lt;div class=&#34;src src-c++&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
It looked like at textbook example of a test case but it wouldn&amp;#39;t even
compile.&lt;/p&gt;
&lt;p&gt;
In all cases, the original student code compiled and ran and gave the
correct result. All the students had code similar to this:&lt;/p&gt;
&lt;div class=&#34;src src-c++&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This stumped everyone for a while - why wouldn&amp;#39;t the test even
compile.&lt;/p&gt;
&lt;p&gt;
The answer was &amp;#34;data types.&amp;#34; The lab specification required that
getValue was supposed to return a &lt;code&gt;double&lt;/code&gt; but in all the problem
cases, the student returned a &lt;code&gt;std::string&lt;/code&gt;. The lab appeared to work
since &lt;code&gt;std::cout&lt;/code&gt; handles strings as well as numeric data types but
once they put it in to a test case that actually checked types the
problem was apparent and easy to fix.&lt;/p&gt;
&lt;p&gt;
As it turns out, I was pretty excited about this â€“ even before
finishign the tests, the act of writing tests revealed a problem. This
is a good thing.&lt;/p&gt;
&lt;p&gt;
From there, it was pretty easy for students to finish writing the
tests for their classmates labs.&lt;/p&gt;
&lt;p&gt;
Fast forward a week. This was the first lab where I required
the students to submit their own test suite as part of their lab. This
didn&amp;#39;t seem to slow anyone down by an appreciable and time will tell
if this leads to better development practices but it certainly made my
life easier. I was able to quickly move from repo to repo and type:&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make tests
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./tests -s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;... watch the tests run
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./main
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--- watch the program run&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Easy peasy.&lt;/p&gt;
&lt;p&gt;
Not only did it make it faster for me, it also gave me insights into
their programs by seeing their decisions in terms of test writing.&lt;/p&gt;
&lt;p&gt;
Is it a win?&lt;/p&gt;
&lt;p&gt;
At the very worst, they&amp;#39;re learning an
industry practice and at best, it&amp;#39;s going to help them improve as
software engineers. Add on the fact that it&amp;#39;s making my life as a
teacher easier both in terms of understanding the students work and in
terms of speed of evaluation. Sounds like a win to me.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sigcse2018 Making theory more acccesible</title>
      <link>https://cestlaz.github.io/posts/sigcse2018-theory/</link>
      <pubDate>Tue, 13 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse2018-theory/</guid>
      <description>&lt;p&gt;
Next up from SIGCSE 2018 is John MacCormick&amp;#39;s session on
&lt;a href=&#34;https://dl.acm.org/citation.cfm?id=3159557&#34;&gt;Strategies for Baing the CS Theory Course on Non-decision Problems&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
MacCormicks&amp;#39;s stance is that CS theory  is tough the first time around
and using non-decision problems is a viable approach to make theory
more accessible to beginners. As MacCormick said in his paper:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;â€¦ a decision problem may ask the yes/no question, &amp;#34;Does this graph
have a Hamilton cycle?&amp;#34; The corresponding non-decision problem is,
&amp;#34;Please give me a Hamilton cycle of this graph if it has one.&amp;#34;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This leads to writing programs to explore concepts in CS theory rather
than just living in the world of proof.&lt;/p&gt;
&lt;p&gt;
MacCormick goes on to say that:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For this audience, the key advantage of non-decision problems
is that they are more realistic: they match the previous programming
and algorithms experience of undergraduates more closely.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I love the idea. Writing a program can make an abstract problem more
concrete and can lead to better understanding for those of us who are
less math inclined.&lt;/p&gt;
&lt;p&gt;
My next thought was that this shouldn&amp;#39;t just be a change implemented
in theory courses. Some of these ideas should move down to more
introductory CS classes. Not the hardcore stuff but light
introductions to the topics so that we can layer the learning. If we
introduce some of these concepts in CS 1 classes then when they get to
the theory class it won&amp;#39;t be the students first rodeo.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve had success with this when teaching recursion early. I&amp;#39;ve also
done it with other concepts. When we teach the Towers of Hanoi, yes,
it&amp;#39;s a nice recursion problem but really it&amp;#39;s to get the students
thinking about run time and a bit of proof. likewise, when we do a
maze solver in NetLogo we&amp;#39;re alluding to dynamic programming, search,
and path finding.&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t have too much more to say on this topic right now. I&amp;#39;m not
enough of a theory guy to sensibly design these experiences. The good
news is that MacCormick has written an soon to be released &lt;a href=&#34;https://www.amazon.com/What-Can-Computed-Practical-Computation/dp/0691170665/ref=asap_bc?ie=UTF8&#34;&gt;book&lt;/a&gt; on the subject. I
signed up for a reviewer copy at SIGCSE and look forward to receiving
a copy. Once I do I hope to be able to find some gems that I can work
into CS 1 experiences.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sigcse2018 Bootstrapworld on Creativity in CS classes</title>
      <link>https://cestlaz.github.io/posts/sigcse2018-bootstrap/</link>
      <pubDate>Fri, 02 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse2018-bootstrap/</guid>
      <description>&lt;p&gt;
I really didn&amp;#39;t know what to expect at the &lt;a href=&#34;https://dl.acm.org/citation.cfm?id=3159471&#34;&gt;Creativity, Customization,
and Ownership: Game Design in Bootstrap: Algebra&lt;/a&gt; session. I&amp;#39;ve been a
big fan of &lt;a href=&#34;http://www.bootstrapworld.org/&#34;&gt;Bootstrep&lt;/a&gt; for years and looking at the authors, &lt;a href=&#34;http://blog.acthompson.net/2017/10/cs-teacher-interview-emmanuel.html&#34;&gt;Emmanuel
Schanzer&lt;/a&gt;&amp;#39;s been a freind forever. I&amp;#39;ve never met &lt;a href=&#34;https://twitter.com/ShriramKMurthi&#34;&gt;Shriram Krishnamurthi&lt;/a&gt;
in person but am looking forward to it. We&amp;#39;ve traded emails and blog
comments. I&amp;#39;d like to consider him a friend and I certainly respect
him and his work even though we frequently disagree around the
edges. The third author and presenter, Kathi Fisler was new to me.&lt;/p&gt;
&lt;p&gt;
The Bootstrap program is embedded in algebra classes. In it, students
use Racket (nee scheme) to reinforce math skills while building
computer science skills. The big student project is a graphical game.&lt;/p&gt;
&lt;p&gt;
When designing the project, students are asked to decide on and find
four resources:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The background image&lt;/li&gt;
&lt;li&gt;The player image&lt;/li&gt;
&lt;li&gt;The target image&lt;/li&gt;
&lt;li&gt;The enemy image&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Students are given a short amount of time to decide on and find these
four images. I think it was about ten minutes and that&amp;#39;s it. That&amp;#39;s
all the &amp;#34;creativity&amp;#34; in the assignment. After that, all the students
are essentially creating the same game with different skins.&lt;/p&gt;
&lt;p&gt;
This design makes sense. You can&amp;#39;t have students going all over the
place. Constraining the assignment in this way allows teachers who
might now be strong in computer science to guide the kids through the
program to completion.&lt;/p&gt;
&lt;p&gt;
At the time I was thinking: I really like all of this but is it really
open ended creativity and discovery with respect to math or computer
science? As it turned out, Fisler addressed this point at the end of
the talk in a way that made me vary happy.&lt;/p&gt;
&lt;p&gt;
Fisler went on to describe the rest of the student experience and then
went on to talk about the statistics they gathered.&lt;/p&gt;
&lt;p&gt;
One big takeaway was that while all the students were essentially
writing the same game varying only the graphical elements, this
encouraged students to create very different themes. They also created
rich stories around their games. The project might not have been
&amp;#34;creative&amp;#34; with respect to the CS or Math directions but it was certainly
creative in other important areas. The other takeaway was that
survey&amp;#39;s indicated all sorts of positives from the program as a whole
so the project didn&amp;#39;t seem to have suffered by having the students
essentially write the same program. Participants were proud of their
work, they felt their games were different from their peers and in
general the experience was good.&lt;/p&gt;
&lt;p&gt;
During questions, someone asked about adding a fifth element - a
projectile or missile. It turns out that at one point the program had a
projectile component but that led to the vast majority of projects to
be themed in very similar ways. Even though not the same, it reminded me to something Randy
Pausch said in his &lt;a href=&#34;https://www.youtube.com/watch?v=ji5_MqicxSo&#34;&gt;Last Lecture&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You make whatever you want. Two rules: no shooting violence and no
pornography. Not because Iâ€™m opposed to those in particular, but you know, thatâ€™s been done with
VR, right? [laughter] And youâ€™d be amazed how many 19-year-old boys are completely out of ideas
when you take those off the table.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
At the very end, Fisler addressed my questions about creativity and
discovery. She posed these questions of her own: &amp;#34;Do we overstate the
case for creativity?&amp;#34; and &amp;#34;Is pure constructivism a win?&amp;#34;&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve ranted on contructivism before. It can be great but a
constructivist lesson takes a knowledgeable educator and a lot of time,
preparation, and effort. It&amp;#39;s a big ask for, say, a high school
teacher who&amp;#39;s already taking home hours of work every evening. Too
often I&amp;#39;ve seen the following &amp;#34;contructivist&amp;#34; model instead:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Take an isntructor that doesn&amp;#39;t know their craft, the content, or&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;niether.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Let the kids play with stuff.&lt;/li&gt;
&lt;li&gt;Show off the couple of autodidacts that figure it out as success&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;stories.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll rant more about this &amp;#34;model&amp;#34; with respect to the new buzz word
&amp;#34;lead learner&amp;#34; at some point in the future.&lt;/p&gt;
&lt;p&gt;
On the creativity side, it&amp;#39;s important but there are also times for
the instructor to lead and for guidelines to be followed.
We want to foster creativity but that doesn&amp;#39;t mean that it&amp;#39;s 100%
creativity 100% of the time. Education is like life, a balance. The
Bootstrap program had to constrain the CS and math learning but
allowed for creativity in other areas. It&amp;#39;s smart and it&amp;#39;s a win.&lt;/p&gt;
&lt;p&gt;
I still want to meet Shriram in person one day and now also Kathi
Fisler. I didn&amp;#39;t know what to expect walking in but I left the talk
reminded of why I&amp;#39;m such a fan of Emmanuel, his team, and their work.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sigcse2018 - Malloc Lab</title>
      <link>https://cestlaz.github.io/posts/sigcse2018-malloc-lab/</link>
      <pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse2018-malloc-lab/</guid>
      <description>&lt;p&gt;
I wasn&amp;#39;t going to go to this session. I started out in a panel on
integrating social good into CS Ed. With the panel not meeting my
expectations I moved over to my second choice - the system programming
sessions where I saw &lt;a href=&#34;https://dl.acm.org/citation.cfm?id=3159597&#34;&gt;Implementing Malloc: Students and Systems
Programming&lt;/a&gt;, a paper presented by &lt;a href=&#34;http://www.cs.cmu.edu/~bpr/&#34;&gt;Brian Railing&lt;/a&gt; of CMU.&lt;/p&gt;
&lt;p&gt;
I really liked both the paper and the talk.&lt;/p&gt;
&lt;p&gt;
CMU computer science students all take a systems course that uses
&lt;a href=&#34;https://www.amazon.com/Computer-Systems-Programmers-Perspective-3/dp/9332573905/ref=pd_lpo_sbs_14_t_0?_encoding=UTF8&amp;amp;psc=1&amp;amp;refRID=Y5ZKG2V8ZYZZPZHQP8SQ&#34;&gt;Computer Systems: A Programmer&amp;#39;s Perspective&lt;/a&gt;. It&amp;#39;s a great book. I
read through the first edition years ago and felt it was great
resource not only in a systems course but also for self study. One of
the labs has the students implement their own memory allocation calls,
or &lt;strong&gt;malloc&lt;/strong&gt; for us old time C wonks.&lt;/p&gt;
&lt;p&gt;
There were a number of self perceived  deficiencies with the
assignment such as encouraging bad programming style by modeling
less than ideal practices but the biggest deficiency as that students
could game the assignment. Students could do very well on the
assignment by exploiting knowledge of the assignment rather than by
writing a full and correct malloc implementation. One example is that
students were able to figure out that no allocation would be more than
100MB so they really didn&amp;#39;t have to deal with 64 bit pointers. They
could use smaller offsets thus simplifying the assignment. The
assignment became more about figuring out how to get it through the
grader and less about learning memory management. I&amp;#39;m sure I&amp;#39;m
overstating it but that&amp;#39;s the idea.&lt;/p&gt;
&lt;p&gt;
Railing explained all of the deficiencies and then how they changed
the assignment to address them.&lt;/p&gt;
&lt;p&gt;
At the end of the day, the assignment had fewer loopholes to game so
students had to really write the malloc library and presumably learn
about memory management.&lt;/p&gt;
&lt;p&gt;
They also added an intermediate deliverable so students couldn&amp;#39;t leave
everything for the last minute.&lt;/p&gt;
&lt;p&gt;
Near the end of the talk, Railing discussed results where he pointed
out that students final exam scores didn&amp;#39;t change but they did better
on the malloc questions. It wasn&amp;#39;t clear if the overall scores didn&amp;#39;t
change, meaning that the students did better on the malloc questions
but worse somewhere else or if they did similarly to past students on
the other sections and in addition they scored better on the malloc
questions. I&amp;#39;m not sold on the final exam questions being the best way
to evaluate learning but it is an easy data point.&lt;/p&gt;
&lt;p&gt;
I loved the presentation and paper and I love what Railing is doing
but my big takeaway wasâ€¦&lt;/p&gt;
&lt;p&gt;
Well, Duhâ€¦&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;students aren&amp;#39;t doing as they should&lt;/li&gt;
&lt;li&gt;teacher realizes students are gaming assignment&lt;/li&gt;
&lt;li&gt;teacher reworks assignment&lt;/li&gt;
&lt;li&gt;students do better&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Teachers do this all the time. Of course when we do it, it&amp;#39;s not
&amp;#34;research.&amp;#34; This was a recurring theme for me at SIGCSE2018 and I
tweeted it. While it&amp;#39;s true that K12 teachers can learn a lot about CS
content from higher ed, people in higher ed can learn a lot about
teaching from teachers.&lt;/p&gt;
&lt;p&gt;
What Railing presented was terrific and important as changing
assignments like this will now be considered by people who haven&amp;#39;t
thought about this before but this is second nature to a teacher. Of
course I&amp;#39;m talking about a good teacher, not one who blindly follows
scripted lessons.&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t mean this as a slight to professors. They&amp;#39;re hired and
promoted based on research so much of their job involves another skill
set. I know many professors who care very much about teaching but they
might only teach one or two classes a semester that meets once or
twice a week while a typical high school teacher meets 150 students a
day five days a week over five different classes a day.  Much more of
an opportunity for deliberate practice.&lt;/p&gt;
&lt;p&gt;
This presents a huge challenge. How can professors who are hired and
promoted as researchers be given the time and ability to develop as
teachers? What about adjuncts or Teaching Assistants? I&amp;#39;d imagine it&amp;#39;s
even harder for them. I know that colleges have lines for teaching
faculty but from what I can see, those instructors are usually super
overloaded with classes and students so that doesn&amp;#39;t solve the
problem. Even if you do have teaching faculty that have the time to
develop their craft, how do you get those teaching chops over to the
research faculty?&lt;/p&gt;
&lt;p&gt;
After the session, I was talking about this with &lt;a href=&#34;http://www.cs.cmu.edu/~mjs/&#34;&gt;Mark Stehlik&lt;/a&gt;,
Assistant Dean at CMU&amp;#39;s School of Computer Science. Mark was telling
me about CMU&amp;#39;s efforts to develop teaching faculty across the
disciplines. I was happy to hear about the efforts CMU was taking but
it sounds like they have the same challenges with respect to pedagogy
as everyone else. If it&amp;#39;s a challenge for CMU with all their
resources, what does that mean for the rest of us?&lt;/p&gt;
&lt;p&gt;
Still, it was encouraging to go to a number of sessions where it was
clear that professors - both teaching and research faculty are serious
about the craft of teaching and conferences like SIGCSE can bring them
together with those of us who don&amp;#39;t have the chops as researchers but
do so as teachers.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Testing, Testing</title>
      <link>https://cestlaz.github.io/posts/testing-testing/</link>
      <pubDate>Mon, 19 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/testing-testing/</guid>
      <description>&lt;p&gt;
With CS4All being the buzzword of the day we&amp;#39;re paying a lot of
attention to the fact that when we teach a CS class for all students,
most of them won&amp;#39;t end up studying CS or going directly
into a tech heavy field.&lt;/p&gt;
&lt;p&gt;
Among those that do study CS though, there is another division. Those
studying CS as an academic exercise or to go on to graduate studies
and those who are going in to the tech sector. For those going into
the tech field, it&amp;#39;s important that they&amp;#39;re prepared in terms of
software development, design, and all those goodies not covered in CS
classes.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not advocating removing the good stuff currently in most colleg CS
curricua, although I will say that most CS programs I&amp;#39;ve reveiwed could benefit by
trimming some requriements and adding some electives. I am advocating
doing more than telling your students &amp;#34;comment your code,&amp;#34; - a refrain
many undergrads have heard frequently with little guidance.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m advocating to begin by bringing in tools and practices that either
don&amp;#39;t detract from current CS classes or in fact can add to or
streamline them.&lt;/p&gt;
&lt;p&gt;
Last year I wrote about &lt;a href=&#34;https://cestlaz.github.io/posts/sigcse-2017-github-4/&#34;&gt;using Git and GitHub&lt;/a&gt; in my classes. Students
have to submit projects anyway and frequently have to work in teams so
using Git and a Git hosting service can actually make both student&amp;#39;s
and instructor&amp;#39;s class experiences better while introducing them to an
industry best practice.&lt;/p&gt;
&lt;p&gt;
Today I want to talk about testing.&lt;/p&gt;
&lt;p&gt;
Students are always told to test their code but frequently not given
tremendous guidance. The results can be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;projects that don&amp;#39;t compile&lt;/li&gt;
&lt;li&gt;projects that compile and run but not the way they&amp;#39;re supposed to.&lt;/li&gt;
&lt;li&gt;wonky input or interfaces&lt;/li&gt;
&lt;li&gt;projects that don&amp;#39;t work for all cases&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
On the instructor side, we have to evaluate the student&amp;#39;s
submissions and deal with all of this. Some teachers use auto graders
to help. I have mixed feelings on them. On the one hand they can speed
up grading but on the other hand it&amp;#39;s important for me as the teacher
to actually dive into the student&amp;#39;s code. In any case, using an auto grader
is actually somewhat similar to running a test suite.&lt;/p&gt;
&lt;p&gt;
Why not have the students create their own test suites? If done right,
this should encourage students to evaluate their own code more
carefully and also cut down on the time it takes the intructor to
evaluate a given submission.&lt;/p&gt;
&lt;p&gt;
This means that we have to use a testing framework with a very low
cost of entry.&lt;/p&gt;
&lt;p&gt;
I ended up finding &lt;a href=&#34;https://github.com/onqtam/doctest&#34;&gt;doctest&lt;/a&gt; for C++. It&amp;#39;s really simple and just a
single include file. This means that students don&amp;#39;t have to actually
install anything on their machines. Here&amp;#39;s the example from the
project page:&lt;/p&gt;
&lt;p&gt;
&lt;img src=&#34;https://github.com/onqtam/doctest/raw/master/scripts/data/using_doctest_888px_wide.gif&#34; alt=&#34;https://github.com/onqtam/doctest/raw/master/scripts/data/using_doctest_888px_wide.gif&#34; title=&#34;https://github.com/onqtam/doctest/raw/master/scripts/data/using_doctest_888px_wide.gif&#34; /&gt;&lt;/p&gt;
&lt;p&gt;
Basically, the students can just start writing tests.&lt;/p&gt;
&lt;p&gt;
Python also has a couple of low friction testing options. One is to
use the built in &lt;a href=&#34;https://docs.python.org/3/library/doctest.html&#34;&gt;doctest&lt;/a&gt; facility. Basically you put sample runs in the doc
string at the top of a function with the expected output:&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This might seem a little cumbersome, particularly if you look at the
example at the link. It also requires the tests go on top of each
function and that the tests will print out as part of the docstring.&lt;/p&gt;
&lt;p&gt;
The other easy Python option is the built in &lt;a href=&#34;https://docs.python.org/3/library/unittest.html&#34;&gt;unittest&lt;/a&gt; module.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s an example of testing strings from the link above:&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
I havn&amp;#39;t played with Java testing in years but I&amp;#39;d guess there&amp;#39;s
something similarly light weight.&lt;/p&gt;
&lt;p&gt;
Tomorrow I&amp;#39;m hoping to finish the groundwork on using C++ doctest with
my class and I&amp;#39;ll write another post afterwards. Probably after SIGCSE
since I&amp;#39;ll be attending that from Wednesday on.&lt;/p&gt;
&lt;p&gt;
We&amp;#39;ll see how this goes but I&amp;#39;m guessing it will work well. If it
does, it should make my life as a grader easier and also get the kids
on track to using test frameworks - something they&amp;#39;ll need wherever
they end up.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>APCS-P -  Bigger Intake Or Leaky Pipe</title>
      <link>https://cestlaz.github.io/posts/apcsp-bigger-intake-or-leaky-pipe/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/apcsp-bigger-intake-or-leaky-pipe/</guid>
      <description>&lt;p&gt;
Advanced Placement Computer Science got top billing on Alfred
Thompson&amp;#39;s &lt;a href=&#34;http://blog.acthompson.net/2018/01/computer-science-education-things-im.html&#34;&gt;Things I&amp;#39;m Watching in 2017&lt;/a&gt; post. Alfred talks about how
APCS-P exploded onto the scene and wonders what will happen with APCS
this year.&lt;/p&gt;
&lt;p&gt;
I have some questions as well but mine won&amp;#39;t be answered for years to
come, if ever.&lt;/p&gt;
&lt;p&gt;
Like it or not, the College Board has an out sized influence on K12
education. As long as people are convinced that AP=good there will be
a push for more and more AP classes and APCS-P is a perfect class to
push. CS is the hot topic in K12, the topic is getting a big push
from both politicians and industry, the class has no pre-requisites
and in spite of being called a college course is somehow appropriate
for a typical tenth grader.&lt;/p&gt;
&lt;p&gt;
The concern here is that at the end of the day. APCS-P is an exam or
rather an exam plus two other assessments. The quality can vary
greatly. I&amp;#39;ve heard of APCS-P implementations that seem pretty
rigorous and I&amp;#39;ve seen implementations that are, quite frankly, a
joke. The question is this: is APCS-P both motivating kids to go on to
the next level and just as importantly preparing them to succeed at
that level?&lt;/p&gt;
&lt;p&gt;
We might never know.&lt;/p&gt;
&lt;p&gt;
A high school might only offer APCS-P. If APCS-A isn&amp;#39;t offered, we
might not know if the student went on to take more CS and we won&amp;#39;t
know if the student succeeded or not. I&amp;#39;ve seen this with some very
high profile, popular, after school/summer non-profits. The kids have
a great time and the non-profits rave about how much their kids learn
but then the kids take a real CS class in school and drop like
flies. Was it the teacher/professor or did the non-profit set the kids up to
fail by convincing them they knew a whole lot more than they did and
that CS was super easy all the time.&lt;/p&gt;
&lt;p&gt;
If credit is given for APCS-P, it looks like it will be blanket
credit. CS majors and minors will still have to take all the same classes in
college and CS so it will be very hard to tell if APCS-P is
responsible for any uptick in CS.&lt;/p&gt;
&lt;p&gt;
At the end of the day, the College Board is going to make a lot of
money but if APCS-P becomes the standard high school CS course will
this leave us with true, quality CS4All? I have my doubts.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2017 in review - Hunter Undergraduate CS</title>
      <link>https://cestlaz.github.io/posts/2017-review-hunter-cs/</link>
      <pubDate>Tue, 26 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2017-review-hunter-cs/</guid>
      <description>&lt;p&gt;
I usually don&amp;#39;t do year in review posts. At Stuy, not much changed
year after year so I never felt it worth summarizing the past and
projecting the future. At Hunter, now that I&amp;#39;m a couple of years in,
projects are really picking up steam so I think it&amp;#39;s worth talking
about them.&lt;/p&gt;
&lt;p&gt;
One of my two major missions at Hunter was to build a CS Honors
program and raise the profile of Hunter&amp;#39;s undergraduate CS program in
general. Hunter had a strong CS program before I joined the team it&amp;#39;s
just that few people knew about it.&lt;/p&gt;
&lt;p&gt;
My goal is to see Hunter become the &amp;#34;go to&amp;#34; institution for
undergraduate CS in New York City before my time is done.&lt;/p&gt;
&lt;p&gt;
This is an extremely important mission.&lt;/p&gt;
&lt;p&gt;
There are other strong CS options besides Hunter but compare the costs:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Institution&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;&lt;/th&gt;
&lt;th&gt;Annual Tuition&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;NYU&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;$50,464&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NYY Tandon&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;$48,750&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Columbia&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;$54,504&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Hunter&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;$6,530&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;Hunter is about one tenth the cost.&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
True, if you&amp;#39;re wealthy this isn&amp;#39;t a problem and if you&amp;#39;re at the
bottom of the economic ladder you might get a full ride but if you
fall into that category where you earn more than the financial aid
people think is &amp;#34;poor&amp;#34; but are clearly not rich you&amp;#39;re left in a bad place. This seems
particularly true for New Yorkers as our income seems higher than that
of people from other parts of the country but our cost of living is
higher as well.&lt;/p&gt;
&lt;p&gt;
My wife and I are both career public educators. No one would confuse a
family of two working teachers as upper class but we were granted no
financial aid for our kids. The alternatives without a great public
option are to have saved for our entire lives and now liquidate those
savings or go into tremendous debt.&lt;/p&gt;
&lt;p&gt;
This alone makes the mission critical. Add to that the accessibility
issue - elite private institutions only have to concern themselves
with whatever slice of the population they choose to accept. We are
charged with providing a top flight education to all - be they the
high achievers, the late bloomers, the struggling students or anyone
else.&lt;/p&gt;
&lt;p&gt;
So, what&amp;#39;s happened in the past year?&lt;/p&gt;
&lt;p&gt;
First, the Daedalus honors program is developing nicely. In our first
year we had a cohort of 12. This past year 27. I haven&amp;#39;t seen the
applicant pool yet - Hunter applications are open until the end of
January, but I&amp;#39;m hoping to bring in an even larger cohort this year. I
spent a good amount of time this fall visiting high schools to talk
about Hunter CS and CS options in general. Not as many as I&amp;#39;d like but
more than during year one.&lt;/p&gt;
&lt;p&gt;
We had classes, trips, and special events but more important was that
the cohort is starting to form a community and the students want it to
be a community that includes ALL of Hunter CS, not just the honors
students.&lt;/p&gt;
&lt;p&gt;
They&amp;#39;ve started a once a week Dojo where students can work on projects
and interact and we&amp;#39;re starting an evening speaker series in
the Spring.&lt;/p&gt;
&lt;p&gt;
Overall there&amp;#39;s a vibe of excitement and an energy around Hunter CS
that I&amp;#39;ve been told hasn&amp;#39;t been there before.&lt;/p&gt;
&lt;p&gt;
In my class, I&amp;#39;ve been introducing a number of real world practices
that are usually not covered in undergraduate CS and we&amp;#39;re starting to
talk about bringing those practices into the non-honors sections.&lt;/p&gt;
&lt;p&gt;
Finally, we&amp;#39;ve started to partner with the New York Tech
community. We&amp;#39;re bringing together the Hunter students and the tech
professionals to raise awareness outside of Hunter of what our
students can do and to best prepare our students for their next
steps. These partnerships, in addition to internship possibilities
have led to us planning some great things this coming semester
incuding:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;workshops such as how to work on an open source project or how to do&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;a code review.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Having industry mentors at our local Dojo sessions.&lt;/li&gt;
&lt;li&gt;Mixer events to educate our students as to the variety of pathways&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;they can follow when they graduate.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;and more.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This past year set the stage but there will be some challenges moving
forward.&lt;/p&gt;
&lt;p&gt;
The biggest one is continued outreach to high schools. Getting to the
students and their parents to let them know that we have a great
program. It&amp;#39;s also about convincing them to come to Hunter. Back in
the day CUNY was &amp;#34;the poor man&amp;#39;s Harvard&amp;#34; but open enrollment in the
1970s killed that reputation. CUNY has been making it&amp;#39;s way back and
Hunter has many excellent programs but reputations are decades in the
making and at Hunter CS we&amp;#39;re just starting to get the word out.&lt;/p&gt;
&lt;p&gt;
The other big challenge will be with time. Right now, for the most
part, I&amp;#39;m a team of one. I have tremendous support from my colleagues
but they all have their own full time obligations and the overall
growth in Hunter CS has already put a strain on personnel and
resources.&lt;/p&gt;
&lt;p&gt;
In spite of the challenges, I&amp;#39;m not complaining. This has been an
exciting year for Hunter CS and an exciting year for me to be a part
of it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Breaking down problems and writing</title>
      <link>https://cestlaz.github.io/posts/whats-next/</link>
      <pubDate>Thu, 14 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/whats-next/</guid>
      <description>&lt;p&gt;
This question appeared on Facebook a few days ago:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Does anyone have an effective way to teach students how to break down
a problem into steps and then solve each step one by one? I think my
students are struggling with a large question and breaking it in
subsequent parts.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There were some good suggestions. I wanted to add something but didn&amp;#39;t
have time then so I thought I&amp;#39;d write it up now.&lt;/p&gt;
&lt;p&gt;
As an aside, it took me forever to find the post again over on
Facebook. If there&amp;#39;s a way to mark posts or save a direct link I&amp;#39;d
love to hear it. I had to look through all the CS Ed groups I belong
to manually until I found it again.&lt;/p&gt;
&lt;p&gt;
When I read the program I was reminded of a PD session we had to
attend back at Stuyvesant. Back then the fad was &lt;a href=&#34;https://en.wikipedia.org/wiki/Writing_across_the_curriculum&#34;&gt;Writing Across the
Curriculum&lt;/a&gt;. Every teacher in every class was to give some significant
writing assignment, evaluate it and provide feedback. Let&amp;#39;s forget the
fact that most of us never had any training or preparation to do so.&lt;/p&gt;
&lt;p&gt;
On that PD day the guest speaker was &lt;a href=&#34;https://en.wikipedia.org/wiki/William_Zinsser&#34;&gt;William Zinsser&lt;/a&gt;. The first thing
he said was that what we were being asked to do by our principal was
bunk. He then proceeded to give advice on  simple good writing.&lt;/p&gt;
&lt;p&gt;
The procedure he recommended following was to ask yourself (or have
the student ask themselves) &amp;#34;what does my audience need to know next?&amp;#34;
That&amp;#39;s your next sentence. Then ask the question again. Rinse and
repeat until done.&lt;/p&gt;
&lt;p&gt;
It was simple and it made sense. It also applied to introductory CS
problems. When starting out, students have a limited CS / programming
tool box so a good question for them to ask when trying to solve a
problem is not only &amp;#34;what do I need to do next? but also &amp;#34;what can I
do next?&amp;#34;&lt;/p&gt;
&lt;p&gt;
When students have a limited CS vocabulary and set of idioms - loops,
conditionals, functions, whatever, there will only be so many things
they can do to move a problem along. If they go through the things the
&lt;strong&gt;&lt;strong&gt;can&lt;/strong&gt;&lt;/strong&gt; do they will likely fall on to what they &lt;strong&gt;&lt;strong&gt;should&lt;/strong&gt;&lt;/strong&gt; do.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s similar to doing a proof in geometry. Students have a set of
givens. Given that set, what can they do? They only know so many
theorems at the beginning.&lt;/p&gt;
&lt;p&gt;
Over time, they&amp;#39;ll recognize patterns and develop as problem solvers.&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re part of the AP CS A teachers facebook group you probably saw
the question. Many good answers were posted. I just wanted to add this
thought to the collection.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>New York State moving forward with CS Teacher Certification</title>
      <link>https://cestlaz.github.io/posts/ny-cs-certificate/</link>
      <pubDate>Tue, 12 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/ny-cs-certificate/</guid>
      <description>&lt;p&gt;
Last April I woke up early and trekked up to Albany along with a few
of my Hunter College colleagues to share our thoughts on K12 Computer
Science teacher certification with the Board of Regents. We gave a
presentation to the Regents Higher Education Committee and afterwards
had a chance to talk with some of the Regents as well as other members
of the New York State Department of Education.&lt;/p&gt;
&lt;p&gt;
I left feeling that our proposals were well received and I think
everyone present - both the Hunter and NYSED contingents hoped that
things would move forward on this important issue.&lt;/p&gt;
&lt;p&gt;
Fast forward to today, December 8, 2017. I was up at the crack
of dawn. Driving in the dark in the snow from NYC to Albany to once
again attend a Board of Regents Higher Education Committee
meeting. This time, the agenda item was:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Proposed Amendments to Part 30 of the Regents Rules and Section 52.21
and Part 80 the Regulations of the Commissioner of Education Relating
to a New Certification Area and Tenure Area for Computer Science&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No discussion or debate this time around just the proposal. If I
understand the process correctly, this should come up again at the
March meeting at which point it will be voted on. If approved, it
looks like we&amp;#39;ll have a pathway towards certification for CS teachers.&lt;/p&gt;
&lt;p&gt;
I haven&amp;#39;t had a chance to dive into the details but at the meeting a
few key points came up:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;As the proposal indicates this will be a subject area in which a&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;teacher can be certified and be awarded tenure.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There will be a traditional pathway for new teachers - Bachelors /&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Masters degree&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There will be an alternative pathway for people entering from the&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;workforce&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There will be an extension for teachers with another license so they&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;won&amp;#39;t have to give up tenure in their current license.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There will be an &amp;#34;individual evaluation&amp;#34; pathway which sounds to me&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;like it could catch people who fall through the cracks.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There looks to be a sensible ramp up period - until September 2022&lt;/li&gt;
&lt;li&gt;There&amp;#39;s a grandfathering provision that looks to last 10 years.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This sounds like a smart sensible plan. Multiple pathways, shallow
ramp up and provisions to protect existing teachers.&lt;/p&gt;
&lt;p&gt;
Of course, the devil is in the details. What&amp;#39;s an approved program?
Can a grandfathered teacher teach all CS classes or just intro ones?
etc.&lt;/p&gt;
&lt;p&gt;
As I said, I haven&amp;#39;t had a chance to dive into the details yet but
this is very exciting.&lt;/p&gt;
&lt;p&gt;
Prior to the meeting I was chatting with a few other people
attending. One, a &lt;a href=&#34;http://www.uft.org/&#34;&gt;UFT&lt;/a&gt; representative was very excited about the
prospect. Another contingent, a group from &lt;a href=&#34;https://www.nysut.org/&#34;&gt;NYSUT&lt;/a&gt; was very much against
a new certification area. Their position was that this would create a
teacher shortage because no one would have a CS license and no one
would get one due to the difference in salary between teaching and the
tech industry. I&amp;#39;ve already written on how I feel that this is a &lt;a href=&#34;https://cestlaz.github.io/posts/will-we-lose-cs-teachers-to-industry&#34;&gt;red
herring&lt;/a&gt;. What shocked me though was their feeling that &amp;#34;we already
have many non-CS teachers effectively teaching CS across the
state. They&amp;#39;re doing a great job and don&amp;#39;t need any additional content
or pedagogical knowledge.&amp;#34; I think they&amp;#39;re wrong and I also think that
when we as a community talk about how our summer professional
development is all that&amp;#39;s needed, we undercut CS education and
the teaching profession as a whole.&lt;/p&gt;
&lt;p&gt;
In any event this was a big step for New York. I tried to individually
thank as many of the participants as I could for helping shepherd this
along but could only speak to a few so I&amp;#39;ll just give a blanket thank
you here to the NY State Board of Regents, Board of Education and
State Education department.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2017 - Day 1</title>
      <link>https://cestlaz.github.io/posts/advent-2017-1/</link>
      <pubDate>Sat, 02 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/advent-2017-1/</guid>
      <description>&lt;p&gt;
It&amp;#39;s once again time for &lt;a href=&#34;http://adventofcode.com&#34;&gt;Advent of Code&lt;/a&gt;. That one a day programming
competition that&amp;#39;s been running now for three years.&lt;/p&gt;
&lt;p&gt;
Here are some thoughts on &lt;a href=&#34;http://adventofcode.com/2017/day/1&#34;&gt;day 1&lt;/a&gt;. The core of the problem is that you
have a large string of digits and you have to calculate a
checksum. This is done by adding the sum of a subset of the
digits. Only the ones that are identical to the digit to their
right. To make it a little more interesting, the last digit wraps
around to the first for checksum purposes.&lt;/p&gt;
&lt;p&gt;
For example, the input &lt;strong&gt;&lt;strong&gt;2234335&lt;/strong&gt;&lt;/strong&gt; leads to the calculate &lt;code&gt;2 + 3&lt;/code&gt; or
&lt;code&gt;5&lt;/code&gt;. The input &lt;strong&gt;&lt;strong&gt;234445662&lt;/strong&gt;&lt;/strong&gt; leads to &lt;code&gt;4+4+6+2&lt;/code&gt; or &lt;code&gt;16&lt;/code&gt;. We add 4 for
twice because the first four is adjacent the second and the second the
third. We add the 2 at the end because it wraps around to match the
one at the front.&lt;/p&gt;
&lt;p&gt;
We first read in the data and strip off the trailing newline&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;input.txt&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;origdata &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; f&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;readline()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;origdata &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; origdata&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; origdata&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;
Then, since we can access the elements of the string as a list (or
array) it&amp;#39;s a simple loop to calculate the sum:&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;l &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; len(data)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(l&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; data[i]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;data[i&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; int(data[i]) &lt;span style=&#34;color:#75715e&#34;&gt;# Don&amp;#39;t forget to turn the string into an int&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# data[-1] is the python way of getting the last element - here we check the wraparound&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; data[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; data[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; int(data[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Checksum: &amp;#34;&lt;/span&gt;,s)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;
Pretty straightforward but I don&amp;#39;t like the special case of checking
the last element for the wraparound. Sometimes it&amp;#39;s possible to get
rid of edge cases like this by &lt;a href=&#34;https://cestlaz.github.io/posts/2014-02-26-change-the-data.md&#34;&gt;changing the data&lt;/a&gt;. We can do that here
by simply appending a copy of the first character to the end of the
list.&lt;/p&gt;
&lt;p&gt;
This leads to a slightly cleaner solution:&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; data[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;l &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; len(data)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(l&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; data[i]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;data[i&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; int(data[i]) &lt;span style=&#34;color:#75715e&#34;&gt;#don&amp;#39;t forget to turn the string into an int&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Checksum: &amp;#34;&lt;/span&gt;,s)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;
This is pretty much what I&amp;#39;d expect from a Python programmer that&amp;#39;s
just starting out. We can use a couple of more advanced Python
features to make what I consider a more elegant solution.&lt;/p&gt;
&lt;p&gt;
Python&amp;#39;s &lt;strong&gt;&lt;strong&gt;zip&lt;/strong&gt;&lt;/strong&gt; function takes two lists and interleaves them.
&lt;code&gt;zip(&amp;#34;abc&amp;#34;,&amp;#34;def&amp;#34;)&lt;/code&gt; will yield &lt;code&gt;[ (a,d), (b,e), (c,f)]&lt;/code&gt;. If the lists
are of different length, it just zips up until the shorter list is
exhausted. We can use array slicing to zip the input string with it&amp;#39;s
neighbor by using &lt;code&gt;new_list = zip(data,data[1:])&lt;/code&gt;. For the string &amp;#34;122344&amp;#39;
zipping gives us &lt;code&gt;[(1,2),(2,2),(2,3),(3,4),(4,4)]&lt;/code&gt;. We can put this in
a list comprehension that only keeps the tuples representing an
element with an identical neighbor and also converts it to an int:
&lt;code&gt;new_list = [int(a) for a,b in new_list if a==b]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;
Finally, we can just calculate the sum. This leads to the following
complete solution:&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;input.txt&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; f&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;readline()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; data[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;checksum&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sum([ int(a) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a,b &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; zip(data,data[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:]) &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;b])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(checksum)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;
List comprehensions for the win!!!!&lt;/p&gt;
&lt;p&gt;
Each Advent of Code problem has two parts. You unlock the second by
solving the first. Here, the wrinkle is that instead of checking each
digit with it&amp;#39;s neighbor to the right, you check it with the one
that&amp;#39;s halfway around the list.&lt;/p&gt;
&lt;p&gt;
With loops, the solution is just a quick modification of part 1. We
just add half the length and use mod to find the digit to compare with:&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;input.txt&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; f&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;readline()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; data[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;l &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; len(data)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(l&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; data[i]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;data[(i&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;l&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;l]: &lt;span style=&#34;color:#75715e&#34;&gt;# check halfway around instead of adjacent&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; int(data[i])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;part 2loop version: &amp;#34;&lt;/span&gt;,s)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;
I wanted to see if I could do this with a list comprehension
though. The trick was to figure out how to make two lists to zip
together to get the pairs to check then add. Here&amp;#39;s the solution:&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;input.txt&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; f&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;readline()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;l &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; len(data)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;d2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data[l&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:]&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;data
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;checksum &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sum([ int(a) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a,b &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; zip(data,d2)&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;b])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(checksum)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;
The insight was that we could just make a second list that starts
halfway through and then wraps around. I did this by adding
&lt;code&gt;data[l//2:] + data&lt;/code&gt;. &lt;code&gt;l//2&lt;/code&gt; is the integer division of the length (in
Python3). &lt;code&gt;data[l//2:]&lt;/code&gt; represents the second half of data (from the
midway point to the end). Technically I should have only added the second
half of data: &lt;code&gt;data[l//2:] + data[:l//2]&lt;/code&gt; where &lt;code&gt;data[:l//2]&lt;/code&gt; gives us
the first half of the list but since zip will just stop when it
exhausts the shorter list, this wasn&amp;#39;t necessary.&lt;/p&gt;
&lt;p&gt;
Day 2 also has a nice list comprehension based solution. Maybe I&amp;#39;ll
write that up later.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Motivating and understanding quicksort</title>
      <link>https://cestlaz.github.io/posts/quick-sort-starting/</link>
      <pubDate>Tue, 21 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/quick-sort-starting/</guid>
      <description>&lt;p&gt;
Thks question was posed the other day - how can one get students to
truly understand the quicksort algorithm?&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve written a few posts about quicksort. The last time I did a &lt;a href=&#34;https://cestlaz.github.io/posts/2014-03-12-select-to-sort.html/&#34;&gt;lesson
writeup&lt;/a&gt; on the subject I wrote about first looking and quickselect and
then moving to the quicksort. The class was first faced with the
problem of writing a routine to find the Kth smallest item in an
unsorted data set. The first solution was n^2 and then refined to a
quickselect. This led directly to the quicksort.&lt;/p&gt;
&lt;p&gt;
I liked the lesson and I think it worked well when I taught it but
that was partly due to the overall tenor of that particular group of
students.&lt;/p&gt;
&lt;p&gt;
A similar approach develops the quicksort in a similar way but is
both more direct and accessible.&lt;/p&gt;
&lt;p&gt;
The motivating problem is to put one item in a data set in its proper
place. You could select one person in class and arrange the class so
that the selected student is in their proper size place, that is
everyone shorter on one side, taller on the other. You could also do
this for age. A similar exercise could be done with any number of
manipulatives.&lt;/p&gt;
&lt;p&gt;
This operation of arranging the rest of the set around one selected
item or person is very easy and in fact it&amp;#39;s trivial to show that this
can be done in linear time.&lt;/p&gt;
&lt;p&gt;
Once we&amp;#39;ve done this arrangement, we can discuss what we can infer
from this new arrangement. We can now tell that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;everyone to the left of the &amp;#34;pivot&amp;#34; is less than the pivot&lt;/li&gt;
&lt;li&gt;everyone to the right is greater&lt;/li&gt;
&lt;li&gt;The pivot element is at its true location if the list were&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;sorted. That is, if we started arranging around item k, then we&amp;#39;ve
moved item k to the kth location in the dataset.&lt;/p&gt;
&lt;p&gt;
From here it&amp;#39;s a small jump to the quicksort algorithm, just repeat
the process on the left and right data sets.&lt;/p&gt;
&lt;p&gt;
This approach not only makes the algorithm and its development clear
and simple but it also can be used to illustrate the worst case n^2
behavior.&lt;/p&gt;
&lt;p&gt;
The whole thing, minus the coding, can also be done as an unplugged activity.&lt;/p&gt;
&lt;p&gt;
In case anyone&amp;#39;s interested, I also wrote a post on subtle
implementation errors when writing the quicksort (&lt;a href=&#34;https://cestlaz.github.io/posts/2014-03-17-subtle-errors-sorting.html&#34;&gt;here&lt;/a&gt;) and also
looking at the qucksort from the point of view of different
programming paradigms (&lt;a href=&#34;https://cestlaz.github.io/posts/2010-03-14-sorting-from-top-and-from-bottom.html&#34;&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;
Enjoy.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Professional Development beyond Scratch</title>
      <link>https://cestlaz.github.io/posts/election-day-pd-2017/</link>
      <pubDate>Tue, 07 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/election-day-pd-2017/</guid>
      <description>&lt;p&gt;
Today was Election Day. One of the few days each year when students
stay home and teachers spend all day attending what is generously
known as professional development.&lt;/p&gt;
&lt;p&gt;
Years ago I was in a room with a few colleagues when my friend Dave -
one of the best math teachers I know said &amp;#34;you know, every time we
have a PD day in NJ and my wife and I have to scramble to take care of
the kids I get a little annoyed but then think I shouldn&amp;#39;t get annoyed
since they&amp;#39;re spending the day doing all sorts of valuable PD.&amp;#34; He
then said &amp;#34;but then I realize that their PD is probably about as
useful as our PD and I get really angry.&amp;#34;&lt;/p&gt;
&lt;p&gt;
There you have it. This is not to say that there is no good PD but it
seems that the professional development opportunities provided by our
schools have over the years ranged from useless to insulting with
maybe a small bright spot here and there. Historically it&amp;#39;s been worse
for CS teachers because we get lumped in with math teachers and have
to spend the day learning about tools and techniques we&amp;#39;ll never use
or discussing curricula we never teach.&lt;/p&gt;
&lt;p&gt;
So, when I spoke to JonAlf about rescuing the Stuy teachers for the
day and hosting them at Hunter, he and the other CS teachers were
pretty excited. It wasn&amp;#39;t as though I had the magic PD answer but I
was going to provide a space and we&amp;#39;d figure out together what would
be productive and valuable for them.&lt;/p&gt;
&lt;p&gt;
As it turns out, I&amp;#39;ve been spending a good amount of time these past
few weeks visiting high schools to talk about Hunter CS and when I was
at Bronx Science the topic of Election Day PD came up and I thought
that it would be nice to get the Bronx Science and Stuy teachers
together. After thinking about it more, I recalled that there were few
good PD opportunities for CS teachers who taught advanced classes as
opposed to all the CS PD floating around these days at more of a
beginner level.&lt;/p&gt;
&lt;p&gt;
I thought that we could change this. In the end, I hosted PD today and
had teachers from Stuyvesant, Bronx Science, Brooklyn Tech, and the
Manhattan Hunter Science High School in attendance. I invited teachers
from a few more schools but in the end we had those four schools and
seventeen teachers.&lt;/p&gt;
&lt;p&gt;
The original agenda was:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;09:00 - 10:00 : Each school describes it&amp;#39;s program and courses&lt;/li&gt;
&lt;li&gt;10:00 - 11:00 : An intro to Git and GitHub for the classroom&lt;/li&gt;
&lt;li&gt;10:00 - 11:45 : Sharing neat lessons&lt;/li&gt;
&lt;li&gt;11:45 - 12:00 : Presentation by &lt;a href=&#34;http://chicktech.org&#34;&gt;ChickTech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;12:00 - 01:00 : Lunch&lt;/li&gt;
&lt;li&gt;01:00 - End   : Small group lesson and curriculum work&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Oh boy did I mess up on the timing. The description and
discussion of school programs took all morning. It was interesting to
hear how each school&amp;#39;s program evolved and how they fit into the
school&amp;#39;s culture. Brooklyn Tech, for instance is a school where
students declare majors. This has a big impact on what classes kids
have to take and are able to take. This is very different from Stuy or
Science where kids programs are more open ended or MHSHS which is a
much smaller school and has restrictions related to size. It was also
interesting to note Brooklyn Tech&amp;#39;s decision to have every student
take APCS-P. Interesting because Brooklyn Tech is one of the country&amp;#39;s
largest high schools and most of them should have done well on the
exam. That gave NYC around 1,400 passing AP scores in one shot. On
the other hand none of the other schools present today offered APCS-P
but did have their own intro CS class that students took prior to
APCS-A.&lt;/p&gt;
&lt;p&gt;
We finished the morning with a visit by Heather from
&lt;a href=&#34;http://chicktech.org&#34;&gt;ChickTech&lt;/a&gt;. ChickTech is a non-profit dedicated to retaining women in
Tech. It works with both girls in K12 and also those in industry. My
hope was to get a conversation started and see if there were some
potential avenues of partnership between the organization and the
schools.&lt;/p&gt;
&lt;p&gt;
After lunch, the group decided that we should do the Git/GitHub
workshop and JonAlf obliged.&lt;/p&gt;
&lt;p&gt;
Overall I think the day was a success.&lt;/p&gt;
&lt;p&gt;
My hope is that today&amp;#39;s attendees can form a core group of CS teachers
who teach more advanced courses and we can form something of a support
group for each other.&lt;/p&gt;
&lt;p&gt;
I plan to try to facilitate future meetings and hopefully we&amp;#39;ll be
able to attract more teachers to our group.&lt;/p&gt;
&lt;p&gt;
All in all I&amp;#39;m very happy with how the day went.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Early Interesting Problems - Happy Ladybugs</title>
      <link>https://cestlaz.github.io/posts/happy_ladybug/</link>
      <pubDate>Mon, 23 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/happy_ladybug/</guid>
      <description>&lt;p&gt;
We all love interesting problems. The trouble is that it&amp;#39;s hard to
find suitably interesting problems for students when they&amp;#39;re just
learning the basics. In the very beginning the problems practically
dictate the solution:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;loop over a list and add all the elements or calculate the sum of a&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;list of integers.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Determine if  number is prime&lt;/li&gt;
&lt;li&gt;Convert a word into pig-Latin&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It&amp;#39;s not that there&amp;#39;s no thought involved in solving these but the
students already know the mechanics of solving these by hand so it&amp;#39;s a
direct translation into a program.&lt;/p&gt;
&lt;p&gt;
This isn&amp;#39;t a bad thing and it is important but it&amp;#39;s fun when we get to the next
level. I&amp;#39;ve found that a number of the &lt;a href=&#34;http://hackerrank.com&#34;&gt;Hacker Rank&lt;/a&gt; archived
competitions have &amp;#34;easy&amp;#34; problems that can be a good fit for
beginners. One that I found and really like is &lt;a href=&#34;https://www.hackerrank.com/challenges/happy-ladybugs&#34;&gt;Happy Ladybugs&lt;/a&gt; problem.&lt;/p&gt;
&lt;p&gt;
The problems is basically as follows:&lt;/p&gt;
&lt;p&gt;
You get a string of letters. Each letter represents a ladybug of a
different color. Each letter also represents a location of the
ladybug.  A space (or underscore in the actual problem) represents a
free space. For example &amp;#34;AABC DDA&amp;#34; is a line of 2 A colored ladybugs
followed by a B colored one, C colored one, a blank space, 2 D colored and then one
more A colored.&lt;/p&gt;
&lt;p&gt;
You can rearrange the line of ladybugs by swapping any ladybug with a
blank space.&lt;/p&gt;
&lt;p&gt;
A ladybug is happy if it is next to another ladybug of the same
color. The challenge is to determine if all the ladybugs can be made
happy.&lt;/p&gt;
&lt;p&gt;
I like this problem because while it is non-trivial it is very
approachable.&lt;/p&gt;
&lt;p&gt;
To me, the key is that while you can rearrange the list you
don&amp;#39;t have to. You only have to determine if it is possible to make
the ladybugs happy. You don&amp;#39;t actually have to do so.&lt;/p&gt;
&lt;p&gt;
The edge cases are pretty easy to deal with - a string of length one
or two but then a little thought is required.&lt;/p&gt;
&lt;p&gt;
The first insight is that if there are no spaces, you can&amp;#39;t rearrange
the ladybugs so all you have to do is scan through the string to test
to see if every ladybug has a neighbor of the same color.&lt;/p&gt;
&lt;p&gt;
The next insight, and the big one is that if you have at least one
space you can arbitrarily re-order the string. You can show this is
possible  by using a single space to swap any two elements.&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The final insight is that since you can arbitrarily re-order the
ladybugs as long as you have at least 2 of each color, you can make
them all happy.&lt;/p&gt;
&lt;p&gt;
Since my class is currently just starting dictionaries in Python we
solved this with lists and then transitioned to dictionaries.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s a dictionary based solution:&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
I love problems like these.&lt;/p&gt;
&lt;p&gt;
I just wish there was an easy way to find all contest problems of a
certain level like &amp;#34;easy&amp;#34; or &amp;#34;medium.&amp;#34; If anybody knows please share
in the comments.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>There&#39;s always something to learn (from your students)</title>
      <link>https://cestlaz.github.io/posts/when-they-change-the-script/</link>
      <pubDate>Wed, 18 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/when-they-change-the-script/</guid>
      <description>&lt;p&gt;
One thing I&amp;#39;ve learned from teaching is that there&amp;#39;s always something
new to learn. For the kids, yes, but I&amp;#39;m talking about for the
teacher.&lt;/p&gt;
&lt;p&gt;
The other day, I taught a lesson I&amp;#39;ve taught many times. Find the mode
of a data set. That&amp;#39;s the problem that they solve but the lesson is
really about run time complexity, hidden complexity and using data
structures in alternate ways.&lt;/p&gt;
&lt;p&gt;
I blogged about this &lt;a href=&#34;https://cestlaz.github.io/posts/2013-03-23-Who_won_the_election-Quadratic_to_Linear_Time.md&#34;&gt;before&lt;/a&gt; so you can get an earlier take there
although the code isn&amp;#39;t formatted correctly due to blog conversions.&lt;/p&gt;
&lt;p&gt;
As with the last time, the students  had already written code to find
the largest value in a list and also to find the frequency of an item
in a list.&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
They had to write mode prior to the class. In the past, students would
generally come up with something like this:&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
They&amp;#39;d use their existing knowledge and the &amp;#39;find the largest&amp;#39; idiom
to find the mode by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;find the frequency of the first item and assume it&amp;#39;s the mode so far&lt;/li&gt;
&lt;li&gt;for each item in the list&lt;/li&gt;
&lt;li&gt;find the frequency of that idem&lt;/li&gt;
&lt;li&gt;if it occurs more than the mode so far then it becomes the new&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;mode so far&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s a lot of good in this solution. The kids incrementally develop
a solution, they use and exctend code and concepts they already know
and understand and it&amp;#39;s clear and understandable.&lt;/p&gt;
&lt;p&gt;
We would then run the code on larger and larger data sets and notice
that it gets slow pretty quickly. This leads to an informal discussion
of run time and the fact that there&amp;#39;s hidden complexity â€“ the call to
&lt;code&gt;freq&lt;/code&gt; in the main loop introduces a linear component so we have a
loop within a loop and an N^2 routine.&lt;/p&gt;
&lt;p&gt;
The big takeaway is get a feel for run time and to be aware of hidden
complexity. We then move to a linear solution by using a list as
buckets. You can read more about that in the &lt;a href=&#34;https://cestlaz.github.io/posts/2013-03-23-Who_won_the_election-Quadratic_to_Linear_Time.md&#34;&gt;original post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
What was interesting this time around was that most of the kids came
up with a solution more like this:&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Instead of calculating the frequency inside the loop they made a list
of frequencies. &lt;code&gt;freq[0]&lt;/code&gt; had the frequency of &lt;code&gt;l[0]&lt;/code&gt;, &lt;code&gt;freq[1]&lt;/code&gt; the
frequency of &lt;code&gt;l[1]&lt;/code&gt; etc. They then loop through that &lt;code&gt;freq&lt;/code&gt; list to
find the largest element and that&amp;#39;s the index of the mode value in the
original list.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s functionally the same as the first solution but in some ways it&amp;#39;s
very different. They built the data set they needed ahead of time
instead of calculating the data on the fly and they used the concept
of parallel lists.&lt;/p&gt;
&lt;p&gt;
I like the solution and it didn&amp;#39;t prevent us from getting to the run
time stuff but this did give me something to think about.&lt;/p&gt;
&lt;p&gt;
Why did this class led them largely to a different solution than the
classes I&amp;#39;ve taught in the class. There are a lot of things to ponder
since it&amp;#39;s a college class that meets twice a week with kids from a
range of backgrounds (CS and otherwise) vs a high school class that
meets 5 days a week and the kids all had the same in class experience
prior to this lesson. Did I do something differently before hand? Some
assignments? Something I modeled?  I&amp;#39;m not sure but it&amp;#39;s something I&amp;#39;m
going to ponder.&lt;/p&gt;
&lt;p&gt;
It will interesting to see if this was a one shot deal and my current
class will solve problems as I predict moving forward or if I&amp;#39;m going
to get to see a lot of new things.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A test result is just a test result</title>
      <link>https://cestlaz.github.io/posts/ap-results-measure-of-curriculum/</link>
      <pubDate>Sun, 15 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/ap-results-measure-of-curriculum/</guid>
      <description>
&lt;p&gt;
This past weekend was &lt;a href=&#34;http://catskillsconf.com&#34;&gt;Catskillsconf&lt;/a&gt; - my favorite event of the
year. I spent the weekend up in Ulster County with a bunch of my
students. some great friends old and new, and Devorah. It was a great
weekend but I was mostly offline.&lt;/p&gt;
&lt;p&gt;
As a result I missed a rather heated discussion in the CS Ed Facebook
groups. The debate was over whether or not Strong AP CSP exam results
are indicative of a good curriculum or good professional development (PD).&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
TL;DR - NO!!!!!
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Further, anyone who thinks that a set of exam results can tell you
that a particular PD sequence or curriculum is good shouldn&amp;#39;t be
allowed to call themselves a teacher and I don&amp;#39;t want them anywhere
near my kids.&lt;/p&gt;
&lt;p&gt;
I guess that language is strong, even for me but it&amp;#39;s true.&lt;/p&gt;
&lt;p&gt;
Tests are designed to assess students and many tests don&amp;#39;t even do
that well. They shouldn&amp;#39;t be used to measure something further
removed.&lt;/p&gt;
&lt;p&gt;
The last time this idea made its rounds was using student test results
for teacher evaluation. They do that in NY. A judge called the
practice &amp;#34;capricious&amp;#34; and &amp;#34;arbitrary.&amp;#34; My friend and former
colleague Gary Rubinstein showed a year or so ago that standardized
test scores varied enough from year to year so as to make the ratings
useless [fn::sorry, I just got back from the weekend trip and am too tired
to find the link. You can go to his site and search and while you&amp;#39;re
there, there&amp;#39;s lots of good stuff to read.]&lt;/p&gt;
&lt;p&gt;
Using test scores to say a PD sequence is good? What if that PD
focused on test prep? What if it did nothing in particular? When I was
at Stuy and when I was at Seward Park the Calc teachers&amp;#39; students had
great AP results. I can tell you that none of those teachers had any
quality PD specific to AP Calc.&lt;/p&gt;
&lt;p&gt;
Curriculum? My mentor and friend Danny Jaye told me many times - &amp;#34;A
great teacher can save a class from a  horrible curriculum but a great
curriculum will do nothing for a class with a horrible teacher.&amp;#34; He
was right. Again, what if the curriculum encourages test prep. What if
pressure on the teacher encourages them to focus on test prep
regardless of curriculum or PD (see my recent &lt;a href=&#34;http://cestlaz.github.io/posts/standards-who-for&#34;&gt;post&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;
An AP test measures one thing - how well the student did on the AP
test. There are so many variables that go into a class:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Is it first period at 8:00am?&lt;/li&gt;
&lt;li&gt;Is it the last class of the day?&lt;/li&gt;
&lt;li&gt;Is it before lunch or right afterwards?&lt;/li&gt;
&lt;li&gt;What about right after Gym.&lt;/li&gt;
&lt;li&gt;What&amp;#39;s the mix of students - every class is different&lt;/li&gt;
&lt;li&gt;Is the teacher teaching the subject once a day? Two times? Five&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;times?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How large is the class&lt;/li&gt;
&lt;li&gt;How many other classes are the kids taking?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The list goes on and on. There are so many contributing factors that
you just can&amp;#39;t say &amp;#34;Good test results = good curriculum&amp;#34; or &amp;#34;good test
results = good PD.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Want to know if a curriculum is good - have experienced teachers who
know their subject run it a few times through and ask them. Same for
PD.&lt;/p&gt;
&lt;p&gt;
Teachers know education a lot better than test makers, curriculum
developers and PD providers. How about listening to them for a change?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Standards - Who are they for?</title>
      <link>https://cestlaz.github.io/posts/standards-who-for/</link>
      <pubDate>Tue, 10 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/standards-who-for/</guid>
      <description>&lt;p&gt;
The big push at last year&amp;#39;s CSTA conference was the release of the new
CSTA K12 standards. It seemed that every other session was pushing
them in one way or another. I&amp;#39;ve been meaning to share my thoughts
about them or, more specifically, learning standards in general for a
while but with announcement about federal funding for CS coming from
the White House last week I thought it was time.&lt;/p&gt;
&lt;p&gt;
Before diving into CS standards lets talk about math.&lt;/p&gt;
&lt;p&gt;
To start I have yet to meet a math teacher that needs
&amp;#34;the Standards&amp;#34; to know what to teach. Some how or other math teachers know
they&amp;#39;re supposed to teach in an algebra or geometry class. When NY
moved to &amp;#34;integrated math&amp;#34; teachers were able to re-sequence classes
without the benefit of &amp;#34;the standards&amp;#34; and when NY went back to
Algebra, Geometry, then Alg 2 and Trig, teachers had no problem
reorganizing classes again.&lt;/p&gt;
&lt;p&gt;
New teachers didn&amp;#39;t go to &amp;#34;the Standards&amp;#34; to learn the ropes. Schools
defined syllabi, teachers observed each other, shared resources, used
lesson plan books and in general knew what they were supposed to teach
and at what level.&lt;/p&gt;
&lt;p&gt;
In my quarter century of teaching, always in a math department we
spent a lot of time talking about what we taught, when we taught it,
how we taught it and at what level but until common core was forced
down our throats we NEVER discussed &amp;#34;the Standards.&amp;#34; We discussed our
students, where we thought we could take them, and how to get them
there. Somehow our students did alright.&lt;/p&gt;
&lt;p&gt;
More recently, the push has been on &amp;#34;The Standards,&amp;#34; common core in particular.&lt;/p&gt;
&lt;p&gt;
Common standards sound good - kids in every school will learn the same
things at the same level - but I contend that they aren&amp;#39;t about
learning. They&amp;#39;re about testing.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s look at a few of the math standards. These were pulled directly
from the Common Core:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Derive the equation of a circle of given center and radius using the
Pythagorean Theorem; complete the square to find the center and radius
of a circle given by an equation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Use coordinates to prove simple geometric theorems algebraically. For
example, prove or disprove that a figure defined by four given points
in the coordinate plane is a rectangle; prove or disprove that the
point (1, âˆš3) lies on the circle centered at the origin and containing
the point (0, 2).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
Derive using similarity the fact that the length of the arc
intercepted by an angle is proportional to the radius, and define the
radian measure of the angle as the constant of proportionality; derive
the formula for the area of a sector.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
These aren&amp;#39;t about deep thinking and problem solving. They&amp;#39;re about
very specific skills or techniques. They&amp;#39;re also easy to put on a
test. Much easier then assessing a students real problem solving ability.&lt;/p&gt;
&lt;p&gt;
Common Core comes hand in hand with standardized testing which is then
used to punish students, teachers, and schools.&lt;/p&gt;
&lt;p&gt;
We keep hearing about individualized instruction - meeting the kids
where they are but the standards tell us that kids MUST know specific
things at specific times. You can&amp;#39;t have both. In the best case, with
&amp;#34;the standards&amp;#34; we can only meet students &amp;#34;where they are&amp;#34; within
annual bands.&lt;/p&gt;
&lt;p&gt;
What has this led to? Narrowing curriculum for one thing. Since schools are
evaluated based on the standardized exam in core subjects focus
narrows and other subjects fall by the wayside.&lt;/p&gt;
&lt;p&gt;
Arguably worse is selective teaching within common core subjects.&lt;/p&gt;
&lt;p&gt;
Take for example, Geometry. The course is really &amp;#34;Logic and Deductive
Reasoning using Euclidean Geometry as a Platform&amp;#34; but it&amp;#39;s generally
called Geometry. This class is supposed to be about getting kids to
think. I&amp;#39;ve already shared a few standards above but let me tell you
about an open secret - many schools don&amp;#39;t really teach proof -
arguably the most important part of the class.&lt;/p&gt;
&lt;p&gt;
In my last year at Stuy I graded Geometry regents for the city. I
graded exams for two highly regarded unscreened schools. One that was
lauded in a State of the Union address and the other equally hyped. I
graded all of each school&amp;#39;s students geometry regents so it wasn&amp;#39;t
just a sampling. Out of all the papers, only two or three scored more
than 2 out of 9 points for the proof question and most were entirely
left blank.&lt;/p&gt;
&lt;p&gt;
What happened? Proof is hard to teach and hard to learn but it&amp;#39;s also
only a small part of the standardized exam. It&amp;#39;s critical for a
school&amp;#39;s survival and for the student to graduate that a passing score
is earned. Rather than spending a large amount of time on few points
and probably get a limited return I&amp;#39;ve been told that many schools
spend much more time on topics that area easier to teach and have more
weight on the exam. This makes the school look better and helps the
student graduate but arguably the most important aspect of the course
has been minimized.&lt;/p&gt;
&lt;p&gt;
High stakes testing leads to gaming the system. Common core standards
come hand in hand with high stakes testing. We see the same with AP
exams - there are schools that force students to take exams even when
they are woefully prepared and mostly fail because this helps the
school shoot up in the ratings.&lt;/p&gt;
&lt;p&gt;
This is what the common core math standards have given us. They&amp;#39;re not
for teachers - we don&amp;#39;t need them - we know what to teach and only
wish that the bean counters would indeed allow us to meet students
where they are. Standards are about testing.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s move on to CS standards.&lt;/p&gt;
&lt;p&gt;
It might not be fair to compare CS to math since K12 math education
has been around much longer and is more well defined and in theory
having a set of standards gives us a common language to discuss,
compare, and contrast all the content providers and curriculum
developers out there. On the other hand, I also believe that with well
prepared teachers who understand content and pedagogy the value isn&amp;#39;t
all that great. It&amp;#39;s also worth considering the fact that nothing
really makes the CSTA Standard  writers special. There&amp;#39;s no reason to
think that another group - be they a handful of teachers or a content
provider can&amp;#39;t do a comparable job.&lt;/p&gt;
&lt;p&gt;
Here are some selections from the CSTA standards:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Design and develop a software artifact working in a team.&lt;/p&gt;
&lt;p&gt;
Compare and contrast various software licensing schemes (e.g., open source, freeware,
commercial).&lt;/p&gt;
&lt;p&gt;
Design, develop, and implement a computing artifact that responds to an event (e.g., robot
that responds to a sensor, mobile app that responds to a text message, sprite that responds
to a broadcas&lt;/p&gt;
&lt;p&gt;
Demonstrate the value of abstraction for managing problem complexity (e.g., using a list
instead of discrete variables).&lt;/p&gt;
&lt;p&gt;
Design algorithms u sing sequence, selection, and iteration.&lt;/p&gt;
&lt;p&gt;
Discuss techniques used to store, process, and retrieve different amounts of information
(e.g., files, databases, data warehouses).&lt;/p&gt;
&lt;p&gt;
Compare and debate the positive and negative impacts of computing on behavior and
culture (e.g., evolution from hitchhiking to ridesharing apps, online accommodation rental
services).&lt;/p&gt;
&lt;p&gt;
Use simple encryption and decryption algorithms to transmit/receive an encrypted
message.&lt;/p&gt;
&lt;p&gt;
Decompose a problem by creating new data types, functions, or classes.&lt;/p&gt;
&lt;p&gt;
Evaluate algorithms (e.g., sorting, searching) in terms of their efficiency, correctness, and
clarity.&lt;/p&gt;
&lt;p&gt;
Use data analysis to identify significant patterns in complex systems (e.g., take existing data
sets and make sense of them).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There&amp;#39;s nothing wrong with these. They aren&amp;#39;t specific enough to
develop lessons from but, they can provide a
consistent framework to discuss different offerings. Were the much
more specific, we&amp;#39;d have the same issue I railed about with the math
standards so this is a good thing.&lt;/p&gt;
&lt;p&gt;
Actually, in general, I don&amp;#39;t have a problem with these standards. I
might agree with some parts and disagree with others but that&amp;#39;s
neither here nor there.&lt;/p&gt;
&lt;p&gt;
To me the big concern on standards is what will they actually be used
for. It&amp;#39;s nice to think that it&amp;#39;s a set of guidelines from which we
can develop strong local experiences but I think this is somewhat
naive. As states and the federal government bring CS Education into
the fold there&amp;#39;s no reason to believe that CS will be special. CS Ed
will go the way of other subject areas. That means that whatever
standards governments adopt, they will likely be used for high stakes
tests rather than for true education. If you look to see how the
sausage is made you can see the harm standards and standardized
testing has wrought  in subjects like math. CS Ed won&amp;#39;t be far behind.&lt;/p&gt;
&lt;p&gt;
While we should be proud of all the work that&amp;#39;s going on in our
community it&amp;#39;s more important now than ever to keep an eye on the
overall big picture and be aware of how work intended for one purpose
within the community can be used very differently by those outside of
it. This is particularly important for advocates  not in public schools. Public
schools educate the majority of American students so CS4All means
public schools. Standardized testing won&amp;#39;t affect private schools (or
private charters in many cases) nor will they affect colleges and in
fact will be a boon to EdTech companies selling there wares. Many of
the loudest voices in CSEd come from these contingents - it&amp;#39;s
important that they look to the greater issues, form their own
opinions, and then act on what they believe is right.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Programming Idioms</title>
      <link>https://cestlaz.github.io/posts/programming-idioms/</link>
      <pubDate>Sun, 08 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/programming-idioms/</guid>
      <description>&lt;p&gt;
I just read Jeff Yearout&amp;#39;s recent post titled &lt;a href=&#34;http://k12csteaching.blogspot.com/2017/10/the-beginners-garden-of-concepts.html&#34;&gt;The Beginner&amp;#39;s Garden of
Concepts&lt;/a&gt;. Not directly related but it got me thinking about
programming idioms.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been using the phrase &amp;#34;programming idiom&amp;#34; for years to describe a
short useful recurring code construct. I didn&amp;#39;t realize that it was
officially &amp;#34;a thing&amp;#34; until doing a web search on the phrase years
later.&lt;/p&gt;
&lt;p&gt;
As our students grow from newbies on I think it&amp;#39;s helpful for them to
see recurring and related patterns and programming idioms gives us a
name to apply to many beginner patterns. An early idiom might be
&amp;#34;finding the smallest in a list:&amp;#34;&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Another is the very similar and more general &amp;#34;do something on every
item in a list:&amp;#34;&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
By talking about constructs like these as idioms it helps students see
and develop coding patterns. It also helps them to build mental
abstractions. Each of the above idioms are a few lines of code but
each are also a single concept. Students learn to think of them as the
concept.&lt;/p&gt;
&lt;p&gt;
When students learn about list comprehensions in python they&amp;#39;ll
rewrite the &amp;#34;do somethingâ€¦&amp;#34; more like this:&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
but the pattern or idea is the same.&lt;/p&gt;
&lt;p&gt;
Other early idioms might include swapping variables:&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
and loops until an exit condition are met:&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Even more difficult concepts like recursion can be described in an
idiomatic way:&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Patterns like these, or idioms, come up over and over again. We don&amp;#39;t
have to explicitly mention them in our teaching but I think it&amp;#39;s
helpful to our students if we do.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Awesome Cs Revisited</title>
      <link>https://cestlaz.github.io/posts/awesome-cs-revisted/</link>
      <pubDate>Thu, 21 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/awesome-cs-revisted/</guid>
      <description>&lt;p&gt;
Saw this tweet the other day so I though I would try to plug the
&lt;a href=&#34;https://github.com/zamansky/awesome-cs-education&#34;&gt;Awesome CS Education&lt;/a&gt; list I started on GitHub:&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/csteachers?src=hash&#34;&gt;#csteachers&lt;/a&gt;...didn&amp;#39;t I see a list of CS teacher blogs here recently?&lt;/p&gt;&amp;mdash; Pam Whitlock (@PamWhitlock1) &lt;a href=&#34;https://twitter.com/PamWhitlock1/status/910662628757864448&#34;&gt;September 21, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
To answer the tweet, the closet thing I know to a list is &lt;a href=&#34;https://twitter.com/alfredtwo&#34;&gt;Alfred
Thompson&lt;/a&gt;&amp;#39;s blog roll which is actually a post he wrote on his blog
in 2012. Unfortunately his list can be hard to find and is somewhat
out of date.&lt;/p&gt;
&lt;p&gt;
The idea of an &amp;#34;awesome&amp;#34; list is publicly hosting a simple site that
is community driven and anyone can suggest additions and edits.&lt;/p&gt;
&lt;p&gt;
I put up a starter &lt;a href=&#34;https://github.com/zamansky/awesome-cs-education&#34;&gt;here&lt;/a&gt; and a few people have contributed but I&amp;#39;d love
to get more people involved. Awesome lists have a number of advantages
over other repositories.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unlike blog posts, the site is easy to find.&lt;/li&gt;
&lt;li&gt;Unlike private mailing lists or Facebook, anyone can see the content.&lt;/li&gt;
&lt;li&gt;Anyone can suggest additions (although you need to create a Github&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;account).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Anyone can download or fork the site.&lt;/li&gt;
&lt;li&gt;It&amp;#39;s essentially plain text and is easy to edit (just read the&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/zamansky/awesome-cs-education/blob/master/contributing.org&#34;&gt;contribution guide&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;
So, there you have it. If you have a blog or resource to share please
submit a pull request. Over time this could be a terrific single
starting point for educators to get to a wealth of resources.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>New Term New Tool - Thonny, a Python IDE</title>
      <link>https://cestlaz.github.io/posts/new-tool-thonny/</link>
      <pubDate>Thu, 21 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/new-tool-thonny/</guid>
      <description>&lt;p&gt;
Last year I &lt;a href=&#34;https://cestlaz.github.io/posts/new-term-new-tool-replit&#34;&gt;wrote about&lt;/a&gt; &lt;a href=&#34;http://repl.it&#34;&gt;repl.it&lt;/a&gt;, an online IDE that supports multiple
languages. At the time it had some rudimentary classroom support and
since I started using it, repl.it has become better and better. I
used it last year with my class because I had to start the year in a
lab where I couldn&amp;#39;t easily install my own software. I&amp;#39;ll continue to
use repl.it - mostly for it&amp;#39;s ability to schedule publish and manage
assignments but when possible, I like having my students work
locally.&lt;/p&gt;
&lt;p&gt;
This year I&amp;#39;m excited about another tool - &lt;a href=&#34;http://thonny.org&#34;&gt;Thonny&lt;/a&gt;. Thonny&amp;#39;s a simple
Python IDE designed for beginners. I discovered it last year but at a
time when it was impractical for me to use with my students. This
year I can and I&amp;#39;m really liking it. I&amp;#39;m still an Emacs guy and will
continue to use Emacs for my python development (&lt;a href=&#34;http://cestlaz.github.io/posts/using-emacs-12-python/&#34;&gt;video 1&lt;/a&gt;, &lt;a href=&#34;http://cestlaz.github.io/posts/using-emacs-13-yasnippet&#34;&gt;video 2&lt;/a&gt;) but
for beginners I think Thonny is the way to go.&lt;/p&gt;
&lt;p&gt;
Some of Thonny&amp;#39;s highlights:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An integrated Python 3 virtual environment making for ease of&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;installation and consistency across student installs&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A debugger that shows how expressions are evaluated&lt;/li&gt;
&lt;li&gt;Great visualizations of function calls that make it easier to&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;understand the call stack and scope&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The ability to look at memory to understand references.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Rather than go into the gory details in text, I put together this
video:&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/lWaCl0WjNZI&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>I Believe CS Teachers are Smart and Capable</title>
      <link>https://cestlaz.github.io/posts/cs-teachers-smart/</link>
      <pubDate>Fri, 15 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cs-teachers-smart/</guid>
      <description>&lt;p&gt;
People sometimes accuse me of being an elitist CS snob that I feel that CS
teachers have to have advanced CS degrees.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s not that at all. Rather, I feel that CS teachers are smart and
capable. Circumstances frequently result in a teacher in front of a CS
class with limited content and pedagogical content knowledge. It&amp;#39;s not
ideal but it&amp;#39;s reality. Of course I feel that we should do everything
to support and encourage these teachers but we should also insist that
after a reasonable period of time, they know their stuff.&lt;/p&gt;
&lt;p&gt;
This is why I hate it when I hear people in the CS Ed community say
something is too hard. Git&amp;#39;s too hard. The command line is too
hard. Functional programming&amp;#39;s too hard [fn::whether or not any of
these topics are appropriate for a particular course is discussion for
another time]. That&amp;#39;s all nonsense. At last
year&amp;#39;s SIGCSE conference people from a state, I forget which, was
considering not using the Praxis exam for CS teacher certification
even though the state uses the Praxis exam for other subject
areas. They claimed that the praxis was too hard for CS teachers.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/praxis.jpg&#34; alt=&#34;/img/praxis.jpg&#34; title=&#34;/img/praxis.jpg&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
I haven&amp;#39;t taken the Praxis exam but some friends have. It doesn&amp;#39;t
appear to be unreasonable at all[fn::although I&amp;#39;m not a big believer
in standardized exams for certification or in general.].&lt;/p&gt;
&lt;p&gt;
While I can certainly understand a teacher not knowing much when they
start - thrown in due to necessity I think it&amp;#39;s ridiculous not to
insist that they ultimately get to real mastery.&lt;/p&gt;
&lt;p&gt;
A math teacher generally has to know math beyond calculus. Science
teachers have to have gotten through Orgo. English teachers have to
understand Joyce. &lt;strong&gt;&lt;strong&gt;THIS IS HARD STUFF!!!!&lt;/strong&gt;&lt;/strong&gt;[fn::There are plenty of
lousy teacher prep programs that don&amp;#39;t ensure teachers learn the
subject matter they should but the good ones do.]&lt;/p&gt;
&lt;p&gt;
I think it&amp;#39;s insulting to say that CS teachers aren&amp;#39;t capable of doing
the same in their subject area.
&amp;#39;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Theseus&#39;s Curriculum</title>
      <link>https://cestlaz.github.io/posts/theseuss-curriculum/</link>
      <pubDate>Tue, 05 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/theseuss-curriculum/</guid>
      <description>&lt;p&gt;
With the school year starting I was originally planning on writing
about my class rules.&lt;/p&gt;
&lt;p&gt;
Instead I think I&amp;#39;ll riff on &lt;a href=&#34;https://twitter.com/alfredtwo&#34;&gt;Alfred Thompson&lt;/a&gt;&amp;#39;s post today titled
&lt;a href=&#34;http://blog.acthompson.net/2017/09/curriculum-is-hard.html&#34;&gt;Curriculum is Hard&lt;/a&gt;. I&amp;#39;m guessing I found curriculum design and
development daunting decades ago but at this point in my career it&amp;#39;s
something I enjoy. In any event, Alfred got me to thinking - when is a
curriculum your own?&lt;/p&gt;
&lt;p&gt;
If you grab a curriculum complete with lesson plans, assignments; the
whole kit and caboodle and you use it verbatim it&amp;#39;s clearly not your
curriculum. It probably also isn&amp;#39;t really teaching.&lt;/p&gt;
&lt;p&gt;
What about the more common case. Math curricula has basically been set
for years. Algebra, Geometry [fn::which is really logic and deductive
reasoning using Euclidean Geometry as platform], and then Algebra 2
and Trigonometry. Most books seem to be sequenced in a similar way
and at least in the schools I know about, the math department has some
document listing a day by day list of topics. This makes sense since
you probably have more than one class of each type and you want some
cross class consistency. Particularly during the first weeks of the
semester when kids can transfer and then also at the end of term or
year.&lt;/p&gt;
&lt;p&gt;
When a teacher uses that departmental document are they using someone
elses curriculum?&lt;/p&gt;
&lt;p&gt;
What if they create their own homeworks and assigments?&lt;/p&gt;
&lt;p&gt;
Most teachers I know use the department&amp;#39;s curriculum but make their
own unit and day to day lesson plans. Most revise them each
semester. Typically these teachers do a little more here or a little
less there depending on a number of factors.&lt;/p&gt;
&lt;p&gt;
Are they creating their own curriculum?&lt;/p&gt;
&lt;p&gt;
What if they re-sequence the topics?&lt;/p&gt;
&lt;p&gt;
How about adding an enrichment topic?&lt;/p&gt;
&lt;p&gt;
Back when I taught math I used the departmental syllabus, as many
texts as I could find, colleagues lesson plans and whatever I could
find but I always pulled it together to something I could call my
own. If I didn&amp;#39;t, I wouldn&amp;#39;t have been comfortable going in front of
my class. Was it my curriculum? They were certainly my lessons.&lt;/p&gt;
&lt;p&gt;
Now, when designing a course I start from the end outcomes and work
backwards but when teaching a course, I still look at as many
resources as I can find. I&amp;#39;ll pull a little from here, a little from
there and combine that with whatever I can come up with myself.&lt;/p&gt;
&lt;p&gt;
So, when is it your curriculum and when is it not?&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re just delivering scripted lessons it&amp;#39;s certainly not yours.&lt;/p&gt;
&lt;p&gt;
If you know your stuff and you  take someone elses material, make it
your own and add it to your bag of tricks, I think it&amp;#39;s now yours as
well.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CS Teachers - we need you to blog</title>
      <link>https://cestlaz.github.io/posts/cs-teachers-blog/</link>
      <pubDate>Fri, 25 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cs-teachers-blog/</guid>
      <description>&lt;p&gt;
At this past year&amp;#39;s CSTA conference, a few of us huddled in a corner
voiced a very common lament - &amp;#34;it would be great if more CS teachers
blogged.&amp;#34; It really would be. We&amp;#39;re still a relatively small
community and while there&amp;#39;s some good conversation going on on
mailing lists and on Facebook, those aren&amp;#39;t easily discoverable or
accessible and in the case of Facebook, there&amp;#39;s a question of
ownership and permanence.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been blogging on and off since 2010. Around 300 posts. Not super prolific
but I&amp;#39;ve been doing it long enough to maybe be able to share a bit of
perspective.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not sure exactly why I started. In part I was inspired by my wife
who at the time was blogging about her &lt;a href=&#34;http://squid-knits.blogspot.com/&#34;&gt;knitting&lt;/a&gt;. I was also inspired
to share my thoughts after meeting some fellow CS teachers from across
the country at a &lt;a href=&#34;http://cestlaz.github.io/posts/2010-01-02-welcome.html&#34;&gt;CSTA event in Chicago&lt;/a&gt;. It was stop and go for a while
and then I took a break. I was re-inspired months later after meeting
a couple of CS teachers at another CSTA event - &lt;a href=&#34;https://twitter.com/search?q=ben%2520chun&amp;amp;src=typd&#34;&gt;Ben Chun&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/purplespatula&#34;&gt;Helene
Martin.&lt;/a&gt; Both terrific high school CS teachers at the time who are
unfortunately no longer in the classroom (unfortunate for the kids, I
wish Ben and Helene all happiness and success in all their
endeavors). We all agreed to try to write more and that got me started
again. I&amp;#39;ve been posting around 50 times a year since.&lt;/p&gt;
&lt;p&gt;
Looking back to when I used blogger, I had 30 - 50 hits on some early
posts and that was mostly just me hitting the site. It didn&amp;#39;t matter.
Writing has let me work through my thoughts. It also creates a record of
my thoughts and on how my thinking evolves over time.&lt;/p&gt;
&lt;p&gt;
Over time, people have told me that they&amp;#39;ve found some of the things
I&amp;#39;ve written useful or helpful and I&amp;#39;d argue that when people disagree
with something I write, even if they don&amp;#39;t comment and I&amp;#39;ve all I&amp;#39;ve
evoked is a reaction of &amp;#34;Z&amp;#39;s full of crap,&amp;#34; it&amp;#39;s gotten them to
re-evaluate their own thoughts on whatever the subject and if it&amp;#39;s
confirmation of their original beliefs, that&amp;#39;s OK.&lt;/p&gt;
&lt;p&gt;
The important thing is that by blogging I&amp;#39;m getting my thoughts down
&amp;#34;on paper&amp;#34; and sharing them for the world to take or leave as they
please and the more of us who do this, the more we expand the sum
knowledge of CS teaches.&lt;/p&gt;
&lt;p&gt;
As a dispersed community of CS teachers across the country, we need
more people blogging on public platforms not in silos like Facebook.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve heard reasons why teachers don&amp;#39;t blog:&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;I&amp;#39;m new and have nothing to write about&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
Sure you do â€“ write a paragraph about your plans for the days lesson
or how it went. Vent your frustrations (but be careful not to get
yourself in trouble). Rave about some students work.&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;I don&amp;#39;t have time&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
Yes, this is a tough one. If you have to do PD time, maybe your
supervisor will let you use it for blogging. To be honest, when I&amp;#39;m
writing regularly it doesn&amp;#39;t take that long. When I haven&amp;#39;t written in
a while it takes longer. In any event. It&amp;#39;s important and posts don&amp;#39;t
have to be long&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;I&amp;#39;m not a great writer&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
This blog is proof that you don&amp;#39;t have to be. I&amp;#39;m stilted and ramble
and certainly no Shakespeare. I am the weakest writer in my household
and it&amp;#39;s not even close. Even so, we all have something to share.&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;I don&amp;#39;t know how&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
I was thinking about proposing a session at next years CSTA conference
where I&amp;#39;d work the group through creating a github pages based
blog. In the meantime, there are a lot of easy ways to start out.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blogger.com&#34;&gt;http://blogger.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wordpress.com&#34;&gt;http://wordpress.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and for those who want total control&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt; with &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub pages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, there&amp;#39;s my plea. If you&amp;#39;re a CS teacher and you&amp;#39;re reading this
please consider blogging. I assure you, we will all appreciate it and
benefit from it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teaching APCS-A for the first time</title>
      <link>https://cestlaz.github.io/posts/teaching-ap-first-time/</link>
      <pubDate>Wed, 23 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/teaching-ap-first-time/</guid>
      <description>&lt;p&gt;
I got  an email from a friend the other day. Among other things, he
mentioned that he would be teaching APCS-A for the first time this
year. He&amp;#39;s a little trepidatious. He knows his stuff but he hasn&amp;#39;t
really done much using Java.&lt;/p&gt;
&lt;p&gt;
I was going to respond in an email but thought I might share here
instead.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TL;DR - for all you APCS teachers who are new or new to Java - learn
your core CS, lean on your resources and support and it&amp;#39;s OK to tell
your kids &amp;#34;I don&amp;#39;t know, I&amp;#39;ll get back to you.&amp;#34;. Don&amp;#39;t worry, you&amp;#39;ll be great.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The first time I taught APCS was some time around 1991 or 1992. It was at
&lt;a href=&#34;http://www.sewardparkhs.com/Famous-Alumni/&#34;&gt;Seward Park&lt;/a&gt; &lt;a href=&#34;http://www.sewardparkhs.com/History/&#34;&gt;High School&lt;/a&gt;. It was the AB curriculum - that is one
semester of programming in Pascal and one semester of Data Structures
and Algorithms.  Being a computer science major the core material was
never a concern. I had taken APCS the first time it was offered in May
1984 in Pascal and while most of my college and pre-teaching professional work
was in C, my college started it&amp;#39;s CS sequence with Pascal. I was more
concerned with the actual teaching part. I had taught math for a year
and a half at that point but never CS and by any measure I was still
wet behind the ears. I never finished that first experience because I
was excessed to Stuy mid semester. I wasn&amp;#39;t particularly happy with my
performance but looking back, I think I did a pretty good job given
the situation and my experience.&lt;/p&gt;
&lt;p&gt;
After teaching math for a year and a half I was back in APCS at
Stuy. Still in Pascal. I spent the next few years figuring out how to
teach CS and APCS in particular along with starting a couple of new
classes. When the College Board decided to move the AP class to C++ I
was happy, sad and a little worried. Pascal had a bunch of limitations
but I had never used C++. True, I was a C programmer at heart but I
had never really done the OOP thing. I did, as it turned out, design a
number of my C systems in an Object Typed design: I would use a single
file per &amp;#34;class&amp;#34; where local variables were de facto instance
variables and functions in the file were methods and each file was a
singleton class. I read &lt;a href=&#34;https://www.amazon.com/Object-Oriented-Analysis-Design-Applications-3rd/dp/020189551X/ref=sr_1_1?ie=UTF8&amp;amp;qid=1503519770&amp;amp;sr=8-1&amp;amp;keywords=Grady+Booch&#34;&gt;Booch&lt;/a&gt; and &lt;a href=&#34;https://www.amazon.com/Object-Oriented-Software-Construction-Book-CD-ROM/dp/0136291554/ref=asap_bc?ie=UTF8&#34;&gt;Meyer&lt;/a&gt; on my own but I had no
schooling in OOP and no professional experience.&lt;/p&gt;
&lt;p&gt;
As it turned out, I didn&amp;#39;t have to worry. I knew my CS and while it
took me a while to become comfortable with OOP, the class, and of
course I knew this from the get go, started from nothing and built
up complexity a step at a time. The worst that might have happened is
that some of my solutions might have been more C-esque than C++.&lt;/p&gt;
&lt;p&gt;
The move to Java was a little more jarring. Now we had a totally new
language. I couldn&amp;#39;t fall back on C. It removed memory management and
explicit pointers and it had to be used in an Object Oriented
manner. I remember asking Mike Schidlowsky, a former student turned
friend who was the Java consultant on the Java edition of Sedgewick&amp;#39;s
&lt;a href=&#34;https://www.amazon.com/Robert-Sedgewick-Algorithms-Fundamentals-Structures/dp/B008VR3ZH4/ref=sr_1_4?ie=UTF8&amp;amp;qid=1503520269&amp;amp;sr=8-4&amp;amp;keywords=schidlowsky&#34;&gt;Algorithms&lt;/a&gt; book how to do something. It had to do with passing and
modifying arrays. In C there were a number of ways to accomplish what
I wanted to do. In Java, I couldn&amp;#39;t figure out how to do it the way I
wanted. My friend Mike told me &amp;#34;you just don&amp;#39;t do it that way in
Java.&amp;#34; Again, it turned out that I didn&amp;#39;t have to worry. The basic
coding was still the same as were the data structures and
algorithms. The only challenge was that I had to get into a Java OOP
mindset which it turned out wasn&amp;#39;t that hard.&lt;/p&gt;
&lt;p&gt;
While I never really warmed up to OOP - I find other paradigms more
natural for me, I knew my CS and got more and more comfortable with
the Java (or C++) way of doing things as time wore on. Sometimes I
would say &amp;#34;I don&amp;#39;t know&amp;#34; or &amp;#34;let&amp;#39;s figure it out&amp;#34; but that&amp;#39;s OK.&lt;/p&gt;
&lt;p&gt;
Nowadays, there are many more resources available for CS teachers. If
you&amp;#39;re new, lean on them. Use the mailing lists, stackexchange,
facebook groups. Online resources like repl.it, codehs.com etc. Yes,
it&amp;#39;s true that you&amp;#39;ll be better next time around and even better years
down the road but right now, you&amp;#39;re probably better than you think.&lt;/p&gt;
&lt;p&gt;
A number of my former students volunteer for &lt;a href=&#34;https://www.tealsk12.org/&#34;&gt;TEALS&lt;/a&gt; - a really great
program that brings software engineers into the classroom to work with
non-CS teachers to deliver instruction. A number of my kids have
shared the following sentiment:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
I don&amp;#39;t know if I&amp;#39;m really helping
the teacher to become self sufficient or if I&amp;#39;m a great teacher but I
do know one thing - while I&amp;#39;m there, the kids are getting a hell of a
lot more than if I wasn&amp;#39;t there.&amp;#34;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
â€“ Remember that as well.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Thoughts on non educator  influences on CS Education</title>
      <link>https://cestlaz.github.io/posts/outside-influences-on-cs-ed/</link>
      <pubDate>Sat, 29 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/outside-influences-on-cs-ed/</guid>
      <description>&lt;p&gt;
Yesterday &lt;a href=&#34;https://twitter.com/guzdial&#34;&gt;Mark Guzdial&lt;/a&gt; blogged about a NY Times piece discussing
&lt;a href=&#34;https://computinged.wordpress.com/2017/07/28/silicon-valley-pushing-coding-into-american-classrooms-through-code-org-nytimes/&#34;&gt;Silicon Valleys influence on education through Code.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
Mark questioned the validity of the piece. If you don&amp;#39;t read Mark&amp;#39;s
blog and you&amp;#39;re in CS Ed you probably should.&lt;/p&gt;
&lt;p&gt;
I tried to leave a comment on Mark&amp;#39;s blog - not about the NY Times
article but rather my thoughts on why I think it&amp;#39;s important that we
remain wary and vigilant to industry and outsiders influence and
impact on CS education and on education in general.&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t know if my comment is sitting waiting for Mark to moderate or
if I&amp;#39;m experiencing WordPress weirdness but since it hasn&amp;#39;t shown up
there, I thought I&amp;#39;d share it here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
While the article might not make a strong case it&amp;#39;s important to be wary of outside influences on education policies.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m a fan of a lot of what code.org does but speaking about outsiders in generalâ€¦&lt;/p&gt;
&lt;p&gt;
Bill Gates and Co. directly or indirecty gave us such delights like stack ranking teachers, improving, I mean evaluating, I mean firing teachers based on test scores of students they don&amp;#39;t teach, more and more high stakes nonsense testing for kids, and  at least in NY the destruction of neighborhood schools.&lt;/p&gt;
&lt;p&gt;
They&amp;#39;ve also pushed the current charter movement that, aided by misleading stats appear successful but in truth are no better and frequently worse than public schools while not sharing back a single &amp;#34;best practice.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Then we have private companies like the College Board and Pearson both of whom have an outsized influence on US Ed policy and curriculum.&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t doubt the good intentions of code.org - as I said, I&amp;#39;m a fan. I am concerned when they and others take actions that can affect ed policy. I&amp;#39;m concerned when code.org representative pushes students to take an AP exam - not a great CS course with a great CS teacher but the actual exam. I&amp;#39;m even more concerned when code.org offers free PD when a school signs up for the PSAT8/9 - another high stakes meaningless test at taxpayer expense. For code.org it&amp;#39;s a means to  get more CS ed out there. To me it&amp;#39;s setting up a new cash cow for the college board at my expense and at students expense.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve seen many Ed Tech people, armed with the best intentions, enter the lions den â€“ a school, district, or municipality only to see their best intentions corrupted in the name of cost cutting, profits, or politics.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>CS Ed advocates should pay attention to greater ed issues</title>
      <link>https://cestlaz.github.io/posts/cs-ed-and-all-ed/</link>
      <pubDate>Tue, 18 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cs-ed-and-all-ed/</guid>
      <description>&lt;p&gt;
For anyone involved in K12 CS education, the past few years have been
a wild ride. When I first tried to make inroads in the DOE decades ago
I couldn&amp;#39;t get through the door. Now, CS Education is everyone&amp;#39;s
darling. It&amp;#39;s really amazing. It&amp;#39;s been a combination of grass roots
efforts by teachers, non profit education efforts such as &lt;a href=&#34;http://teals12k.org&#34;&gt;TEALS&lt;/a&gt;, advocacy of
groups like &lt;a href=&#34;http://code.org&#34;&gt;Code.org&lt;/a&gt; and amazing individuals like &lt;a href=&#34;http://avc.com/2017/06/bearing-witness/&#34;&gt;Fred Wilson&lt;/a&gt; who has
probably done more to move the needle of CS Ed in NY than any other 10
people combined.&lt;/p&gt;
&lt;p&gt;
While everyone agrees that to do CS education right at the K12 level
we need great teachers and lots of them, everyone also knows that
teachers voices are often unheard. The voices with the greatest weight
belong to the large non-profits, principals, superintendents and
local politicians.&lt;/p&gt;
&lt;p&gt;
Today&amp;#39;s post is a plea to those with voices to think about the effects
of their advocacy for CS Ed to the greater education landscape.&lt;/p&gt;
&lt;p&gt;
I started thinking about this recently as I&amp;#39;ve been developing the
CS teacher certification programs for Hunter College. As I spoke to
people across the nation I found that many of the efforts to
developing teacher certification are what I call the &amp;#34;you take it you
teach it&amp;#34; model. You take an abbreviated version of APCS-A and APCS-P
and you&amp;#39;re a certified CS teacher. Just about every real educator feels
that this is ludicrous. Some feel that this can be a first step - get
these credentials to get in the door and then you have three to five
years to really learn your subject and craft. I&amp;#39;m good with that but I
have a problem with anyone who says &amp;#34;you take it you teach it&amp;#34; is good
enough and I&amp;#39;ve heard of a number of regions that are seriously
considering it.&lt;/p&gt;
&lt;p&gt;
Why is this so bad and, I&amp;#39;d argue, dangerous? Not merely because we&amp;#39;ll
end up with substandard CS teachers for the foreseeable future but
also because it undermines the teaching profession as a whole.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s no secret that public education is under attack. A number of
states including Wisconsin, Arizona, Oklahoma, New York and Michigan
have considered relaxing the standards to become a teacher to address
a teacher shortage. In their twisted logic, the politicians and
&amp;#34;reformers&amp;#34; say that we can&amp;#39;t find enough qualified teachers because
we&amp;#39;ve made it an untenable career so let&amp;#39;s lower standards. You can
argue that any current state&amp;#39;s requirements are overly cumbersome but
that&amp;#39;s another conversation.&lt;/p&gt;
&lt;p&gt;
When CS Educators say that all that&amp;#39;s needed to teach CS is to sit in
on a two week APCS institute is saying that to teach any subject you
don&amp;#39;t need content expertise. This is dangerous to education as a
whole and when power players in the CS Ed movement don&amp;#39;t speak up
otherwise or even worse that the stance that &amp;#34;you take it you teach
it&amp;#34; is OK, we&amp;#39;re undermining teaching as a profession.&lt;/p&gt;
&lt;p&gt;
We need our heavy hitters to publicly and privately say that we need a
short term entry into the profession but we absolutely need plans and
pathways so that at the end of the day we have the best prepared
teachers in our schools for CS and for all subjects.&lt;/p&gt;
&lt;p&gt;
Another issue is when as CS Educators we don&amp;#39;t pay attention to the
whole child. I was at a meeting of CSTA people  from about thirty
states a few years ago. Someone asked &amp;#34;how can we advocate for CS when
the school might use it as an excuse to get rid of music?&amp;#34; Cameron
Wilson, at the time a lobbyist for the ACM said something to the
effect of &amp;#34;I&amp;#39;m not concerned with other subjects, my concern is
getting CS into the schools.&amp;#34; I get it, he was employed to stump CS
but we have to remember that we&amp;#39;re only a piece of the puzzle. We want
a seat at the table but we have to make sure that the table is
populated with everyone needed to provide a great education for our
kids.&lt;/p&gt;
&lt;p&gt;
A final issue I&amp;#39;ll mention here is how so many CS educators are so
close to the College Board. It was very disturbing that so many CS Ed
players were pushing for more students to take the APCS exam. Not the
class, not some other CS class but the APCS exam. AP is an extremely
controversial subject among teachers and many of us feel that too many
kids take too many AP classes and certainly too many exams. Remember,
the College Board is the organization that pushes things like the
PSAT8/9 another meaningless but high stakes exam inflicted upon our
kids at taxpayer expense. I understand that AP makes things easy -
they have courses, curricula, etc. but we&amp;#39;ve given the college board
an outsized influence on CS education and we&amp;#39;re not paying attention
to their outsized influence on education in general.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m just a small time teacher. I don&amp;#39;t have a national voice. I&amp;#39;m
urging those that do:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Look into what&amp;#39;s going on in greater education. Look at the way&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;public education has been under attack and why.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Look at the side affects of our choices - who we partner with and&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;what policies we push.&lt;/p&gt;
&lt;p&gt;
We might not agree on the right path but everyone with a voice in CS
Education should be having hard conversations about this and then
strongly advocating for the positions they feel correct.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A friendly reminder to use the right language when describing CS</title>
      <link>https://cestlaz.github.io/posts/languages-or-cs/</link>
      <pubDate>Mon, 10 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/languages-or-cs/</guid>
      <description>&lt;p&gt;
I was part of this conversation the other day:&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;When science teachers asked me if I taught AP Java I&amp;#39;d always respond by asking them if they taught AP Microscope.&lt;/p&gt;&amp;mdash; Mike Zamansky (@zamansky) &lt;a href=&#34;https://twitter.com/zamansky/status/883327927831711745&#34;&gt;July 7, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I always use that line to emphasize that I teach CS - a way of
thinking and problem solving and looking at the world. The languages
we use in our classes are tools to help us communicate ideas not the
ends but rather a means.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve spent the past couple of days at the CSTA conference. It&amp;#39;s been a
lot of fun. I&amp;#39;ve been spending the time with old friends and meeting
new ones and as everyone who knows me knows - I love talking shop.&lt;/p&gt;
&lt;p&gt;
I overheard a conversation today. One CS teacher describing what they
did to a few others. I overheard:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We teach Scratch then Swift and C++ and also teach Python&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I heard statements like this describing programs more than a couple of
times. I know we&amp;#39;re at a conference of CS Educators but even in this
community we have everything from beginners getting their feet wet to
hardcore computer scientists to everything in between.&lt;/p&gt;
&lt;p&gt;
We shouldn&amp;#39;t be teaching languages as an ends unto themselves and the
majority of us don&amp;#39;t.&lt;/p&gt;
&lt;p&gt;
What many of us do, though, is take the easy path and use the name of
a programming language to describe what we do rather than really
define what we do. This is why we hear &amp;#34;I teach Java&amp;#34; or &amp;#34;I teach a
class in Swift&amp;#34; even when the teacher teaching Java might really be
teaching Object Oriented program design and development or data
structures or something similar just using Java as the language or
tool.&lt;/p&gt;
&lt;p&gt;
I too fall into this trap but I try to catch myself. I try not to say
&amp;#34;I teach Scheme&amp;#34; but rather I&amp;#39;ll say &amp;#34;I teach Scheme. Actually, we&amp;#39;re
studying functional programming using Scheme as the language but for
convenience, I&amp;#39;ll just say Scheme for the rest of this talkâ€¦.&amp;#34;&lt;/p&gt;
&lt;p&gt;
The words we use to describe our field set the tone. If we&amp;#39;re sloppy
and say &amp;#34;we teach Java,&amp;#34; it&amp;#39;s just like biology teacher saying &amp;#34;I
teach microscope.&amp;#34;&lt;/p&gt;
&lt;p&gt;
As we try to define our field in the K12 space and seek equal footing
with established subject areas it&amp;#39;s important that we use the right
language so that other educators and policy makers don&amp;#39;t get the wrong
idea.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Disclosing Bugs - requiring a project roadmap</title>
      <link>https://cestlaz.github.io/posts/disclosing-bugs/</link>
      <pubDate>Tue, 13 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/disclosing-bugs/</guid>
      <description>&lt;p&gt;Over on Facebook, a fellow CS educator &lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-1&#34; href=&#34;#footnote-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; made a comment on something he
wanted to try with his students this summer: having the students
pre-disclose bugs when they submit their projects.&lt;/p&gt;
&lt;p&gt;
The post was asking for any links to &amp;#34;the literature.&amp;#34; I can&amp;#39;t speak
to that but I I&amp;#39;ve done something similar to what the post was asking
about so, as per usual, I thought I&amp;#39;d write about it here. It may not
be &amp;#34;research&amp;#34; but I&amp;#39;m more interested in teacher practices than ivory
towers anyway so here goesâ€¦&lt;/p&gt;
&lt;p&gt;
At a very basic level, I ask my students to provide a roadmap to any
project they submit - usually in a readme file. I basically ask:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How to use the project&lt;/li&gt;
&lt;li&gt;What&amp;#39;s cool and I should make sure to check out&lt;/li&gt;
&lt;li&gt;What doesn&amp;#39;t work, where were the sticking points and what&amp;#39;s the&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;status.&lt;/p&gt;
&lt;p&gt;
I tell my students that when I test the project, I&amp;#39;m not &amp;#34;out to get
them&amp;#34; and by their telling me how to navigate the project, it makes
sure I see things in the best possible light. I also tell them that I
will be more harsh on bugs that they don&amp;#39;t tell me about -
particularly bugs that only occur some of the time.&lt;/p&gt;
&lt;p&gt;
I also encourage (and sometimes require) that students maintain a
changelog in their repo and also sometimes encourage them to have a
todo list and list of bugs and for longer projects, I expect to see
these and the readme updated over the course of the project (which
should always be up to date on &lt;a href=&#34;https://cestlaz.github.io/posts/sigcse-2017-github-4&#34;&gt;GitHub&lt;/a&gt;, Dropbox or wherever the project
is living).&lt;/p&gt;
&lt;p&gt;
When the students provide a good write up it makes evaluating the
project much easier.&lt;/p&gt;
&lt;p&gt;
When students buy in, they&amp;#39;re hopefully thinking more deeply about
their projects in terms of design and implementation and also from the
point of view of someone else using their product. When they maintain
the readme and other files over time, it also enables me to better
support them.&lt;/p&gt;
&lt;p&gt;
So, does this work? Yes but with some caveats. It works better once
the class and teacher know each other. If the students trust the
teacher they&amp;#39;re more likely to be open and honest when they write up
the project. On the other hand, there will always be some students to
&amp;#34;phone it in&amp;#34; and do the bare minimum in terms of writing up their
projects.&lt;/p&gt;
&lt;p&gt;
The bottom line is that having the students do this is has a low cost
and is beneficial to both the students and the teacher. When it works,
it&amp;#39;s great and when it doesn&amp;#39;t, it&amp;#39;s still pretty good.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr class=&#34;footnotes-separatator&#34;&gt;
&lt;div class=&#34;footnote-definitions&#34;&gt;
&lt;div class=&#34;footnote-definition&#34;&gt;
&lt;sup id=&#34;footnote-1&#34;&gt;&lt;a href=&#34;#footnote-reference-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
&lt;div class=&#34;footnote-body&#34;&gt;
&lt;p&gt;I&amp;#39;m not sharing names from the Facebook post because it was
made in a semi-private forum and I haven&amp;#39;t asked permission.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>A* is born</title>
      <link>https://cestlaz.github.io/posts/a-star-is-born/</link>
      <pubDate>Mon, 05 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/a-star-is-born/</guid>
      <description>&lt;p&gt;
Over on the &lt;a href=&#34;https://cseducators.stackexchange.com/&#34;&gt;CS Educator StachExchange&lt;/a&gt;, which is in private beta for a
few more days, I saw a post asking about how to introduce the &lt;a href=&#34;https://en.wikipedia.org/wiki/A*_search_algorithm&#34;&gt;A*
search algorithm&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
I taught A* as part of the APCS class at Stuy so I thought I&amp;#39;d talk
about what I did here.&lt;/p&gt;
&lt;p&gt;
Some time around mid year, we get to intermediate recursion. This is
about the time, give or take, when we talk about the nlogn sorts.&lt;/p&gt;
&lt;p&gt;
We also build a recursive maze solver. It&amp;#39;s a nice algorithm and a
nice little program. It&amp;#39;s around 15 lines of code to perform a
recursive depth first search:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/astar/dfs.gif&#34; alt=&#34;/img/astar/dfs.gif&#34; title=&#34;/img/astar/dfs.gif&#34; align=&#34;center&#34; height=&#34;200px&#34;/&gt;
&lt;p&gt;
The basic algorithm is:&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
It&amp;#39;s a nice lesson because in addition to all the recursion stuff, we
also get to talk about state space, state space search, backtracking,
efficiency concerns and much more. After we finish the maze solver, we also talk about
other problems that can be similarly examined using state-space search
like the knights tour and N-queens problems.&lt;/p&gt;
&lt;p&gt;
A month or so later, when we&amp;#39;re learning about stacks and queues as
data structures, we revisit the maze solver. This time we solve the
problem in a more general way. We talk about using a data structure to
hold the set of nodes that we&amp;#39;re aware of and that we want to visit
next.&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
As we write the solution, we see that using a queue for this
data structure yields a breadth first search:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/astar/bfs.gif&#34; alt=&#34;/img/astar/bfs.gif&#34; title=&#34;/img/astar/bfs.gif&#34; align=&#34;center&#34; height=&#34;200px&#34;/&gt;
&lt;p&gt;
while using a stack yields depth first.&lt;/p&gt;
&lt;p&gt;
All of this leads to a discussion as to how deciding on which
locations to look at next can greatly influence the steps to the
exit. From here it&amp;#39;s easy to see that you can use a heuristic to order
the nodes in our data structure so that we explore &amp;#34;better&amp;#34;
possibilities first. The data structure becomes a priority queue and
we finally get to both &amp;#34;best first&amp;#34; and A* search:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/astar/astar.gif&#34; alt=&#34;/img/astar/astar.gif&#34; title=&#34;/img/astar/astar.gif&#34; align=&#34;center&#34; height=&#34;200px&#34;/&gt;
&lt;p&gt;
It&amp;#39;s a nice sequence of lessons, albeit lessons spread out over
months. The end result is that the students see both the need and
motivation for something like A* and they see that it&amp;#39;s not hard to
implement. One basic routine where you can plug in one of three data
structures - stack, queue, or priority queue to get very different
results.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A new first language? What&#39;s the follow up plan?</title>
      <link>https://cestlaz.github.io/posts/first-language-changing/</link>
      <pubDate>Fri, 21 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/first-language-changing/</guid>
      <description>&lt;p&gt;
This morning, &lt;a href=&#34;https://twitter.com/guzdial&#34;&gt;Mark Guzdial&lt;/a&gt; wrote about Stanford possibly &lt;a href=&#34;https://computinged.wordpress.com/2017/04/21/cs-department-updates-introductory-courses-java-is-gone/&#34;&gt;moving away
from Java&lt;/a&gt; as their intro language. This comes on the heels of a
semi-regular thread on one of the lists I&amp;#39;m on asking about what
languages are used at assorted colleges around the country. Invariably
the Pascal -&amp;gt; C++ -&amp;gt; Java progression of APCS turns up in these
threads.&lt;/p&gt;
&lt;p&gt;
There are plenty of arguments to be made both for and against pretty
much any language or platform. There&amp;#39;s no single best universal
answer. Each choice giveth and each choice taketh away.&lt;/p&gt;
&lt;p&gt;
What I&amp;#39;m really curious about is who&amp;#39;s looking at intro languages in
the context of complete programs or even complete educations that
could span multiple institutions.&lt;/p&gt;
&lt;p&gt;
Early language choices can make a big difference in engaging and
exciting newcomers but there are ramifications later on that few seem
to consider.&lt;/p&gt;
&lt;p&gt;
Take the APCS change from C++ to Java. It removed memory management
from the first year course. It also simplified issues relating to
pass by value vs pass by reference (or, rather, passing address by
value), bought much more strongly into OOP and moved more towards
using built in implementations of data structures like Lists rather
than rolling your own.&lt;/p&gt;
&lt;p&gt;
Removing memory management from the first year course in and of itself
isn&amp;#39;t a problem as long as it&amp;#39;s taught and taught effectively
somewhere later on. It could be argued that &amp;#34;memory is already covered
in our required systems course.&amp;#34; That could be the case, but there are
many concepts that kids don&amp;#39;t get the first time around. Is an
institution that covered memory management in CS1/2 and then came back
to it in a later Systems course giving their students the same
understanding now that they&amp;#39;ve eliminated the CS1/2 experience?&lt;/p&gt;
&lt;p&gt;
What about OOP buy in. Personally, I&amp;#39;ve never been a big OOP fan but
that&amp;#39;s neither here nor there. What I have found is that depending on
how a student is exposed to programming in CS1/CS2 can have a big
influence on how they approach problems later. Did the move to Java
cause more of our students to try to use shoehorn OOP into a problem
that really shouldn&amp;#39;t be approached in an OOP manner?&lt;/p&gt;
&lt;p&gt;
I suspect that the use of built in data structures has had a
negative impact. A few years after the switch to Java, I was talking
to a senior tech worker. He was having a bad day - interviewing
potential internees and full time engineers. My friend was complaining
that the kids couldn&amp;#39;t come up with solutions to what he thought were
pretty straightforward questions. He felt that had the kids actually
implemented algorithms like the nlogn sorts rather than just learning
java .sort method and just talking about the algorithm they&amp;#39;d be
better prepared. I&amp;#39;ve heard this sentiment repeated over and over
throughout the years.&lt;/p&gt;
&lt;p&gt;
This is not to say that Java is a horrible language or horrible for
teaching - that&amp;#39;s another debate. The point is that you can&amp;#39;t just
look at the intro class and who it draws in. You have to consider how
it will prepare students for the next level and you have to look at
the big picture â€“ will our students get everything they need by the
time they leave us.&lt;/p&gt;
&lt;p&gt;
Many schools have moved to Python. Will that effect students take on
type systems later on? Will the flexibility and constructs like list
comprehensions make it harder to teach recursion since there are
&amp;#34;easier&amp;#34; ways to do it?&lt;/p&gt;
&lt;p&gt;
None of these are really problems so long as the CS1/2 (or even CS0)
isn&amp;#39;t taught in a vacuum.&lt;/p&gt;
&lt;p&gt;
I fear, however that too often we&amp;#39;re paying attention to the intake of
the pipe and not so much the output.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SIGCSE 2017 - a path to github part 1</title>
      <link>https://cestlaz.github.io/posts/sigcse-2017-github-1/</link>
      <pubDate>Thu, 16 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse-2017-github-1/</guid>
      <description>
&lt;p&gt;
Both at and prior to SIGCSE 2017, I promised to write up the steps I
take to introduce and use revision control systems in my classes.&lt;/p&gt;
&lt;p&gt;
This series is not meant to be a git or &lt;a href=&#34;http://github.com&#34;&gt;GitHub&lt;/a&gt; tutorial. There are
plenty of those already (two of which I&amp;#39;ve linked to below).  This is
about the process I use with my students to get them up to speed.&lt;/p&gt;
&lt;p&gt;
As with any new tool, there will be some resistance but once git saves
them once, they get religion. There will also be some bumps in the
road but at the end of the day, the students will be using a valuable
and necessary tool.&lt;/p&gt;
&lt;p&gt;
I was also surprised at the ancillary benefits I got as a teacher by
using GitHub in particular. I&amp;#39;ll talk about that at the end of the
series.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s part one.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m doing this with git and GitHub but there&amp;#39;s no reason why other
systems and hosts can&amp;#39;t be used. I&amp;#39;d also recommend that any educator
or student sign up for the assorted &lt;a href=&#34;https://education.github.com/&#34;&gt;discounts&lt;/a&gt; offered by GitHub.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve followed this basic idea multiple times and done it over the
course of a single semester, a year, and even two years. Regardless of
time frame, the idea is the same. Make each step simple and relevant
and introduce complexity and roadblocks a piece at a time.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Step 1 - code distribution
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
To start, I don&amp;#39;t even talk about version control. We start with code
distribution. For years, I&amp;#39;ve looked for efficient ways of sharing
code with my classes. Both code developed in class and code for
assignments.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve tried things like NFS, Dropbox, online code repositories like the
files section of systems like Moodle or Blackboard.&lt;/p&gt;
&lt;p&gt;
At Stuy, we&amp;#39;ve always had efficiency problems with NFS and Dropbox has
multiple problems ranging from students not being able to install the
client on school machines to the problems of the network hit when a
room full of kids are syncing at the same time.&lt;/p&gt;
&lt;p&gt;
Uploading to a CMS system was also problematic - I&amp;#39;m a command line
wonk and hate going through slow web page menus to navigate a
filesystem and upload files. I also had to remember to get the files
off of whatever machine I was working on in class and then transfer
them to the CMS when I had a free moment.&lt;/p&gt;
&lt;p&gt;
Enter git. Now, of course, if you&amp;#39;re going to use git in the classroom
you have to know it. There are plenty of resources out there. Online
courses, articles, videos, and tutorials. Here are a couple:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://try.github.io/&#34;&gt;https://try.github.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=0fKg7e37bQE&#34;&gt;https://www.youtube.com/watch?v=0fKg7e37bQE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also want to point out that I just use raw command line git along
with native GitHub. GitHub has rolled out &lt;a href=&#34;https://classroom.github.com/&#34;&gt;GitHub Classroom&lt;/a&gt; which adds
a layer of support for educators. I don&amp;#39;t use it because, as I said,
I&amp;#39;m an old school command line wonk and also because I figured out a
sequence that worked for me and my students before GitHub Classroom
existed. Were I starting now, I&amp;#39;d take some time to look at their
current offerings before jumping in.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
Set up
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
Before starting, make sure you register your ssh keys. &lt;a href=&#34;https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/&#34;&gt;This&lt;/a&gt; help page
has more information. You&amp;#39;ll want to register an ssh key from every
machine you use - home, work, laptop.&lt;/p&gt;
&lt;p&gt;
Now go over to GitHub and make a new repository. I usually name it
&lt;strong&gt;&lt;strong&gt;classcode&lt;/strong&gt;&lt;/strong&gt;. &lt;strong&gt;&lt;strong&gt;BEGINNER NOTE:&lt;/strong&gt;&lt;/strong&gt; when creating the repo, make sure to
check the &amp;#34;initialize this repository with a README&amp;#34; box. If you don&amp;#39;t
you&amp;#39;ll be given a set of instructions on how to set things up once you
click &lt;strong&gt;&lt;strong&gt;Create repository&lt;/strong&gt;&lt;/strong&gt; but it&amp;#39;s easier and easier to follow if
you start with an initialized repo with a README.&lt;/p&gt;
&lt;p&gt;
I make the repo public â€“ it&amp;#39;s code I&amp;#39;m distributing â€“ nothing to
hide here. If you aren&amp;#39;t comfortable with that, just make the repo
private. If you&amp;#39;ve registered as a teacher with GitHub, you can set up
an organization and you&amp;#39;ll be able to set up free private repos within
it. The other downside here is that you&amp;#39;ll have to individually give
each student access to the repo. That&amp;#39;s a mild annoyance but it only
has to be done once.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
Teacher use
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
Next, clone out the repo. &lt;strong&gt;&lt;strong&gt;BEGINNER NOTE:&lt;/strong&gt;&lt;/strong&gt; Make sure you check out
the ssh version not the https version. Just make sure that when you
click the &lt;strong&gt;&lt;strong&gt;clone&lt;/strong&gt;&lt;/strong&gt; button, it says &amp;#34;Clone with SSH.&amp;#34; If not, just
click the &amp;#34;Use SSH&amp;#34; link in the same box. Students will clone the
using https.&lt;/p&gt;
&lt;p&gt;
From the teacher point of view, you can just start using the repo. My
work flow is typically:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;strong&gt;git pull&lt;/strong&gt;&lt;/strong&gt; at the start of class&lt;/li&gt;
&lt;li&gt;write code throughout class&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;strong&gt;git add&lt;/strong&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;strong&gt;git commit&lt;/strong&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;strong&gt;git push&lt;/strong&gt;&lt;/strong&gt; at the end of class&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I use a similar flow when I want to add files in my office or at home.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
Student use
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;From the student point of view, assuming a public repo, they just have to clone the repo and
at the beginning of every class or work session, do a &lt;strong&gt;&lt;strong&gt;git
pull&lt;/strong&gt;&lt;/strong&gt;. That&amp;#39;s all there is to it.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-5&#34;&gt;
Thoughts
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
That&amp;#39;s it. The kids are now using GitHub â€“ they&amp;#39;re probably looking
at and poking around on the web site as well as pulling files to their
machines. You can also, in class, show things like &lt;strong&gt;&lt;strong&gt;git status&lt;/strong&gt;&lt;/strong&gt;,
&lt;strong&gt;&lt;strong&gt;git log&lt;/strong&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;strong&gt;git diff&lt;/strong&gt;&lt;/strong&gt; to set the stage for step 2 of this
process and beyond.&lt;/p&gt;
&lt;p&gt;
Since the students aren&amp;#39;t adding, committing or pushing, you probably won&amp;#39;t
get any errors.&lt;/p&gt;
&lt;p&gt;
The only problem that could reasonably occur is if a student places a
file in their local copy of the repo with the same name as something
they haven&amp;#39;t pulled yet. This is pretty easy to address and provides a
nice stepping stone lesson to again, set the stage for more complex
operations.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m happy with this as a first step towards git using GitHub. It
provides a nice way of sharing class code while gently introducing the
students to the tool.&lt;/p&gt;
&lt;p&gt;
The next step  is having the students add files to a repo. That&amp;#39;s the
next post in this series.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>