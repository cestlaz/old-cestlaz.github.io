<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>github on C&#39;est la Z</title>
    <link>https://cestlaz.github.io/tags/github/</link>
    <description>C&#39;est la Z (github)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 26 Apr 2018 00:00:00 +0000</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/tags/github/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>Pull Requests and Other People&#39;s Code</title>
      <link>https://cestlaz.github.io/posts/pull-requests/</link>
      <pubDate>Thu, 26 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/pull-requests/</guid>
      <description>&lt;p&gt;
One of the things I&amp;#39;ve heard for years from former students - both
those looking for jobs and those looking to hire is that colleges
don&amp;#39;t really do a good job preparing students for careers in
tech. Sure they teach the algorithms and the theory but ther are a lot
of missing pieces, particularly on the practical end. I&amp;#39;m certainly
not advocating turning CS programs into coding schools but there are
many low cost opportunities to bring practical real world best
practices in to the CS classroom. I most recently wrote about &lt;a href=&#34;http://cestlaz.github.io/posts/testing-part2%0A&#34;&gt;unit
testing&lt;/a&gt; and had earlier about using &lt;a href=&#34;https://cestlaz.github.io/posts/sigcse-2017-github-4&#34;&gt;GitHub as an educational
tool&lt;/a&gt;. I&amp;#39;ve been happy with the way I introduce students to Git and
how we use GitHub in my classes but I&amp;#39;ve never found a smooth way to
introduce Pull Requests. A pull request is basically a mechanism by
which one can suggest a change to a project even if you don&amp;#39;t own
it. The project owner can then decide to merge it in or not.&lt;/p&gt;
&lt;p&gt;
Being comfortable with the pull request work flow is an important part
of contributing to open source projects. The basic process is that you
make a copy of the project you want to work on by forking it, make
your changes, then issue a pull request back to the project. For a
beginner, there are a lot of moving parts. Instead, I teach my
students branching and merging within a project. It&amp;#39;s much easier and
arguably more useful for day to day projects. I&amp;#39;d like my kid to learn the
pull request mechanics but I haden&amp;#39;t thought of a good way to do it.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve also wanted to give kids more real world experiences in class and
one experience they rarely get is working in other people&amp;#39;s code
bases. In school you largely write your own projects be they group or
solo or work off a hopefully tried and true code base provided by the
instructor. In the real world you&amp;#39;re frequently working off of someone
elses code and it&amp;#39;s rarely in a polished state.&lt;/p&gt;
&lt;p&gt;
I finally found a way to kill both birds with one stone. A couple of
weeks ago my class&amp;#39; lab was rather lengthy. It involved reading in a
source file and reformating it in a sensible way. I knew most of the
students wouldn&amp;#39;t finish it in the allotted time and even if they did,
this was an easy assignment to extend. On lab day I had students
create a new repo for this lab (normally they just add a folder in a
their &amp;#34;labs&amp;#34; repo) and get as much done as they could. The rule was
simple - push what you&amp;#39;ve got up to GitHub at the end of class and
then you can&amp;#39;t push anything else. I also made it clear that I didn&amp;#39;t
expect a completed lab..&lt;/p&gt;
&lt;p&gt;
We continued the lab in the next class session. This time. I randomly
assigned repos to students so that they would fork someone elses
lab. They then had to complete the lab on the other students code base
and then issue a pull request back to the original&lt;/p&gt;
&lt;p&gt;
This was the first time I&amp;#39;ve tried this so it was a little
klunky. I&amp;#39;ll do a much better job specifying the assignment and
instructions next time around but even so I think the class went
well. By the end of the class the students had sucesfully forked a
project, issued a pull request, and merged one in to their own
project. The only think I wasn&amp;#39;t happy with was that many of the
merges happened automatically. I have to figure out how to set things
up so that there are merge conflicts since I want my students to
experience that.&lt;/p&gt;
&lt;p&gt;
Overall,  I was very happy with the way things worked out. The
students were able to experience important real workd software
engineering techniques without removing any of the academic CS in the
class.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Collaborative Coding or Cheating</title>
      <link>https://cestlaz.github.io/posts/collaborative-coding-or-cheating/</link>
      <pubDate>Fri, 20 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/collaborative-coding-or-cheating/</guid>
      <description>&lt;p&gt;
I haven&amp;#39;t been teaching this past semester. That&amp;#39;s why I haven&amp;#39;t been
writing much about lessons. I miss working with students but that will
resume in the fall and this semester has allowed me to get a jump on
new projects.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s also allowed me to look at some student issues from a bit of a
distance.&lt;/p&gt;
&lt;p&gt;
One issue that keeps coming up is cheating.&lt;/p&gt;
&lt;p&gt;
Some of it, classroom cheating. my friend &lt;a href=&#34;https://twitter.com/cscheerleader&#34;&gt;Ria&lt;/a&gt; recently asked a
question on Facebook about it. A nice thread ensued but unfortunately,
it&amp;#39;s locked in the Facebook silo. I&amp;#39;ve got a lot to say on that and
hope to explore it soon but today let&amp;#39;s focus on project
cheating - something that could just as easily apply to homeworks and
student essays and research papers as well.&lt;/p&gt;
&lt;p&gt;
One part of the question is on students using code they find out in
the wild. &lt;a href=&#34;https://twitter.com/alfredtwo&#34;&gt;Alfred&lt;/a&gt; wrote a bit about it on his blog &lt;a href=&#34;http://blog.acthompson.net/2016/05/copying-codesteal-from-best.html&#34;&gt;here&lt;/a&gt; where he points
out some pluses, some minuses, and raises some good thought points.&lt;/p&gt;
&lt;p&gt;
I want to keep it in the class - code sharing amongst students,
project and source code submission, and group projects.&lt;/p&gt;
&lt;p&gt;
Teachers have all sorts of options these days including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Using a CMS like Blackboard or Moodle&lt;/li&gt;
&lt;li&gt;Dropbox based solutions&lt;/li&gt;
&lt;li&gt;Emailing projects&lt;/li&gt;
&lt;li&gt;Using development tools and sites such as git with GitHub, BitBucket&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;or other repository hosting services&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve always been a fan of having the kids learn real software
engineering skills along with the CS so Git, GitHub and public repos
have been my weapon of choice.&lt;/p&gt;
&lt;p&gt;
Interesting enough, I&amp;#39;ve gotten an earful both from fellow teachers
and professors and online for my stance on public repos.&lt;/p&gt;
&lt;p&gt;
I keep hearing &amp;#34;the kids will copy from each other&amp;#34; or something like
that.&lt;/p&gt;
&lt;p&gt;
As Alfred said in his post: &amp;#34;Students have been copying from
classmates for years.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Students who want to copy assignments have done so long before we&amp;#39;ve
been teaching CS and they&amp;#39;ll be doing it for years to come.&lt;/p&gt;
&lt;p&gt;
Using a hidden submission system doesn&amp;#39;t help and could hurt.&lt;/p&gt;
&lt;p&gt;
Far better to create an open environment. You get an opportunity to
talk about code sharing, attribution, learning from each other,
supporting each other, and where to draw the line.&lt;/p&gt;
&lt;p&gt;
On top of that, the students learn a real tool set and have a chance
to learn real development methodologies.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s a win all around.&lt;/p&gt;
&lt;p&gt;
Will open repos stop cheating and irresponsible copying? Certainly
not. It could, however, raise awareness.&lt;/p&gt;
&lt;p&gt;
So what do I do on the cheating front?&lt;/p&gt;
&lt;p&gt;
Besides trying to create a culture where cheating is discouraged,
cooperation is encouraged but where students know the line, I will try
to keep them honest.&lt;/p&gt;
&lt;p&gt;
Frequently, the day a big project is due, I&amp;#39;ll give a quiz on the
project. Students will have to describe parts of the project and what
they did. Either a student will have had to contributed or at least
will have had to have studied the rest of the teams code to pass the
quiz.&lt;/p&gt;
&lt;p&gt;
GitHub also gives tools that help.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the GitHub graph for a project:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/github-graph.png&#34; alt=&#34;/img/github-graph.png&#34; title=&#34;/img/github-graph.png&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
You can see who did what and when. The teacher can drill down further
to examine the diffs â€“ what code did each student write, when, and
from where. If two students submit very similar code, the commit
timestamps will even tell you who was first.&lt;/p&gt;
&lt;p&gt;
The tooling for teachers could be better but the infrastructure is
there.&lt;/p&gt;
&lt;p&gt;
Technology isn&amp;#39;t going to prevent cheating and more often than not, it
seems that measures taken don&amp;#39;t stop the bad guys but inconvenience
those trying to do it right.&lt;/p&gt;
&lt;p&gt;
Much better to build a class culture where the kids want to do it the
right way.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>