<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>education on C&#39;est la Z</title>
    <link>https://cestlaz.github.io/categories/education/</link>
    <description>C&#39;est la Z (education)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Feb 2022 12:12:26 -0400</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/categories/education/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>Rubrics for teacher observations are garbage</title>
      <link>https://cestlaz.github.io/post/observation-rubrics/</link>
      <pubDate>Wed, 09 Feb 2022 12:12:26 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/observation-rubrics/</guid>
      <description>&lt;p&gt;
There have been a lot of bad ideas foisted onto educators over the
course of my career. One of the ones that always pissed me off was the
use of a rubric for teacher observation. Specifically, using the
Danielson Framework. &lt;/p&gt;
&lt;p&gt;
The Danielson Framework is a LONG laundry list of topics and concepts
and for each a teacher could be rated ineffective, developing,
effective, or highly effective.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s garbage.&lt;/p&gt;
&lt;p&gt;
Sure, there are some good things in the framework but using a
restrictive rubric to judge a teacher is just a bad idea. Even the
frameworks creator, Charlotte Danielson publicly stated when this
nonsense got started that the framework should not be used to evaluate
teachers. Of course departments of education would give a nod nod
wink wink and say &amp;#34;no, it&amp;#39;s not for evaluation, it&amp;#39;s for teacher
improvement.&amp;#34;&lt;/p&gt;
&lt;p&gt;
I remember talking to a colleague at Stuy. She hated the Danielson
Framework that was being forced on teachers for observations. She was
known to be a strong teacher but according to Danielson, she was off
the charts good. She reason she hated it was because she recognized
that her teaching style just happened to map well to the framework du
jour and eventually it would be a different rubric and she would no
longer be good.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve actually seen this happen - teachers going from good to bad or
the reverse based on an observation rubric. The teacher didn&amp;#39;t change,
nor the students but change the rubric and you can get the results you
want. Good, or more frequently bad, I mean it was then Governor Cuomo
who said that his teacher evaluation metric was clearly no good
because too many teachers were scoring well.&lt;/p&gt;
&lt;p&gt;
Why am I bringing this up? Because student teachers. My CS Education
Masters program is about to have it&amp;#39;s first graduates and New York
State will have it&amp;#39;s first two newly certified CS teachers with said
degrees. They&amp;#39;re both finishing up our program with a last course (CS
Topics) and student teaching. Both of our student teachers will have
to be officially observed three times and ultimately I&amp;#39;ll have to rate
them and enter those ratings into Hunter&amp;#39;s system.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m ranting on Danielson because Hunter uses said framework to
evaluate its student teachers. Like an institution, Hunter&amp;#39;s a complex
beast and there&amp;#39;s both good and bad but seeing what is essentially the
Danielson framework being used to evaluate student teachers knocked
them (us) down a peg in my book.&lt;/p&gt;
&lt;p&gt;
Now, from a top down approach, using something like Danielson makes
sense. It gives a series of check boxes making things easy to measure
even if they&amp;#39;re the wrong things. It also made sense back when it came
to be because of the leadership model espoused by people like Michael
Bloomberg where he would take young teachers with a year or two of
experience and make them principals. A horrible idea which persists to
this day. Traditionally, an AP or P would have decades of teaching
under their belt. They knew what a good lesson looked like. Not
Bloomberg era principals. I mean, it takes a dozen years before you&amp;#39;re
really an intermediate stage teacher. A two year principal doesn&amp;#39;t
have a chance nor a clue.&lt;/p&gt;
&lt;p&gt;
The bottom line is that good (and bad) teaching is so varied and
nuanced that you can&amp;#39;t boil it down to a rubric. All you can say are
things like look for questioning, engagement etc..&lt;/p&gt;
&lt;p&gt;
My approach to observations was set by my first supervisor at Seward
Park High School. He was a master teacher. Just ask him. Unlike many
APs who just teach honors or the top level class, he would rotate
classes among his entire department. He would teach everything from
calculus to remedial math. He&amp;#39;d say &amp;#34;those kids deserve me too.&amp;#34; Yeah,
he was arrogant, but he really was a master teacher. He was also great
if he liked you but a horror if he didn&amp;#39;t. Fortunately, he liked me.&lt;/p&gt;
&lt;p&gt;
He said that the one thing you have to keep asking yourself when you
observe a class is &amp;#34;is learning happening.&amp;#34; It&amp;#39;s that simple. Then,
it&amp;#39;s up to you as the observer to figure out where, how and why and
what you can suggest to make it better (while observing the cardinal
rule of not fixing the lesson). This makes all the sense in the world
to an experienced educator and it allows them to hone in on an
observee&amp;#39;s strenghts and weaknesses while also adjusting for the class
and circumstances.&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;ve got good observers and trust them, it works and works very
well.&lt;/p&gt;
&lt;p&gt;
What don&amp;#39;t work? Detailed rubrics by non teachers.&lt;/p&gt;
&lt;p&gt;
Unfortunately, right now, this is just another idiotic idea that
teachers are forced to deal with and just another thing driving
teachers away from the profession.&lt;/p&gt;
&lt;p&gt;
Will the powers that be ever learn? Probably not so for now it&amp;#39;s up to
good supervisors to shield their teachers from the nonsense and I
hope, in my capacity, when I&amp;#39;m able I can do the same.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Do you need to know assembly to be a computer scientist?</title>
      <link>https://cestlaz.github.io/post/assembly/</link>
      <pubDate>Wed, 19 Jan 2022 06:47:18 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/assembly/</guid>
      <description>&lt;p&gt;
Another recent discussion online asked &amp;#34;do you need to know assembly
language to be a computer scientist?&amp;#34;&lt;/p&gt;
&lt;p&gt;
Sides quickly formed. On one side, it was a strict requirement. Some
going so far as saying you &lt;strong&gt;had&lt;/strong&gt; to start with it or at worst a
language like C. On the other side you had people claiming that it&amp;#39;s
wholly unnecessary for most CS graduates like many of the classes we
require of a CS major (I&amp;#39;m looking at you Calc II and beyond).&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t dispute that many people with CS degrees have great tech
careers and never program in assembly. Further, the idea that a low
level assembly programmer describes what a &amp;#34;computer scientist looks
like&amp;#34; or &amp;#34;should look like&amp;#34; is pretty off base.&lt;/p&gt;
&lt;p&gt;
On the other hand, I&amp;#39;d argue that a well educated computer scientist
should have some knowledge of low level concepts which can probably
best be explored through some exposure to assembly language.&lt;/p&gt;
&lt;p&gt;
To start, what is a computer scientist? As a field we still haven&amp;#39;t
worked that one out. Certainly, people employed as professors in
computer science departments are pretty much, by definition, computer
scientists but that&amp;#39;s the minority of CS majors.&lt;/p&gt;
&lt;p&gt;
To me, and this isn&amp;#39;t really a great formal definition, a person who
employs the creative and problem solving techniques associated with
computer science in their day to day can certainly call themselves a
computer scientist.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s a wishy washy definition, I know but to me, it works. Someone
employed as a software engineer &lt;strong&gt;can&lt;/strong&gt; be a computer scientist or they
might not be. It depends on their job and how they approach it. Say
said SE is given screen descriptions, layouts and what to do when
events happen and they write code to implement this, they&amp;#39;re not being
a computer scientist. Likewise, if they implement an algorithm
specifically given to them for a task. On the other hand, if the same
person designs the interface making creative decisions involving
accessibility and usability or solves a problem using or designing an
algorithm then implementing one, then they would be, in my view acting
as a computer scientist.&lt;/p&gt;
&lt;p&gt;
Of course, in the general sense a SE could be a real software
engineer, software architect, or many more things as well.&lt;/p&gt;
&lt;p&gt;
So, does a computer scientist &lt;strong&gt;need&lt;/strong&gt; to actively know assembly?
No. That said, do they benefit from knowing something about it? I&amp;#39;d
say yes.&lt;/p&gt;
&lt;p&gt;
Years ago, I was watching a special with Itzhak Perlman, arguably the
greatest violinist of a generation and one of my favorites. He was
talking to and playing with a bunch of &lt;a href=&#34;https://en.wikipedia.org/wiki/Klezmer&#34;&gt;klezmer&lt;/a&gt; musucians. Or rather, I
should say trying to play with. Klezmer is something of a Jewish jazz
with a lot of improvisation. Perlman understood this, could
meaningfully converse about it with the other musucians but he had the
hardest time trying to keep up with them. Nobody could seriously say
that Izhak Perlman wasn&amp;#39;t and isn&amp;#39;t a brilliant musician and artist
but he really couldn&amp;#39;t play improvisational jazz. His training and art
are just in a different corner of the music world. That said, he was
certainly well versed in it. He knew jazz even though he didn&amp;#39;t
perform it.&lt;/p&gt;
&lt;p&gt;
I also saw this at a Bobby Mcferrin concert. He was performing with a
small string orchestra. I think maybe it was Gidon Kremer&amp;#39;s Kremerate
Baltica but I don&amp;#39;t remember. At one point he was calling out the
individual orchestra members to do some improv. It did not go
well. Again, these were all clearly master artists and they certainly
knew and were comfortable with Jazz, just not performing it on the
fly.&lt;/p&gt;
&lt;p&gt;
In case you really want to see what I&amp;#39;m talking about, I&amp;#39;ll give one
more example:&lt;/p&gt;


&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/6mRT61rRSGc?t=37&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/iframe&gt;
&lt;p&gt;
Having some knowledge of assembly, or more specifically, how low level
things work is what I call a &amp;#34;latin&amp;#34; of CS. Understanding things like
memory or how a processor works help an individual understand buffer
overflows or why data types matter, why floating point calculations
are innacurate or why a hash table has to be sparse. They may never
program in assembly but some knowledge will make them a stronger
computer scientist. I would say the same for my other CS latin -
theory. They might not use it day to day but it will help shape their
decisions and make them a stronger software engineer or whatever.&lt;/p&gt;
&lt;p&gt;
So, can you be a gainfully employed tech person and never have seen
anything low level? Of course. Can you do computer science stuff and
say the same? Sure. But a well educated, well rounded computer
scientist will have had some exposure to low level concepts and have
some base level understanding.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How Will Online Influence Teaching</title>
      <link>https://cestlaz.github.io/post/how-will-online-influence-teaching/</link>
      <pubDate>Mon, 03 Jan 2022 08:53:28 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/how-will-online-influence-teaching/</guid>
      <description>&lt;p&gt;
I always enjoy Fred Wilson&amp;#39;s predictions for the new year over on his
  &lt;a href=&#34;https://avc.com&#34;&gt;blog&lt;/a&gt; and &lt;a href=&#34;https://avc.com/2022/01/what-is-going-to-happen-in-2022&#34;&gt;this year&lt;/a&gt;  was no exception.&lt;/p&gt;
&lt;p&gt;
I was inspired to think a bit on his education prediction:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;K12 systems around the US (and around the world) faced with teacher
shortages and desperate to erase several years of learning shortfalls,
will increasingly adopt online learning services in the school
building in lieu of and in addition to in-class learning.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Fred&amp;#39;s a VERY sharp and perceptive guy and a friend and I think
he&amp;#39;s correct on the adoption of online learning but I thought a couple
of points merited a deeper dive from a guy who&amp;#39;s spent a lifetime in
the trenches.&lt;/p&gt;
&lt;p&gt;
The first thing I think worth talking about, and this isn&amp;#39;t really
about the adoption of online learning are learning shortfalls They
don&amp;#39;t exist. Learning shortfalls due to Covid, also described as
learning loss is a made up concept. Usually pushed by politicians.&lt;/p&gt;
&lt;p&gt;
The claim is that due to COVID students learned less than what they
were supposed to and we have to make that up. Less than what? Less
than who? Everyone in the world was hit with this.&lt;/p&gt;
&lt;p&gt;
This comes back to our countries love affair with high stakes
testing - every student MUST finish Algebra by 8th grade, or MUST have
a certain reading proficiency by 5th grade (whatever that means).&lt;/p&gt;
&lt;p&gt;
On the other hand, we&amp;#39;re told that students work at their own
pace.&lt;/p&gt;
&lt;p&gt;
Which is it?&lt;/p&gt;
&lt;p&gt;
The truth is that a large amount of specific topics we cover in K12
could be eliminated and we&amp;#39;d be none the worse for wear. In Algebra 2
/ Trig there&amp;#39;s around a month of Circle Geometry. It seems randomly
placed and really doesn&amp;#39;t introduce any new meaningful concepts. I
suspect that it originally was placed in the course when Alg2/Trig was
the terminal HS math course and people through &amp;#34;well, kids should see
this sometime&amp;#34; but now this is no longer the case. We could easily
knock it out.&lt;/p&gt;
&lt;p&gt;
Likewise, look at how Geometry evolved. Even though it&amp;#39;s supposed to
be a course about proof many schools only pay lip service to teaching
it. This is a result of high stakes testing. Teachers know that
teaching proof is HARD and learning it likewise. They also know that
the students need to pass the regents to graduate and that both
student and teacher will be judged on passing the exam. Further, they
know that the best route to get the student passing is to barely deal
with proof and focus on the rest of the class which is easier to teach
and learn and is worth the lions share of the points on the regents.&lt;/p&gt;
&lt;p&gt;
In English we can read one less Shakespeare and I&amp;#39;m sure we can go
down the list we&amp;#39;ll find that a lot of these things that kids didn&amp;#39;t
learn are really just arbitrary.&lt;/p&gt;
&lt;p&gt;
The other truth is that indeed people learn at different rates and
if we really cared about education we&amp;#39;d admit and deal with this
rather than keeping our lock step testing based system.&lt;/p&gt;
&lt;p&gt;
So, learning shortfalls are manufactured and could easily be
dismissed.&lt;/p&gt;
&lt;p&gt;
With that aside, we can look at online learning.&lt;/p&gt;
&lt;p&gt;
Just to get started - I think that online learning has a place. It can
be at times a great supplement to in person learning and at times it
can be the superior option. I&amp;#39;ll write more about that soon. Probably
not for another week or so since Devorah and I are hoping to get away
to San Diego for a little vacation later this week. My concern comes
from me being much more the pessimist than Fred.&lt;/p&gt;
&lt;p&gt;
Well, I used to be more of an optimist but working in the system for
30 years has a way of beating you down. Now I&amp;#39;m much more of a &amp;#34;hope
for the best, expect the worst&amp;#34; kind of guy.&lt;/p&gt;
&lt;p&gt;
My first fear is that online learning will be used just as Fred
mentioned, due to teacher shortages. I think this is likely to happen
and it&amp;#39;s not going to be pretty. Better to actually address teacher
shortages by, I don&amp;#39;t know, paying teachers fairly and having them
work in safe environments with reasonable work loads.&lt;/p&gt;
&lt;p&gt;
Instead, I see a new wave of technology based solutions like online
charters which have proven to be ripe for scandal or programs like the
technology based &amp;#34;credit recovery&amp;#34; courses that came online under
Bloomberg. These were self paced online courses where students clicked
through repeatedly. Great for graduation rates. Horrible for actual
learning.&lt;/p&gt;
&lt;p&gt;
We&amp;#39;re also going to see technology being used not to make teachers
more effective but either to add to their workload and/or class sizes.
A small and maybe frivolous example is when politicians were talking
about eliminating snow days - they&amp;#39;ll just teach online. Now, since
you don&amp;#39;t know a snow day is coming this leaves a teacher to scramble
at the last minute to come up with something and given how much time
can go into prep, this is a BIG add to the teachers week. As a
teacher, I loved snow days not so much as a &amp;#34;party day&amp;#34; but rather as
a day where I got the gift of a day back to catch up on planning,
grading, and paperwork. Besides, I think that rare surprise day off is
actually healthy for kids.&lt;/p&gt;
&lt;p&gt;
A bigger example is that I&amp;#39;m thinking that we&amp;#39;ll see schools expecting
teachers be available to students and parents 24x7. We already see
this starting.&lt;/p&gt;
&lt;p&gt;
A third would be instead of a small class where teachers and students
interact using technology to balloon up the class size. So much of
teaching, particularly in K12 is about relationships and interactions
and you just don&amp;#39;t get that when you decide to do a class on computers
and drive up the enrollment.&lt;/p&gt;
&lt;p&gt;
You&amp;#39;ll also see technology that seem to help teachers but even those
have a downside. Prime example - autograders. They&amp;#39;re great for
providing students with instant feedback and for grading &amp;#34;short
answer&amp;#34; or &amp;#34;right or wrong&amp;#34; questions but when a teacher grades a
teacher sees a students work and gains insights into the student. If
I&amp;#39;m not grading projects, I&amp;#39;m losing that insight.&lt;/p&gt;
&lt;p&gt;
Actually, a great example is looking at student projects in the old
world and in the new one.&lt;/p&gt;
&lt;p&gt;
In the old world, a project is assigned in class. Maybe we have a lab
day or two, then some work on their own time. More lab days, then
finally the project is due and the teacher grades. With all that in
class time, the teacher is observing and interacting and getting to
know the students and their work. To be honest, by the time I grade a
project, I already know most of the story but reading over the code
and running the program on my own is the final piece.&lt;/p&gt;
&lt;p&gt;
The new way? The project is assigned. Work is done outside of hte
teacher&amp;#39;s view. The teacher only sees the students work if they ask
for help outside of class hours (since you can&amp;#39;t use that important
synchronous class time for that with 100+ students) and then it&amp;#39;s
autograded.&lt;/p&gt;
&lt;p&gt;
The old way takes more time and more work but that&amp;#39;s teaching and
learning. The new way will work great for the autodidacts and a number
of kids will flow through the machine but here technology which would
seem like a win, really isn&amp;#39;t.&lt;/p&gt;
&lt;p&gt;
This is a lot of &amp;#34;expect the worst&amp;#34; and I do want to be clear - I love
tech and think that tech can be a great boon to education if done
right. I&amp;#39;m just really wary of past experience being a predictor of
how things will go in the future. I think Smart, well meaning people
are going to continue to come up with wonderful tools that could do
worlds of good for students and teachers but I have little confidence
in the decision makers deploying them in ways that will truly benefit
students.&lt;/p&gt;
&lt;p&gt;
I hope I&amp;#39;m wrong and none of this pessimism will stop me from working
with technologists, ed tech people, and playing with the new toys as
they become available. I just also want to be prepared for the worst
while I&amp;#39;m hoping for  the best.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How The Hash Is Made</title>
      <link>https://cestlaz.github.io/post/how-the-hash-is-made/</link>
      <pubDate>Thu, 16 Sep 2021 17:08:19 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/how-the-hash-is-made/</guid>
      <description>&lt;p&gt;
Following up on my &lt;a href=&#34;https://cestlaz.github.io/post/what-they-used-to-know/&#34;&gt;last post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
Soon after I read that tweet, I read Julia&amp;#39;s post on &lt;a href=&#34;https://jvns.ca/blog/2021/09/10/hashmaps-make-things-fast/&#34;&gt;hash tables&lt;/a&gt;. This
got me thinking more about what is and isn&amp;#39;t taught in school. Hash
tables were always taught in CS programs but back in the day you might
not have used them much after your data structures or algorithms
classes. Nowadays you&amp;#39;re much more likely to use them as they&amp;#39;re built
in to so many platforms.&lt;/p&gt;
&lt;p&gt;
Hash tables and related structures are great - I use them all the time
but they can also become a go to without thinking it through. This
actually came up in conversation with the same my high level SE friend
at that big bank from the last post. He also noticed that many interviewees would always
go right to the hash table even when there were red flags in the
question to warn away fro them.&lt;/p&gt;
&lt;p&gt;
For a hash table to get you that nice fast expected constant time
performance, it has to be sparse - few collisions. If you implement a
closed hash table (all the data is in a single array) and there&amp;#39;s not
a lot of spare space, it will fill up and all of a sudden that O(1)
insertion and retrieval time will go linear. I can&amp;#39;t say for certain
but I&amp;#39;m guessing the vast majority of Python programmers who use hash
tables (dictionaries) all the time don&amp;#39;t really know this or if they
do never think about it.&lt;/p&gt;
&lt;p&gt;
Is this a byproduct of using the built in implementations in college
combined with self taught programmers never seeing this at all? Maybe
but this was probably a deficiency even in my day.&lt;/p&gt;
&lt;p&gt;
This also came up when I accidentally interviewed for a position at
Google. There was a question about storing and accessing a bunch of
data. I don&amp;#39;t remember the question but there was a key line - &amp;#34;you
have unlimited storage&amp;#34; which is the trigger phrase for &amp;#34;use a hash
table.&amp;#34; I got a kick out of it but felt this was a you know it or you
don&amp;#39;t. I think I mentioned it to the interviewer.&lt;/p&gt;
&lt;p&gt;
This also brought to mind another example. Not mine - I read this in
John Bentley&amp;#39;s terrific book &lt;a href=&#34;https://tfetimes.com/wp-content/uploads/2015/04/ProgrammingPearls2nd.pdf&#34;&gt;&amp;#34;Programming Pearls.&amp;#34;&lt;/a&gt; The gist was that a
room full of very smart people were implementing a binary search. The
idea is that you have an array of data that is sorted and instead of
looking through every item one at a time, you calculate the middle of
the array, look there and then, if you haven&amp;#39;t found the item, you
throw away half the data and repeat the process with the remaining
half.&lt;/p&gt;
&lt;p&gt;
Every now and then, the implementations had a problem and nobody could
figure out why. As it turns out, in calculating the midpoint, they&amp;#39;d
add the lower value and the higher value and then divide the sum by
two.&lt;/p&gt;
&lt;p&gt;
Sounds reasonable.&lt;/p&gt;
&lt;p&gt;
The problem was that when low and high were at the upper end of the
data set the addition would go past the largest integer wrapping
around and causing wonky results.&lt;/p&gt;
&lt;p&gt;
Pretty subtle error but at least you&amp;#39;ve got a shot at figuring it out
if you understand integer sizes and how they work on your machine. &lt;/p&gt;
&lt;p&gt;
Having some solid low level knowledge won&amp;#39;t prevent this bug from
cropping up but it will give you a fighting chance at fixing it if it
does. &lt;/p&gt;
&lt;p&gt;
This particular problem probably won&amp;#39;t come up these days as integers
are MUCH larger than back in the day but I think it illustrates the
point.&lt;/p&gt;
&lt;p&gt;
Anyway, just more food for thought on how CS Education has changed
over the years, what we leave in, and what we leave out.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What They Used To Know</title>
      <link>https://cestlaz.github.io/post/what-they-used-to-know/</link>
      <pubDate>Thu, 16 Sep 2021 10:42:05 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/what-they-used-to-know/</guid>
      <description>&lt;p&gt;
I saw this tweet by Julia Evans the other day.&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;if you&amp;#39;ve
been working in computing for &amp;gt; 15 years -- are there fundamentals
that you learned &amp;quot;on the job&amp;quot; 15 years ago that you think
most people aren&amp;#39;t learning on the job today?&lt;br&gt;&lt;br&gt;(I&amp;#39;m
thinking about how for example nobody has ever paid me to write C
code)&lt;/p&gt;&amp;mdash; 🔎Julia Evans🔍 (@b0rk) &lt;a
href=&#34;https://twitter.com/b0rk/status/1435965181847343108?ref_src=twsrc%5Etfw&#34;&gt;September
9, 2021&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I&amp;#39;ve never met Julia but have been following her on Twitter and
reading her &lt;a href=&#34;https://jvns.ca/&#34;&gt;blog&lt;/a&gt; for some time now.&lt;/p&gt;
&lt;p&gt;
The tweet got me thinking. Not so much about learning on the job but
rather on how colleges prepare their students. Recent boutique majors
and concentrations notwithstanding, a degree in CS seems to have
largely stayed the same from the early/mid 1980s when I got my BA to
today. There are variations but it was and still is largely&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;programming–&amp;gt;data structures–&amp;gt;algorithms&lt;/li&gt;
&lt;li&gt;some systems or OS stuff&lt;/li&gt;
&lt;li&gt;some theory &lt;/li&gt;
&lt;li&gt;math: calc 1, calc 2, discrete, linear, maybe stats&lt;/li&gt;
&lt;li&gt;another requirement or two which might differ based on institution&lt;/li&gt;
&lt;li&gt;electives&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sure, programs have changed over the years. At one point, computer
graphics was hot. Now, not so much. Courses like compilers also used
to be required more frequently but overall things look much the
same. That said, there have been some major changes - at least from my
perspective and those changes really affected how students were
prepared for professional careers. Now of course this is only my
perspective so who knows how accurate it is. Regardless, it should be
good food for thought.&lt;/p&gt;
&lt;p&gt;
I got my BA back in the mid 80s. That was the start of the PC
generation. Colleges were starting to get computer labs full of
IBM-PCs and then  later clones. MS-DOS ruled the day. &lt;/p&gt;
&lt;p&gt;
What did that mean?&lt;/p&gt;
&lt;p&gt;
It meant that while a few years prior, students used a time sharing
system for their programming classes now they were using  an
IBM-PC with Turbo Pascal. I can&amp;#39;t say for sure but looking back, it
seemed that people educated in PC heavy programs had a weaker sense of
all those issues that come with multiple people and multiple processes
happening on a machine at the same time.&lt;/p&gt;
&lt;p&gt;
On the other hand, having a relatively simple computer - one that you
had full control over may have led to an easier time in understanding
the low level ins and outs. You could learn about low level issues on
a PC and really understand everything. That doesn&amp;#39;t seem to happen as
much nowadays when even our personal computers and computing devices
run more like those multi user computers of old than the single
process no threads IBM-PC.&lt;/p&gt;
&lt;p&gt;
There was an opportunity to recapture this right before the Arduino
got big. The Arduino was based on an Atmel processer with a small
instruction set - a platform where a student could understand
everything from wire to application. For all the good that the Arduion
and related projects have led to, they&amp;#39;ve abstracted that low level
away.&lt;/p&gt;
&lt;p&gt;
A few years later Java became a popular college CS language followed
by Python. Both of these took memory management out of the core
programming-&amp;gt;data structures-&amp;gt;algorithms sequence. Sure, you probably got to
learn a bit about memory management and related issues in your systems
classes but I have to believe you didn&amp;#39;t really own that knowledge
like you would have had you had to manage memory throughout the core
courses.&lt;/p&gt;
&lt;p&gt;
Now, I&amp;#39;m not knocking the change. Moving to Java brought some
improvements and so does moving to Python. It&amp;#39;s just that as a
language or platform giveth it also taketh away.&lt;/p&gt;
&lt;p&gt;
The interesting things here is that the changes I noticed were not
directly intended but rather byproducts of changes made for other
reasons.&lt;/p&gt;
&lt;p&gt;
A final unintended consequence I noticed also seems to be a byproduct
of the Java revolution. Years ago after many programs had adopted
Java I was talking to a friend who was a high level SE at a big NY
bank. At the time finance was NY&amp;#39;s biggest tech employer. I think
Google might have recently moved to NY but wasn&amp;#39;t yet the player
they&amp;#39;d become - this was pre-IPO days and NY tech hadn&amp;#39;t yet
exploded. My friend was lamenting after a long day of interviews. None
of his interviewees - all from top rated CS colleges could handle what
he viewed as easy algorithm questions. Questions a that were
considered close to trivial by his interviewees from a few years
back.&lt;/p&gt;
&lt;p&gt;
After some discussion, we developed a theory. It might not be true but
looking around the landscape in the months and years following that
discussion, it might hold some water. With the acceptance of Java
students were now, more frequently using library calls. The .sort
method, the built in List, Tree, Map, and Set classes and more. This
is not to say that the students hadn&amp;#39;t learned about, say, the
mergesort in their data structures or algorithms classes but rather
they didn&amp;#39;t live it. Maybe  they did a quick implementation but then
it was gone from their memories.  Back in the day, most people in my
peer group started in Pascal and frequently moved to C. Even though C
had it&amp;#39;s built in sort, we coded our own more frequently. We also
didn&amp;#39;t have easy access to all the data structure and algorithm
libraries that Java had so we rolled our own and continued to use
them. When kids who did that interviewed, they could more easily see
how an interview problem related to an algorithm they coded and
tweaked half a dozen times. On the other hand, those that saw it once
and moved to a library didn&amp;#39;t have that in depth understanding.&lt;/p&gt;
&lt;p&gt;
Now, this is not to say that it was better in the old days. When they
removed memory management, they were able to add other
topics. Likewise when students didn&amp;#39;t need to implement their own
version of everything for their class projects, instructors could
steer students towards learning other new things.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not making a judgement call on better or worse but rather that
even without formal curricular changes the strengths and weaknesses of
our CS graduates have changed over the years quite possibly as a
result of unintended consequences of a variety of decisions.&lt;/p&gt;
&lt;p&gt;
I also don&amp;#39;t this only happens in CS. Take a look at math - the big
one would probably be bringing the calculator to the classroom. The in
your face change was the idea that on the one hand, students would
become weaker in arithmetic and manual calculation. On the other hand,
time could be spent on what might be considered richer topics due to
time saved. Lost in the shuffle were topics like linear
interpolation - a useful skill taught to navigate log and trig
tables. Those skills would be forever lost.&lt;/p&gt;
&lt;p&gt;
So, there&amp;#39;s my rant and ramble inspired by Julia&amp;#39;s post.&lt;/p&gt;
&lt;p&gt;
A day after I saw the tweet I saw &lt;a href=&#34;https://jvns.ca/blog/2021/09/10/hashmaps-make-things-fast/&#34;&gt;this post&lt;/a&gt; by Julia. Unless some
shiny object distracts me I think I want to look at how the unintended
consequences from some of the changes I mentioned directly relates to
it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hunter College CS Teacher Certification - Final Project Fun Time</title>
      <link>https://cestlaz.github.io/post/teacher-cert-presentations/</link>
      <pubDate>Tue, 28 Jul 2020 10:09:25 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-presentations/</guid>
      <description>&lt;p&gt;
Well, we just delivered the last formal piece of instruction for the
summer intensive. Writing this post between visits to breakout rooms
as the cohort works on their final projects.&lt;/p&gt;
&lt;p&gt;
Tomorrow and Thursday will be presentation time. Each group will give
spend thirty minutes teaching us all about some topic in CS along with
the plan for how we could teach the topic to our kids. We&amp;#39;ve got a few
more things to talk about as a group but it&amp;#39;s mostly time to sit back
and enjoy the show.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s been a long hard month for JonAlf Topher and me. A lot of work
goes in to a first time program and when you&amp;#39;re meeting every day all
day with off hours student support there&amp;#39;s not a lot of time for the
inevitable steering that comes with something new.&lt;/p&gt;
&lt;p&gt;
Now though we can sit back and enjoy some presentations by some great
teachers and provide some meaningful feedback. We&amp;#39;ve got a nice list
of topics.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blockchain&lt;/li&gt;
&lt;li&gt;Genetic Algorithms&lt;/li&gt;
&lt;li&gt;Data Mining&lt;/li&gt;
&lt;li&gt;Machine Learning&lt;/li&gt;
&lt;li&gt;Natural Language Processing&lt;/li&gt;
&lt;li&gt;Public Key Encryption&lt;/li&gt;
&lt;li&gt;Data Visualization&lt;/li&gt;
&lt;li&gt;Classic AI - Decision Trees&lt;/li&gt;
&lt;li&gt;Classic AI - search&lt;/li&gt;
&lt;li&gt;Databases / SQL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Obviously we&amp;#39;re not going to learn everything about topics like NLP or
ML but rather a single unit that can be done in a lass.&lt;/p&gt;
&lt;p&gt;
In the end, the idea is that every cohort member will have a nice set
of topics and support materials from which to choose for their classes.&lt;/p&gt;
&lt;p&gt;
Should be a lot of fun.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hunter&#39;s CS Teacher Certification program Week 2</title>
      <link>https://cestlaz.github.io/post/teacher-cert-week-2/</link>
      <pubDate>Sun, 12 Jul 2020 10:31:53 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-week-2/</guid>
      <description>&lt;p&gt;
Time for some thoughts after week 2.&lt;/p&gt;
&lt;p&gt;
Since this is the inaugural edition of our program and there was no
way to really know what the cohort would be like we&amp;#39;ve been adjusting
on the fly. This was expected but we&amp;#39;re finally starting to settle
in. We&amp;#39;re still finding more zoom heavy days but as we move towards
the end of our data structures segment there should be fewer of those.&lt;/p&gt;
&lt;p&gt;
The cohort is progressing nicely. They&amp;#39;re working hard - we&amp;#39;ve got
some members who are former CS majors or otherwise came in with a
strong CS background but many were relative beginners. They&amp;#39;re all
coming along. We have to remind them that some topics just take
time. I&amp;#39;ve taught these subjects for years at Stuy but also at Hunter
College and NYU and recursion just takes time. So do Linked Lists and
dynamic data structures. It&amp;#39;s typical for CS majors not to be really
comfortable with them for a couple of years. I think I was near the
end of my college days before I&amp;#39;d roll out a pointer based solution to
a problem with the same comfort as with an array. So, the long and
short is that they&amp;#39;re doing great.&lt;/p&gt;
&lt;p&gt;
When we started, we tried to integrate a discussion of pedagogy with
the CS but found that we were expecting too much as the CS was new to
a large portion of the group. We decided instead to model assorted
teaching techniques but keep the analysis and discussion mostly to the
CS. Last Friday though we spent most of the morning looking back at
the pedagogy. It was a rich discussion. We loved that many of the
teachers commented on &amp;#34;when we modeled&amp;#34; one technique or another. We
ended up spending a good amount of time talking about scaffolding and
code skeletons, code reading and tracing, live coding and a bunch of
others. What was also cool was that some of the techniques we modeled
didn&amp;#39;t come up in our discussion originally (we had to interject them)
and some things we did unintentionally were also highlighted by the
cohort. &lt;/p&gt;
&lt;p&gt;
It was a fun and productive morning. &lt;/p&gt;
&lt;p&gt;
Another thing that came out of the discussion was our use of
technology but I&amp;#39;m saving that for another post. &lt;/p&gt;
&lt;p&gt;
Finally, I&amp;#39;m remembering that a month long summer intensive is, well,
intensive. It&amp;#39;s really draining. After Friday&amp;#39;s session was done and
JonAlf, Topher and I debriefed, I just crashed for the night and
pretty much took Saturday off save making one video that we&amp;#39;ll need on
Monday. It&amp;#39;s also hard on the students - 12 credits in one month. &lt;/p&gt;
&lt;p&gt;
That said, we&amp;#39;re chugging along and they&amp;#39;re doing great. More
confident than ever that we&amp;#39;re going to have a 21 new leaders in CS Ed
in NY come the program&amp;#39;s conclusion.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hunter&#39;s CS Teacher Certification program  Week 1</title>
      <link>https://cestlaz.github.io/post/teacher-cert-week-1/</link>
      <pubDate>Thu, 02 Jul 2020 13:48:21 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-week-1/</guid>
      <description>&lt;p&gt;
Time for an update on our NY State Teacher Certification Program. &lt;/p&gt;
&lt;p&gt;
We kicked off on Monday. Twenty two students working with three
instructors from 9:00 - 3:00 every day. We&amp;#39;ve been using a combination
of synchronous with Zoom and async using Slack and GitHub
discussions. We&amp;#39;re using GitHub as our main platform.&lt;/p&gt;
&lt;p&gt;
Day 0 was very Zoom heavy but we&amp;#39;re trying to balance one big Zoom
session a day combined with other work so as to minimize fatigue. &lt;/p&gt;
&lt;p&gt;
Due to our time constraints we had some prework before we officially
started. We had to debrief on that at the start and then also had to
deliver new instruction and all that made for a rough first day. &lt;/p&gt;
&lt;p&gt;
Things got better in day 1. We were able to do one zoom session in the
morning to set the stage on 2D arrays and were able to work more
independently with slack support in the afternoon.&lt;/p&gt;
&lt;p&gt;
On Day 2 I finally got to teach as I had been running a &lt;a href=&#34;https://cestlaz.github.io/post/teaching-cs-in-all-the-grades/&#34;&gt;Computational
Thinking&lt;/a&gt; workshop during days 0 and 1. I led the morning session on
Conway&amp;#39;s Game of Life which led to a coding project in the afternoon. &lt;/p&gt;
&lt;p&gt;
Today we flipped the script doing self directed work in the morning
and then got together to go over objects and classes in the afternoon.&lt;/p&gt;
&lt;p&gt;
While there&amp;#39;s more to tweak I&amp;#39;m very happy with how things are
going. We have a great cohort. In addition to supporting each other in
class they&amp;#39;ve started to organize their own study groups and sessions
both off hours and during our independant work. I haven&amp;#39;t said
anything about this nor have I intruded as I think it&amp;#39;s healthy for
the cohort to have their own self directed space. I&amp;#39;m glad it&amp;#39;s
happening without me having to prod behind the scenes.&lt;/p&gt;
&lt;p&gt;
While I&amp;#39;m very happy with how it&amp;#39;s gone so far there are some areas of
concern. Since this is a new program with an unknown cohort we&amp;#39;re
figuring out a lot on the fly. We&amp;#39;re doing better on the format and
pacing of activities but I feel we can still do better. With this in
mind we&amp;#39;re all having an online discussion throughout the weekend
about how to adjust and by we I mean the entire cohort and all the
instructors. If you&amp;#39;ve got a cohort of 22 experienced teachers you&amp;#39;re
foolish not to exploit their expertise. I&amp;#39;m also a little concerned
about the methods component. We&amp;#39;re already integrating some things -
live coding and subgoal labeling for example but some of the methods I
wanted to cover just don&amp;#39;t fit well in a remote model and we also have
to be careful about not overloading the teachers while many are just
learning the CS.&lt;/p&gt;
&lt;p&gt;
Next week we&amp;#39;ll start getting into data structures. We&amp;#39;ve got four
more weeks but we&amp;#39;re well on our way.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Education is not a spectator sport</title>
      <link>https://cestlaz.github.io/post/education-not-spec-sport/</link>
      <pubDate>Fri, 17 Jan 2020 08:07:26 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/education-not-spec-sport/</guid>
      <description>&lt;p&gt;
As many of you know, the CS Education programs I designed here at
Hunter were finally approved by NY State late last year. We&amp;#39;re
planning to get started this summer. I&amp;#39;ve received many questions
about the program and will write up the details here sooner or later
but one question I frequently get is &amp;#34;will it be offered online?&amp;#34; This
is also something I&amp;#39;ve been asked more than once internal to Hunter.&lt;/p&gt;
&lt;p&gt;
Some of these requests make sense - we&amp;#39;re in the heart of NYC so
someone out on Long Island or further afield upstate won&amp;#39;t be able to
take our courses in person. This is the advantage of online
education. You can partake, or probably more often, consume it from
anywhere. Leaving out completion rates, that makes things very
attractive. Online is also very popular with bean counters. With it
you can set up practically unlimited class sizes. Lots of potential
profits. &lt;/p&gt;
&lt;p&gt;
On the other hand, is it better?&lt;/p&gt;
&lt;p&gt;
While there are certainly many things you can learn online, is it the
same? Some argue that if a professor is straight out lecturing you
might as well watch the video. Probably true but is a dynamic
professor lecturing online the same as in person?&lt;/p&gt;
&lt;p&gt;
Is a recorded concert the same as attending live? What about a
Broadway show? Sporting event?&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll listen to music at home, watch a ballgame or even a recording of
a live show but it isn&amp;#39;t the same. Even when presenter-audience
interaction and audience-audience interaction is at a minimum - say a
classical concert, the live experience is both different, superior,
and more memorable than the memorex.&lt;/p&gt;
&lt;p&gt;
Now, there&amp;#39;s certainly value added by augmenting classes with online
content but all too often it&amp;#39;s used for cost cutting or profit
making. See &lt;a href=&#34;https://dianeravitch.net/2019/07/18/oklahoma-legislator-questions-why-state-is-giving-millions-to-virtual-charter-school/&#34;&gt;Virtual&lt;/a&gt; or &lt;a href=&#34;https://dianeravitch.net/2019/08/14/ohio-gets-another-virtual-charter-school/&#34;&gt;Cyber&lt;/a&gt; Charter schools for details.&lt;/p&gt;
&lt;p&gt;
At the end of the day education is not a spectator sport.&lt;/p&gt;
&lt;p&gt;
 It&amp;#39;s built on the relationship between student, teacher, and
classmates. You can get some of that online and online is great when
there are truly no other alternatives. If we can ever figure out
&lt;a href=&#34;https://cestlaz.github.io/post/communicating-with_students/&#34;&gt;online engagement&lt;/a&gt;, then technology will be even better at augmenting
(not replacing) good, live instruction. I&amp;#39;m certainly going to look
into offering parts of my classes remotely specifically for people
outside of NY City but we&amp;#39;re a long way from remote education being
even close to as good as in person.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Predicting Grades</title>
      <link>https://cestlaz.github.io/post/predicting-grades/</link>
      <pubDate>Sat, 18 May 2019 12:03:10 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/predicting-grades/</guid>
      <description>&lt;p&gt;
Just saw this:&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Evaluation
metric idea: take snapshots of students&amp;#39; grades each week
(specifically, the grade they actually see in your LMS). How well do
these correlate with your final assigned grade? Were students getting
good estimates?&lt;/p&gt;&amp;mdash; Austin Cory Bart (@AustinCorgiBart) &lt;a
href=&#34;https://twitter.com/AustinCorgiBart/status/1129743671639838720?ref_src=twsrc%5Etfw&#34;&gt;May
18, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
It made me think of a couple of conversations I had with more senior
teachers early in my career.&lt;/p&gt;
&lt;p&gt;
They&amp;#39;d tell me &amp;#34;by and large, you know what the kids are going to get
after a few week.&amp;#34; By and large they were right. Sure there were some
kids that would turn it on midway and raise end up earning a higher
grade and some who fell off a cliff but for the most part, you knew
pretty early. &lt;/p&gt;
&lt;p&gt;
This doesn&amp;#39;t mean that you don&amp;#39;t need assessments along the way - both
to inform the student on how they&amp;#39;re doing and to inform both teacher
and student on how to best proceed in order to benefit the student. Of
course, sometimes, even when you present some students will their dire
situations they can remain in denial for a remarkable period of time.&lt;/p&gt;
&lt;p&gt;
At Stuy, the standing grading policy was 2 full period exams each marking
period - this meant at least 6 a semester. Add to that a final which
usually counted as two tests and we had more than enough to drop the
lowest grade - a practice followed by many teachers. Depending on
subject you&amp;#39;d also add in papers, projects, quizes, Homework,
participation and anything else you&amp;#39;d like weighted in a variety of ways.&lt;/p&gt;
&lt;p&gt;
As an interesting aside, I was able to evaluate my senior classes at Stuy
entirely on projects - no tests but not my sophomore classes. Stuy
students were so conditioned on exams that they really needed them to
keep themselves honest. It took time to ween them off. &lt;/p&gt;
&lt;p&gt;
I started at Seward Park High School and that school had a similar policy. &lt;/p&gt;
&lt;p&gt;
In any event, those teachers that told me that you&amp;#39;d know the final
grades early on were pretty spot on. A number of times I tried an
experiment - for final grades, I&amp;#39;d first write down what I thought the
grades would be and then I ran all the assessments through the
weighted average formula. The &amp;#34;guesses&amp;#34; were almost always pretty spot
on.  I also compared the final grades to the second marking period
grades. I chose the second because the first marking period grades
were just letters - E for excellent, S satisfactory, N needs
improvement, and U. There was some movement but it was more from my
grading up or down due to the amrking period rather than a real
change. I would grade down in the second marking period and up in the
third.  &lt;/p&gt;
&lt;p&gt;
This isn&amp;#39;t to say that Cory&amp;#39;s suggestion doesn&amp;#39;t make sense and it
also doesn&amp;#39;t mean that I or other teachers are fabulous estimators -
for all I know, I was biasing some subjective students grades based on
some preconceived notion I wasn&amp;#39;t aware of making the final grade a
self fulfilling prophecy. &lt;/p&gt;
&lt;p&gt;
In any event, I was able to do this when I was teaching in high school
but not so far in college. Maybe it&amp;#39;s because I&amp;#39;ve only been at Hunter
for three years and I developed my high school chops over
decades. Maybe it&amp;#39;s because I have far less contact time with the
students - 2 days a week for an hour fifteen vs five days a week for
43 minutes a shot. It could be that there were more opportunities for
assessment in high school due to more contact time. I&amp;#39;m really not
sure. Something to ponder further.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Thoughts On Code And Beyond - Computational Thinking</title>
      <link>https://cestlaz.github.io/post/thoughts-on-code-and-beyond-ct/</link>
      <pubDate>Mon, 14 Jan 2019 17:48:27 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/thoughts-on-code-and-beyond-ct/</guid>
      <description>&lt;p&gt;
The theme of this year&amp;#39;s &lt;a href=&#34;https://twitter.com/i/moments/1084877641285541889&#34;&gt;To Code and Beyond&lt;/a&gt; was Computational
Thinking. &lt;a href=&#34;https://twitter.com/guzdial&#34;&gt;Mark Guzdial&lt;/a&gt; gave the keynote. While the talk isn&amp;#39;t
currently online, check out &lt;a href=&#34;https://www.youtube.com/watch?v=N3uCb-95fFE&amp;amp;t=5s&#34;&gt;this talk&lt;/a&gt; that Mark gave last March. It&amp;#39;s
not the same but the second halves are and well worth a look.&lt;/p&gt;
&lt;p&gt;
In the first half, Mark talked about other types of &amp;#34;thinking.&amp;#34;
Scientific thinking, engineering thinking and even historical
thinking. All had a good amount of overlap with both each other and
with computational thinking even as we haven&amp;#39;t yet settled on what
computational thinking actually is.&lt;/p&gt;
&lt;p&gt;
This overlap is why I think that bringing CS into the primary grades
gives us an opportunity to reduce the achievement gap between rich and
poor. &lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve already said that I&amp;#39;m not sold on hardcore CS and programming in
the early grades but rather it&amp;#39;s CT - the problem solving and
methodologies of CS that can effectively be part of the earlier
grades.&lt;/p&gt;
&lt;p&gt;
Of course, that&amp;#39;s easier said than done. While there has been some
pushback recently we still have far too much emphasis on standardized
tests and elementary school teachers are way overworked. Trying to get
already overburdened teachers to add in a whole new subject area is a
big ask. The opportunity is that we might be able to develop aspects
of CT in a way that supports what elementary teachers are already
doing, possibly under the unlabeled guise of scientific thinking,
historical thinking, engineering thinking or some other thinking.&lt;/p&gt;
&lt;p&gt;
This is already going on to a certain extent with individual teachers
at individual schools. Logic games and problem solving techniques have
always been explored by elementary school teachers who have freedom
from tightly packed test based curricula. These could be considered CT
and you could also add data collection and processing and I&amp;#39;m sure
many other things as well. This is where CS/CT can fit in the
elementary schools without adding to the teacher&amp;#39;s current
load. What&amp;#39;s more, if we can figure out how to incorporate these CT
concepts to support the subject matter already being studied we could
help close the gap between the haves and the have nots.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve said many times before that I&amp;#39;m not an elementary school
specialist but I still suspect this is the approach for CS in the
primary grades at least for the near term. &lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve already got a pretty full plate between my work with Hunters
Daedalus CS honors program along with our pre-service programs being
very close to going live but I&amp;#39;m also hoping to do some work in
relating to this in the near future.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Is There a First Grade Machine Learning Achievement Gap?</title>
      <link>https://cestlaz.github.io/post/is-there-a-first-grade-ml-achievement-gap/</link>
      <pubDate>Fri, 11 Jan 2019 15:24:16 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/is-there-a-first-grade-ml-achievement-gap/</guid>
      <description>&lt;p&gt;
Today was the fifth &amp;#34;To Code and Beyond&amp;#34; - a one day conference
hosted at Cornell Technion and once again Diane Levitt put together
a great show. The theme was Computational Thinking and the day
consisted of a variety of talks, panels, and activities. I plan on
writing about one panel in particular but for today I wanted to
address something that came up as a question. One attendee asked a
panel about the achievement gap - the fact that when the CS movement got
started in NY some of the more innovative and interesting work was
being done with some of our most vulnerable students. Recently, he
heard about a student who was doing Machine Learning in early
elementary school - first grade. The concern
he had was that when we started the less affluent populations might
have even been pulling ahead but now he&amp;#39;s concerned that the gap
between have and have nots will continue to grow even in this new
field.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not so concerned about the ML gap in the early grades and I
still think that we still have an opportunity to lessen the gap
between the haves and have nots with CS and more specifically CT.&lt;/p&gt;
&lt;p&gt;
I was reminded about when I started fencing. I first picked up a foil
in 11th grade. Stuy had a senior heavy team that year. I was the only
new junior and there were a bunch of new sophomores. The following
year, we were the starting lineup. We were raw but we still managed
second place in the city. Most of us continued on to fence in USFA
events and then in college. I remember one of the first events we went
to. It was the under 20 qualifiers for the Junior Olympics National
Championships. There were a couple of superstars who recently came
over from eastern bloc countries there. Also a bunch of
fencers we didn&amp;#39;t know but we knew that they&amp;#39;d been fencing for
years - since they were 8, 9, 10. &amp;#34;They&amp;#39;ve been fencing for
years. We&amp;#39;ve only been doing it for one. How can we ever compete?&amp;#34;
I remember Jordan saying &amp;#34;Yeah, they&amp;#39;ve fenced for years but probably
a day or two a week, we&amp;#39;ve been doing it intensely every day for a
year and a half.&amp;#34; He also noted that when they were in their early
years their bodies probably weren&amp;#39;t coordinated enough to really
develop so much. He was right. The superstars dominated but then we
were very much in the mix and in fact took most of the qualifying
spots. &lt;/p&gt;
&lt;p&gt;
I also thought about teaching CS at Stuy. There were always kid who
came in to class with prior experience. That was clear on day one and
for the first few weeks. By the end of the first semester you woudn&amp;#39;t
know it based on overall class performance. The newcomers caught up
pretty quickly. &lt;/p&gt;
&lt;p&gt;
This is why I&amp;#39; not really concerned when I hear about a school doing
Machine Learning in first grade. How much can they really do and how
deep is it? Is the kid even really ready for it or are they just going
through the motions? Or, are they just doing something they&amp;#39;ve always
done in first grade and are just labelling it ML.&lt;/p&gt;
&lt;p&gt;
I think that last option is fairly likely. It&amp;#39;s also why I think we
still have an opportunity to close the achievement gap as part of the
CS / CT movement. &lt;/p&gt;
&lt;p&gt;
When people ask me about CS in the early grades I first tell them that
I&amp;#39;m not an early grade specialist. I follow this by stating that I
think that well resourced schools have been doing thing that we now
consider CT for years - logic, problem solving, puzzles, etc.When a
group of students solve a problem and describe a solution that
includes repetition it used to be just problem solving. Now it&amp;#39;s
computation thinking. Sure, we can tease it out, formalize it and
expand on it but the schools and teachers with the resources and
freedom have already been doing this. &lt;/p&gt;
&lt;p&gt;
With the CS For All movement, we have an opportunity to bring this to
all our students not just the well to do ones.&lt;/p&gt;
&lt;p&gt;
Of course this is easier said than done. We have to prepare them to
identify these CT practices and actively develop these skills in their
students. This means giving teachers the time, resources, and training
and not shorten the already tight tether to standardized multiple
choice tests. &lt;/p&gt;
&lt;p&gt;
At times I&amp;#39;ve been disappointed with the overall K12 CS Ed
movement. We&amp;#39;ve made great strides coming from nowhere to where we are
but as a community we missed the opportunity to bypass the mistakes
and bad ideas that teachers of other disciplines are plagued with. 
We still have this chance with Computational Thinking and the early
grades.&lt;/p&gt;
&lt;p&gt;
I hope we do it right.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Happy New Year 2019</title>
      <link>https://cestlaz.github.io/post/new-year-2019/</link>
      <pubDate>Tue, 01 Jan 2019 09:55:01 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/new-year-2019/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve never been much of a New Years person. I get up really early and
so don&amp;#39;t usually stay up late and more to the point, as any teacher
knows, the year really goes from September through June with that
really long much needed  weekend that you regular folks call July and
August tacked on to separate years.&lt;/p&gt;
&lt;p&gt;
This whole January first thing is really more  of a half time break or
perhaps an intermission.&lt;/p&gt;
&lt;p&gt;
Regardless, I did start the calendar year productively - it was
warm enough for a run and on my way back got my first &lt;a href=&#34;https://www.citibikenyc.com/bikeangels/&#34;&gt;Bike Angel&lt;/a&gt; point
of the month and year.&lt;/p&gt;
&lt;p&gt;
Since I see January 1 as more of a mid year point than a start, I&amp;#39;m
not going to reflect back on what was or project what will be but I do
have a few projects that I want to make some headway on before classes
resum in a few weeks.&lt;/p&gt;
&lt;p&gt;
First and foremost, I&amp;#39;m teaching Data Structures for the first time at
Hunter. Sure, I&amp;#39;ve taught it dozens of times but this will be
different. I haven&amp;#39;t done it in C++ since 2003 and teaching it in
college twice a week Mon/Thu for about 1:15 is not the same as high
school where we meet every day for 0:43. I&amp;#39;ve already been boning up
on my C++. Templates are much more of a pain than I remember them and
I still much prefer toString to operator overloading. I think once
I&amp;#39;ve written some more code and am back up to speed I&amp;#39;ll have a lot of
fun with the class.&lt;/p&gt;
&lt;p&gt;
The other big project is that I want to make some progress on an
&lt;a href=&#34;https://cestlaz.github.io/posts/time-to-create-an-ethics-course/&#34;&gt;Ethics course&lt;/a&gt; that I want to have as part of my soon to be approved (I
hope) pre-service programs. I also want to make it available to
undergrads. I&amp;#39;ve been collecting thoughts and ideas for a couple of
months now and while I still believe that ethics is too important to
just be contained within a course - it must be woven through all our
courses, I do think I&amp;#39;ve got an overall plan that will result in a
very solid course.&lt;/p&gt;
&lt;p&gt;
There are a couple of other projects I&amp;#39;m working on that I Can&amp;#39;t talk
about right now but I have no doubt I&amp;#39;ll be keeping myself busy.&lt;/p&gt;
&lt;p&gt;
So to all the teachers out there, Happy Half Time and to everyone
else, Happy New Year.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sloan awards for excellence in teaching science and mathematics</title>
      <link>https://cestlaz.github.io/post/sloan-awards-2018/</link>
      <pubDate>Wed, 12 Dec 2018 12:52:44 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/sloan-awards-2018/</guid>
      <description>&lt;p&gt;
I spent yesterday evening at the Cooper Union in their &lt;a href=&#34;https://en.wikipedia.org/wiki/Cooper_Union#The_Foundation_Building&amp;#39;s_Great_Hall&#34;&gt;Great
Hall&lt;/a&gt;, a place famous for Abraham Lincoln&amp;#39;s &lt;a href=&#34;https://en.wikipedia.org/wiki/Cooper_Union_speech#External_links&#34;&gt;speech&lt;/a&gt; that some say
propelled him to the presidency.&lt;/p&gt;
&lt;p&gt;
I was there in the audience watching as the Sloan Foundation and the
Fund for the City of New York awarded seven public school teachers
with an ward for &amp;#34;Excellence in the Teaching of Science and
Mathematics.&amp;#34;&lt;/p&gt;
&lt;p&gt;
I was their to see my friend Dave Deutsch, a long time public school
physics teacher receive the honor. Here&amp;#39;s a brief clip about Dave:&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe src=&amp;#34;&lt;a href=&#34;https://player.vimeo.com/video/304871223&#34;&gt;https://player.vimeo.com/video/304871223&lt;/a&gt;&amp;#34; width=&amp;#34;640&amp;#34;
height=&amp;#34;360&amp;#34; frameborder=&amp;#34;0&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/p&gt;
&lt;p&gt;
You can read Dave&amp;#39;s blurb as well as blurbs and videos for all of the
recipients &lt;a href=&#34;https://www.fcny.org/fcny/core/sae/2018_winners/#david-deutsch&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve never taught with Dave but I&amp;#39;ve known him for a couple of decades
and he&amp;#39;s a teacher&amp;#39;s teacher. He and Devorah cut their teeth teaching
together at the Manhattan Center for Science and Math. Dave&amp;#39;s still
there. &lt;/p&gt;
&lt;p&gt;
Dave&amp;#39;s also not the guy that normally gets awards. It&amp;#39;s not because he
doesn&amp;#39;t deserve them - he&amp;#39;s probably the best physics / science
teacher I know. It&amp;#39;s that he never toots his own horn, he&amp;#39;s not the
over the top super charismatic popular teacher who seems great in the
moment but in the long run might not be, and he never looks for the
spotlight. He just goes about his business of connecting, inspiring,
and truly caring about his kids. His value as an educator can be seen
not only in the short term in his classes but in the long run through
his former students.&lt;/p&gt;
&lt;p&gt;
He&amp;#39;s the best.&lt;/p&gt;
&lt;p&gt;
Over the years I tried to pull Dave over to Stuy or involve him in
other projects but he&amp;#39;s always stayed true to Manhattan Center and
it&amp;#39;s population even with the school&amp;#39;s toxic administration (it&amp;#39;s
worth noting that Dave&amp;#39;s video is the only one that didn&amp;#39;t include the
school&amp;#39;s principal lauding the recipient and was the only principal
not present at the festivities).&lt;/p&gt;
&lt;p&gt;
In any event, Dave&amp;#39;s a true champion for the public school students of
NYC and a true hero. There are a small handful of teachers that I
really look up to and Dave Deutsch is one of them.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s to Dave and other teachers who never get the recognition they
deserve because they&amp;#39;re too busy doing the good work rather than self
promoting.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Email Policy</title>
      <link>https://cestlaz.github.io/post/email-policy/</link>
      <pubDate>Sat, 01 Dec 2018 19:36:37 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/email-policy/</guid>
      <description>&lt;p&gt;
I saw this tweet the day along with the ensuing thread:&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Seriously, who emails a professor with words like &amp;quot;u&amp;quot; and &amp;quot;plz hlp&amp;quot;? Am I allowed to put language in my syllabus that penalizes students for obnoxious, intentional misspellings? Maybe: -1% to your course grade multiplied by the edit distance of the word with its correction?&lt;/p&gt;&amp;mdash; Austin Cory Bart (@AustinCorgiBart) &lt;a href=&#34;https://twitter.com/AustinCorgiBart/status/1068386945854779392?ref_src=twsrc%5Etfw&#34;&gt;November 30, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I wanted to reply but as usual, I decided to reply in a blog post so
that it doesn&amp;#39;t get lost in the Twitterverse. This way I can go back
and read this post in five years and say &amp;#34;what was I thinking!!!!&amp;#34;&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve never gotten an email like the one Austin described. The closest
was back in the early days of email when kids had email addresses like
 &lt;strong&gt;koolwarezduud@hotmailcom&lt;/strong&gt;. That didn&amp;#39;t last long. Just ask what
they would think if they were a college admissions person or an
interviewer for a job and recieved an email from &lt;strong&gt;koolwarezdude&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;
That said, even though I haven&amp;#39;t gotten emails with &amp;#34;u&amp;#34; or &amp;#34;plz hlp&amp;#34; I
do have to train my students to use email correctly so there might be
some parallels between my case and experiences and Austin&amp;#39;s.&lt;/p&gt;
&lt;p&gt;
For years I&amp;#39;ve used a mailing list for class communication. I&amp;#39;ve tried
alternatives like Slack and Piazza but always come back to an old
school mailing list. For years I used &lt;a href=&#34;http://www.list.org/&#34;&gt;Mailman&lt;/a&gt; but most recently I&amp;#39;ve
been using Google Groups. I always give my students the rules at the
beginning of the class:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The list can be used for anything related to class or CS.&lt;/li&gt;
&lt;li&gt;Things that are interesting to the community but not class or CS
related are also OK. Things like if a student is on a team that has
a big competition coming up or that there are free or cheap tickets
to a show or museum are also ok.&lt;/li&gt;
&lt;li&gt;The usual rules for civility and respect.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It&amp;#39;s all pretty low key, informal and open.&lt;/p&gt;
&lt;p&gt;
The big thing I tell them is that the &lt;strong&gt;only things&lt;/strong&gt; they should email
me directly about are things that are specific to the sender and
me. Things like grade related questions, a request for a
recommendation letter etc.. If it&amp;#39;s a question about the class
material, the tools, etc. I expect the email to go to the list not
me. I give three reasons for this&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Other class members could benefit from the question and answers.&lt;/li&gt;
&lt;li&gt;If you email me only I can answer the question and only when I get
  to it. If you email the list, there are many more people who can
  potentially answer.&lt;/li&gt;
&lt;li&gt;If it&amp;#39;s a tools question, particularly Mac related It&amp;#39;s unlikely
I&amp;#39;ll know the answer but almost certainly someone in the class
will,&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I tell my classes that if they email me directly with something that
should go to the mailing list, I&amp;#39;ll ignore the email.&lt;/p&gt;
&lt;p&gt;
Predictably, at first students email me directly. The first couple of
times, I&amp;#39;ll answer the question by emailing the full list. I&amp;#39;ll say
something like &amp;#34;someone emailed me &lt;span style=&#34;text-decoration: underline;&#34;&gt;&lt;span style=&#34;text-decoration: underline;&#34;&gt;__&lt;/span&gt;&lt;/span&gt;&amp;#34; give the answer  and also
remind them that emails like that should go to the list.&lt;/p&gt;
&lt;p&gt;
This usually clears things up for most of the students but some will
continue to email me. My next step is to reply to their email telling
them to repost to the group. If they do, I&amp;#39;ll answer (usually giving a
bit of time to hope that a classmate chimes in first). If they don&amp;#39;t
then the question won&amp;#39;t get a response.&lt;/p&gt;
&lt;p&gt;
Any emails that come directly to me after phase 2 go into the trash.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll also sometimes redirect questions I get after class to the
mailing list. Particularly if I think that the answer can benefit more
than the asking student or if the answer should remain accessible for a
longer period of time. This came up just the other day when a student
had an issue with their editor saving source files in RTF. I didn&amp;#39;t
have the answer and I also thought that the answer to this would be a
good thing for more students to see and also for the answer to be
searchable should it come up later. The student posted to the list and
another one of the students answered. &lt;/p&gt;
&lt;p&gt;
All in all I think this works pretty well.&lt;/p&gt;
&lt;p&gt;
Now if only I could get more actual student engagement online…&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>