<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>curriculum on C&#39;est la Z</title>
    <link>https://cestlaz.github.io/categories/curriculum/</link>
    <description>C&#39;est la Z (curriculum)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 Jan 2022 07:14:35 -0400</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/categories/curriculum/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>What is a Syllabus and why does it matter?</title>
      <link>https://cestlaz.github.io/post/whats-a-syllabus/</link>
      <pubDate>Fri, 14 Jan 2022 07:14:35 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/whats-a-syllabus/</guid>
      <description>&lt;p&gt;
Over in the Facebook CS Ed groups there was a discussion of the
forthcoming code.org APCS-A curriculum. As far as I can tell, the
curriculum isn&amp;#39;t actually available yet so I can&amp;#39;t really comment on it
but the discussion started with a concern about some of the
announcement. It made me think of what a curriculum was when I started
teaching, what it is now, and the ramifications of the change.&lt;/p&gt;
&lt;p&gt;
Back when I started, I might get a math curriculum, a section of which
might have looked like this:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Day&lt;/th&gt;
&lt;th&gt;Topic&lt;/th&gt;
&lt;th&gt;Chapters&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;5,6&lt;/td&gt;
&lt;td&gt;solving simple linear equations&lt;/td&gt;
&lt;td&gt;3.1 - 3.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;solving more complex linear equations&lt;/td&gt;
&lt;td&gt;3.5, 3.6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8-10&lt;/td&gt;
&lt;td&gt;graphing linear equations&lt;/td&gt;
&lt;td&gt;4.1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
etc.&lt;/p&gt;
&lt;p&gt;
That was it. As a teacher, you knew the topic. If you had to get an
idea as to the depth of which to cover you looked at the text and
other resources you had in school and consulted with your
colleagues. You knew yourself, your school and your students and you designed
lessons to suit.&lt;/p&gt;
&lt;p&gt;
This is a far cry from what you&amp;#39;ll see today. Going back to the
forthcoming code.org apcs-a curriculum.  &lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the blurb that code.org provides:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CSA curricula have traditionally been focused on the building blocks
required to design solutions to problems through programming. Creating
this new curriculum with equity in mind means reimagining the
structure and pedagogy to excite and inspire students from
underrepresented racial and ethnic groups and young women while
teaching the technical building blocks and preparing students for the
AP® exam. Code.org’s CSA curriculum:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Incorporates culturally responsive and equitable teaching strategies
and frameworks by considering cultural references and learning styles
throughout the curriculum — from the vocabulary, to the visuals, to
the sequence of concepts taught.&lt;/li&gt;
&lt;li&gt;Acknowledges diversity of experiences and interests. Students
investigate real-world problems during class activities and make
connections to their own work. Projects are carefully designed to be
instructive yet open-ended, enabling students to demonstrate mastery
of concepts and engage in their passions without making assumptions
about their cultural background or life experiences.&lt;/li&gt;
&lt;li&gt;Brings to life a “Software Engineering for All” narrative. This
narrative helps students envision themselves as software engineers,
and the curriculum uses videos featuring presenters from different
backgrounds who work in technology to help students visualize
opportunities for their own futures.&lt;/li&gt;
&lt;li&gt;Helps students develop and model valuable, real-world career
skills. In addition to skills like tracing code segments and
documenting code, Code.org’s approach to CSA incorporates
collaboration and career skills that go beyond the AP® CSA course
requirements. For example, our curriculum includes a student-friendly
code review tool, which is a common quality assurance practice in the
technology industry.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There&amp;#39;s nothing inherently wrong with any of this but it is worth
noting that the APCS-A class is indeed a course concerned with &amp;#34;building blocks
required to design solutions to problems through programming.&amp;#34; It is
based on a college CS1 class which is all about programming to solve
problems. Like it or not, that&amp;#39;s the course.&lt;/p&gt;
&lt;p&gt;
Now, having a culturally responsive course etc. etc. is all good and I
guess that since APCS-A is usually implemented a full year course to
cover a half year of college material there should, in theory, be room
for all the additions but that&amp;#39;s not really here nor there.&lt;/p&gt;
&lt;p&gt;
The thing is, APCS-A is supposed to be about programming. A well
taught APCS-A will be culturally responsive etc. but that&amp;#39;s the
implementation. Unless something changed, that&amp;#39;s not actually in the
course as defined by the college board or the college classes on which
it&amp;#39;s based.&lt;/p&gt;
&lt;p&gt;
This says to me that when code.org publishes its curriculum, it will
most likely resemble the products pushed by most modern curriculum
providers - really not just a curriculum but a collection of very
detailed units and lessons.&lt;/p&gt;
&lt;p&gt;
Now, I do think that some of the things mentioned in the
code.org blurb like collaboration, software engineering, and other
topics like ethical ramifications &lt;strong&gt;should&lt;/strong&gt; be in curricula but even
so, the exact lessons should be teacher designed and tuned to their
school and students. &lt;/p&gt;
&lt;p&gt;
Again, nothing wrong with any of this. It can be a great and valuable resource,
particularly for an inexperienced teacher.&lt;/p&gt;
&lt;p&gt;
But then, there is something wrong overall and it&amp;#39;s with the direction
those with influence are taking as a profession. &lt;/p&gt;
&lt;p&gt;
Teachers are less and less expected as much to know their subjects, their
students, and how to teach but rather to follow the script. This
approach might get those students past the standardized exam but in
the long run it&amp;#39;s not giving students what they need nor deserve.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve seen this every year in my undergraduate CS classes. Since APCS
Principles was launched many of my students have come in having taken
the classed and &amp;#34;passed&amp;#34; the exam. Truth be told, the majority of them
come in basically knowing nothing. This wouldn&amp;#39;t be a problem if they
didn&amp;#39;t come in thinking they knew quite a bit.  You can contrast that
with the students that come in having taken APCS-A. These students, by
and large, do indeed have a reasonably solid introduction to
programming under their belts. Further investigation usually reveals
what &amp;#34;curriculum&amp;#34; they learned under and the CS background of the
teacher.&lt;/p&gt;
&lt;p&gt;
Some will argue that we need the crutch of the scripted lesson in
order to get started. Fair enough. I don&amp;#39;t disagree with this basic
premise but the truth is that history seems to indicate that we&amp;#39;re not
going to get beyond this. My favorite example is the old Cisco
networking class. Some teachers knew legit networks and decided to
teach the class - that was great. Some didn&amp;#39;t and just had their
students use the Cisco provided computer based modules which, in my
opinion, weren&amp;#39;t so great. Of those that didn&amp;#39;t start with a
networking background, just about all I&amp;#39;ve met never moved beyond
where they started in networking knowledge.&lt;/p&gt;
&lt;p&gt;
I fear we&amp;#39;re already seeing that in CS. School supervisors don&amp;#39;t know
any better so they see that they can check off the computer science
box. Many teachers probably don&amp;#39;t know better because their short term
training is focusing on how easy CS is and how you don&amp;#39;t have to learn
anything to teach it rather than the truth - it&amp;#39;s just like anything
else, it takes time and effort to really master. &lt;/p&gt;
&lt;p&gt;
I already know that my view isn&amp;#39;t the popular one but I&amp;#39;ll say it over
and over until I retire - CS teachers really do need to know CS and
providers that provide short form &amp;#34;training&amp;#34; and scripted content,
unless they push with even more vigor, the next steps, are ultimately
going leave us in no better shape than we started. Kids in well to do
schools with administrations that can afford to bring in knowledgeable
experts and the gap will widen with the poorest getting the low
end scripted curricula.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teaching non required topics - the command line</title>
      <link>https://cestlaz.github.io/post/non-required-topics/</link>
      <pubDate>Fri, 08 Oct 2021 08:56:11 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/non-required-topics/</guid>
      <description>&lt;p&gt;
The other day I saw Allen Holub lamenting on how students don&amp;#39;t learn
the command line.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;All my students this semester have gone through at least a year of programming classes, and some of them do not know how to do even basic stuff on the command-line. This strikes me as a huge flaw in the curriculum. Maybe the first CS class should be How Devs Use Computers 101.&lt;/p&gt;&amp;mdash; Allen Holub (@allenholub) &lt;a href=&#34;https://twitter.com/allenholub/status/1444393138492116992?ref_src=twsrc%5Etfw&#34;&gt;October 2, 2021&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
This reminded  me of the recent article and
discussion on how students &lt;a href=&#34;https://www.pcgamer.com/students-dont-know-what-files-and-folders-are-professors-say/&#34;&gt;don&amp;#39;t know what files and folders are&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;
Neither of these are surprising. Back in the day, computer science
classes were populated with self selecting stereotypes and in order to
get anything done you had to be familiar with your tools.&lt;/p&gt;
&lt;p&gt;
I wrote about this &lt;a href=&#34;https://cestlaz.github.io/posts/2015-01-15-kids-know-nuttin/&#34;&gt;years ago&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;
Nowadays, CS is trying to be more open and inviting and with more
modern tools you no longer need to know about files
and folders let alone a Unix command line.  Back in the day, even if
you used a program like Microsoft Word you&amp;#39;d have some idea of a file
folder structure but now with the cloud and tools like Google Docs you
just search for your documents.&lt;/p&gt;
&lt;p&gt;
The issue is that many CS teachers want students to know the command
line but it&amp;#39;s not part of the formal curriculum. What&amp;#39;s more, the
value of command line expertise is debatable and pretty hard to assess.&lt;/p&gt;
&lt;p&gt;
Personally, I&amp;#39;m a big command line wonk. I think you gain tremendous
power and flexibility if you use it but I also recognize that there
are many career tech professionals, particularly these days that will
never use it and arguably won&amp;#39;t really benefit from it. They live in
their IDE that supports their language. It integrates with their
build, test, and debugging tools and their company&amp;#39;s commuication
platform is also right there on the side. Now, many people in tech
could still benefit from command line expertise but try convincing a
first or second year undergrad where they not only don&amp;#39;t see added
value but also see that a large chunk of the text world also doesn&amp;#39;t
see the value.&lt;/p&gt;
&lt;p&gt;
So, if you do believe that the command line is important and want
students to learn it, how do you do it?&lt;/p&gt;
&lt;p&gt;
There are plenty of tutorials, videos and other learning material
including clever games like &lt;a href=&#34;https://gitlab.com/slackermedia/bashcrawl&#34;&gt;bashcrawl&lt;/a&gt; and I guess you could &amp;#34;force&amp;#34;
students to use the command line while in the classroom but nothing&amp;#39;s
going to stop them from using the file browser tool or an installed
IDE. Even if you severely limit the tools in lab machines, you have no
control over what they use at home and while the command line might be
more powerful, it&amp;#39;s not nearly as learner friendly.&lt;/p&gt;
&lt;p&gt;
Then there&amp;#39;s assessment. How do you do that? You could give
memorization type questions on exams but that&amp;#39;s a really bad
idea. Since the command line is process not product, this is a tough
nut to crack.&lt;/p&gt;
&lt;p&gt;
To be honest, I&amp;#39;ve struggled with this year after year and don&amp;#39;t have
a great solution. I try to encourage the command line and model how it
can be useful as much as I can but I know I&amp;#39;m only reaching a minority
of my students. In the end, I don&amp;#39;t really care if any of them
ultimately become hardcore CLI users but I really do want all of them
to gain enough exposure so that they can make an informed decision as
to its value and then make up their own minds.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A new book on teaching CS in K12 - and I wrote a chapter!!</title>
      <link>https://cestlaz.github.io/post/in-a-book/</link>
      <pubDate>Mon, 15 Jun 2020 07:08:12 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/in-a-book/</guid>
      <description>&lt;p&gt;
I was involved in a really exciting project a few months ago and now
that it&amp;#39;s available, it&amp;#39;s time to tell everyone about it.&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s a new book on teaching CS in K12 - &lt;a href=&#34;https://www.shuchigrover.com/atozk12cs/&#34;&gt;Computer Science in K12&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;
I got an email a few months ago from &lt;a href=&#34;https://twitter.com/shuchig&#34;&gt;Shuchi Grover&lt;/a&gt;. Okay, actually a
DM over twitter. I hadn&amp;#39;t officially met Shuchi although I&amp;#39;m pretty
sure we&amp;#39;ve been at the same table or group in a conference or two but
I did know her from reputation. Shuchi was putting together a book on
teaching CS in K12 and asked if I was interested in contributing a
chapter. I was flattered and honored and since I&amp;#39;ve never written a
chapter in a book I agreed. &lt;/p&gt;
&lt;p&gt;
The book&amp;#39;s made up of 26 chapters with a who&amp;#39;s who of authors
including teachers, professors, researchers, and other CS Ed adjacent
professionals. Check out the full &lt;a href=&#34;https://www.shuchigrover.com/atozk12cs/authors/&#34;&gt;cast of characters&lt;/a&gt;. It was cool to
see many friends involved in the project. It should be a welcome
addition since I don&amp;#39;t think there&amp;#39;s anything like in currently out. &lt;/p&gt;
&lt;p&gt;
I haven&amp;#39;t read the full book - I&amp;#39;m anxiously awaiting my copy to
arrive but with chapter titles ranging from concepts like &amp;#34;Data Structures&amp;#34; and
&amp;#34;Repetition and Recursion&amp;#34; to techniques like &amp;#34;Questions and Inquiry&amp;#34;
and &amp;#34;Guided Exploration Through Unplugged Activities&amp;#34; it should be a
really valuable resource to teachers rather than just a book to use in
a class and keep on the shelf.&lt;/p&gt;
&lt;p&gt;
I worked on the chapter on functions. Once again I was paired with my
long time partner in crime JonAlf Dyrland-Weaver. Jens Monig, whom I
hadn&amp;#39;t known prior also worked on the chapter contributing the drag
and drop material - something that neither JonAlf nor I felt
particularly comfortable with doing ourselves.&lt;/p&gt;
&lt;p&gt;
One weird thing, though it makes sense, was that I never interacted
with most of the other authors - just my chapter co-authors and
Shuchi. Nothing wrong with it but given the number of friends working
on the book and a chance to meet new friends it would have been great
to have something like a meetup at SIGCSE had it happened. On the
other hand, working with Shuchi was terrific. This not only gave me a
chance to contribute to a book but it also got us together and now I
look forward to future collaborations.&lt;/p&gt;
&lt;p&gt;
The other big take away for me was that writing the chapter was
fun. I&amp;#39;ve been playing with the idea of writing a book on teaching CS
but wasn&amp;#39;t sure I&amp;#39;d enjoy the process. Now I think I might and I might
get started in August when I think I&amp;#39;ll finally have some project
time. What do all of you think? &lt;/p&gt;
&lt;p&gt;
For now, check out &lt;a href=&#34;https://www.shuchigrover.com/atozk12cs/&#34;&gt;Computer Science in K-12&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;
Just released on Amazon in &lt;a href=&#34;https://www.amazon.com/Computer-Science-K-12-Z-Programming/dp/1734662700/&#34;&gt;Color&lt;/a&gt; and &lt;a href=&#34;https://www.amazon.com/dp/1734662719/&#34;&gt;Black and White&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>When does a new course really get developed</title>
      <link>https://cestlaz.github.io/post/when-does-a-new-course-get-developed/</link>
      <pubDate>Mon, 07 Jan 2019 08:49:17 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/when-does-a-new-course-get-developed/</guid>
      <description>&lt;p&gt;
Following up on my last post I thought I&amp;#39;d talk a bit more about
course development. According to most powers that be it&amp;#39;s all done
ahead of time. Organizations and companies with curricula to sell
package it all up ahead of time lesson by lesson unit by unit. When
I create a new course at Hunter, they demand a sample syllabus during
the approval process with a week by week outline, assignments reading
and more. When I created CAPE for Google back in 2010 even though the
programs man advocate knew the real deal he and I spoke many times
about needing something on paper to satisfy the higher ups. &lt;/p&gt;
&lt;p&gt;
To me most of this is nonsense. When I create a new course I have an
idea and a direction but little else. Of course there&amp;#39;s much work to
be done between idea and implementation but for me  a detailed
curriculum that early is mostly a waste of time. Why? Because it all
changes once you get in the classroom.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll do the bare minimum to get by the gatkeepers. If they want a week
to week, I give them a week to week but I won&amp;#39;t stress over it. I
then get to work on what I feel I need prior to running a course. A
framework and the first few lessons in detail.&lt;/p&gt;
&lt;p&gt;
Developing the framework means:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;understanding enough of the content to teach the course. &lt;/li&gt;
&lt;li&gt;deciding on how you will teach or run the course&lt;/li&gt;
&lt;li&gt;developing rough outlines for units, possible assignments etc.&lt;/li&gt;
&lt;li&gt;finding and understanding resources like possible texts and tools
and also things like data sources mentioned in my previous post.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And of course there&amp;#39;s more. I&amp;#39;ll also work out the first unit in day
by day detail. &lt;/p&gt;
&lt;p&gt;
Another important aspect is that this framework design is where you
put in your safety nets. What&amp;#39;s the backup plan if unit 2 takes too
long or students just aren&amp;#39;t getting unit 3. Another important aspect
is to prepare too much material. In my experience it usually takes
longer to teach something than you originally plan but I still think
it&amp;#39;s better to plan too much rather than too little.&lt;/p&gt;
&lt;p&gt;
Why do I only plan out the first unit in details? Because i know
things will change once the rubber hits the road. Even if it doesn&amp;#39;t
change, developing specific lessons without regard to your current
students seems rather odd. It reminds me of how &lt;a href=&#34;http://www.bill-irwin.com/&#34;&gt;Bill Irwin&lt;/a&gt; learned his
role in &lt;a href=&#34;https://en.wikipedia.org/wiki/Eight_Men_Out&#34;&gt;Eight Men Out&lt;/a&gt;. Irwin&amp;#39;s amazing but apparently never played
baseball. He played Eddie Collins, the White Sox second
baseman. Having not played himself, his action scenes were
choreographed like a dance. The director would yell action and he&amp;#39;d do
his dance. If the ball happened to go where it was supposed to you
ended up with a bang bang play. If not, cut, retake. It worked for the
movie but it&amp;#39;s not a great idea for a teacher. How can you plan day 5
of a class when the first four days and all the richness of the live
classes and time between hasn&amp;#39;t occurred. &lt;/p&gt;
&lt;p&gt;
Of course this means a lot of work under the gun but no one ever said
that developing a new course was easy. It&amp;#39;s reassuring that I&amp;#39;m not
the only one who does the real class development in real time:&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-conversation=&#34;none&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Building the course as the semester goes, but the barebones syllabus is here. Thanks to &lt;a href=&#34;https://twitter.com/guzdial?ref_src=twsrc%5Etfw&#34;&gt;@guzdial&lt;/a&gt;, we are using GP as the main language. Reading things like Pattern on the Stone, chapters from Constructionism book by Harel &amp;amp; Papert.  &lt;a href=&#34;https://t.co/CNgEQfcO1Z&#34;&gt;https://t.co/CNgEQfcO1Z&lt;/a&gt;.&lt;/p&gt;&amp;mdash; Aman Yadav (@yadavaman) &lt;a href=&#34;https://twitter.com/yadavaman/status/1082280379153829888?ref_src=twsrc%5Etfw&#34;&gt;January 7, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
Finally having survived the first run through it&amp;#39;s time to &lt;a href=&#34;http://wiki.c2.com/?PlanToThrowOneAway&#34;&gt;throw it
away&lt;/a&gt;. Not really but it&amp;#39;s time to take lessons learned and work them
into the class. From there, it&amp;#39;s incremental improvements.&lt;/p&gt;
&lt;p&gt;
So there you have it, a summary of my approach to course creation.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Owning The Curriculum</title>
      <link>https://cestlaz.github.io/post/owning-the-curriculum/</link>
      <pubDate>Sat, 05 Jan 2019 19:41:23 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/owning-the-curriculum/</guid>
      <description>&lt;p&gt;
I spent a couple of days last week hunkered down working designing a
CS Ethics course and of course it got me thinking about designing
courses in general. &lt;/p&gt;
&lt;p&gt;
One of the topics I&amp;#39;ve ranted on is my disdain for canned
curricula. I&amp;#39;ve never been a fan. This isn&amp;#39;t to say I don&amp;#39;t want to
leverage other people&amp;#39;s work. I&amp;#39;ll take sample curricula, lessons, and
all the resources I can get my hands on but I&amp;#39;d never just deliver
them as is. Even back when I started as a math teacher and I had the
NYCDOE lesson plan books to use as samples, I&amp;#39;d use those lessons as
sources to develop my own.&lt;/p&gt;
&lt;p&gt;
I was reminded why I do this as I was developing my ethics course. I
want the course to have a significant amount of programming and for
some of the projects US census data and the NYC data mine look to be
good sources of data. I was led to these sources from some project
ideas I found online but those projects provided the data pre
processed. Had I been using these sources as a canned curriculum
things would be fine until something changed. Either the resource went
away or the direction of the class required something different. In
either event, had I been happy to merely use someone elses canned
materials I wouldn&amp;#39;t be prepared.&lt;/p&gt;
&lt;p&gt;
It turns out that you&amp;#39;ve got to do some digging before you can
effectively use a resource like the US census data. Maybe you can use
the &lt;a href=&#34;https://factfinder.census.gov/faces/nav/jsf/pages/index.xhtml%5D&#34;&gt;American Fact Finder&lt;/a&gt;. With it you can download a refined data set
as a CSV but you&amp;#39;ll still have to figure out how to use the tool and
which data sets you need. Another approach is to &lt;a href=&#34;https://www.census.gov/programs-surveys/acs/data/data-via-ftp.html&#34;&gt;download the data via
FTP&lt;/a&gt; but then you have to figure out how the files are arranged. &lt;/p&gt;
&lt;p&gt;
All of this is to say that you can&amp;#39;t just go to census.gov and
trivially get what you need and you certainly can&amp;#39;t just send students
there and say &amp;#34;good luck.&amp;#34; I spent more hours that I&amp;#39;d care to admit
last week figuring out the ins and outs of a variety of data sources
and I&amp;#39;ve got many more hours ahead. It&amp;#39;s taking a lot of time but at
the end of the day, I&amp;#39;ll own the knowledge. &lt;/p&gt;
&lt;p&gt;
At the end of the day the first time you offer a course most of your
pre planning is going to go out the window. You need a framework, a
direction, and a start but first time through you don&amp;#39;t know how or
where things will really go. If you&amp;#39;re using someone else material,
good luck when things take an unexpected turn. If you own the course,
you&amp;#39;ll be prepared.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>