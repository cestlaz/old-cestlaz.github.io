<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sigcse on C&#39;est la Z</title>
    <link>https://cestlaz.github.io/categories/sigcse/</link>
    <description>C&#39;est la Z (sigcse)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 06 Mar 2022 16:00:07 -0400</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/categories/sigcse/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>SIGCSE 2022 - What language APCS-A part 1 - the intent</title>
      <link>https://cestlaz.github.io/post/sigcse-2022-apcs-intent/</link>
      <pubDate>Sun, 06 Mar 2022 16:00:07 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/sigcse-2022-apcs-intent/</guid>
      <description>&lt;p&gt;
One of the first sessions of SIGCSE2022 was a panel on the choice of
language for APCS-A. Should it continue to use Java or should it shift
to Python. This topic comes up from time to time. I didn&amp;#39;t attend this
particular session but discussed it at length with a few people who
did.&lt;/p&gt;
&lt;p&gt;
Truth be told, I wasn&amp;#39;t going to start writing about SIGCSE and APCS-A
until I finished a few other SIGCSE posts but my friend &lt;a href=&#34;https://twitter.com/alfredtwo&#34;&gt;Alfred
Thompson&lt;/a&gt; said he was writing one and was planning on posting it
soon. I think it&amp;#39;s better when us CS Ed bloggers write about similar
things at similar times - fosters better discussion so I&amp;#39;m writing
this today (Sunday) and will post it as soon as I see Alfred&amp;#39;s post.&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s a lot to unpack when it comes to language choice for
APCS-A. Language strengths and weaknesses, ease of learning, tooling
and training costs and more. I&amp;#39;ll share my feelings on all of these
and maybe more but before we dig into those I think it&amp;#39;s worth
thinking about the intent of the course.&lt;/p&gt;
&lt;p&gt;
The AP program was originally created to allow advanced high school
students to get started on college work in their field of interest. An
AP class would either be the first course in a major or it would be a
requirement like calculus is for CS majors. There were fewer exams and
FAR fewer students taking them.&lt;/p&gt;
&lt;p&gt;
Over time, things evolved and today that&amp;#39;s not necessarily the
case. APCS-A, Calc and many others still fit the bill but then you
have classes like AP Euro - sometimes offered to HS sophomores and is
really a regurgitation course. Sorry but a class appropriate for HS
sophomores is not college level. Same for APCS-Principles. Might be
good, might be bad but it&amp;#39;s not college level.&lt;/p&gt;
&lt;p&gt;
So, before deciding on the language you really have to decide on
intent. If APCS-A is to be the first class in the CS major then the
college board has to really follow what colleges are doing. Some
people think that APCS-A should be a course for everybody or for non
CS majors but if the class is supposed to be a first in major course,
it &lt;strong&gt;has&lt;/strong&gt; to follow the college lead.&lt;/p&gt;
&lt;p&gt;
If colleges decide to make their CS1 a more general course, more about
APIs, less about either programming or, to it&amp;#39;s already limited extent
algorithms and data structures, then it&amp;#39;s fine to change but as long as the
college board is pushing CS1 as a first course in the CS major then
APCS-A has to follow the general CS1 outline.&lt;/p&gt;
&lt;p&gt;
So, assuming this stays the same, you might still argue a change to
Python. I&amp;#39;ll look at the pros and cons of doing this at a later post but one
argument against the change is that students having taken CS1 in
Python have a harder time transitioning to Java (or C++) in CS2.&lt;/p&gt;
&lt;p&gt;
Some people say this isn&amp;#39;t an issue but I think it is. APCS-A is
already frequently a watered down CS1 and students sometimes struggle
in CS2 even when it&amp;#39;s in the same language. Switching languages will
result in kids hitting a brick wall. This is an example of a problem
I&amp;#39;ve seen over and over again - people changing a class because they
feel there&amp;#39;s a need but not paying attention to the next class let
alone the full pipeline.&lt;/p&gt;
&lt;p&gt;
This happened at Hunter recently - I warned the department that it
would but nobody listened. Our CS0 course up until my first
year at Hunter was a pretty bad course It was a random assortment
of topics with a lot of cruft and it just didn&amp;#39;t serve anybody. In my
second semester the class was slated to change to a new course. The
new course was going to have more programming - all in Python - lots
of small programs. It was a much broader class and we all agreed that
it would be much better. It was except for one thing. Nobody was
paying attention to how well it prepared students for our CS1 and that
first CS1 class after the new CS0 was full of complaints, student
struggles, and student failures. On the one hand, the new course had
more programming than the earlier one but since it was only tiny
programs, students weren&amp;#39;t prepared for CS1 right out of the gate but
students thought they were prepared. Things have gotten better since then
but the problem was easily to predict.&lt;/p&gt;
&lt;p&gt;
If High Schools move to a less rigorous class with an &amp;#34;easier&amp;#34;
language like Python great care should be taken to make sure that it
prepares students to jump into a college CS2 which won&amp;#39;t have nearly
the supports that are present in high school.&lt;/p&gt;
&lt;p&gt;
So that&amp;#39;s it for this installment. Before you can even think about
language you have to think about class intent. Now that we&amp;#39;ve done
that we can start looking at language choice. That&amp;#39;s for next time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SIGCSE 2022 - Conference format</title>
      <link>https://cestlaz.github.io/post/sigcse-2022-hybrid/</link>
      <pubDate>Sat, 05 Mar 2022 08:05:15 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/sigcse-2022-hybrid/</guid>
      <description>&lt;p&gt;
Before diving into the content I thought I&amp;#39;d share my thoughts about
SIGCSE as a hybrid conference. Prior to Covid, SIGCSE was pushing
2,000 in person participants. This time around ther were a little
under 800 in person and a number of hundreds more remote. The in
person numbers mirrored what CSTA has grown to. It&amp;#39;s a nice size. Not
overwhelming but manageable. It&amp;#39;s at the upper edge of possibly
feeling intimate. Once you get into the thousands things feel far less
personal. You can go the entire conference not finding people you want
to connect with. On the other hand you can also blend into the crowd
should you choose that route.&lt;/p&gt;
&lt;p&gt;
Things basically ran as usual. Opening announcements and keynote,
coffee break, sessions and so on but remote was interjected
throughout. There were also remote only sessions but I can&amp;#39;t speak to
those.&lt;/p&gt;
&lt;p&gt;
We started out with the opening keynote. Barbara Liskov Zoomed in from
her home. She gave a &lt;strong&gt;great&lt;/strong&gt; talk going through her history which in
many was is &lt;strong&gt;the&lt;/strong&gt; history of some key aspects of computer science,
programming languages, and programming.&lt;/p&gt;
&lt;p&gt;
There was zero downside to having a remote keynote speaker. Barbara
was intersting and engaging. I was blown away. The only thing I found
a bit weird was that I kept glancing over to the dias where the
speaker would normally stand and it was empty. That&amp;#39;s on me though.&lt;/p&gt;
&lt;p&gt;
At the end we had Q&amp;amp;A from both people in the live audience and people
on the remote platform. This was an all around win.&lt;/p&gt;
&lt;p&gt;
The first thing that somewhat irked me about virtual was at a paper
session. The second paper was presented as a video. This part was
fine, maybe even preferable since it allows the presented to make sure
the video is set up the way they want and it also keeps within time
limits. The problem was that there was no Q&amp;amp;A. If you&amp;#39;re going to do a
video presentation, the presenter should hop on some platform at the
end for Q&amp;amp;A. There is zero value added to just showing the video. I
could do that from home.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not criticizing SIGCSE here. They tried something. In my opinion
it didn&amp;#39;t work. In the future, I&amp;#39;d love to see video presentations but
with a live, in person or via some Zoom platform Q&amp;amp;A. In theory there
could be some &amp;#34;flipped sessions&amp;#34; (although I think a lot of the
flipped classroom concepts are bunk) where you could watch the video
or read the paper prior to the session and then have a meaty
discussion.&lt;/p&gt;
&lt;p&gt;
The second hybrid thing that I didn&amp;#39;t like was a hybrid BOF. I just
think it din&amp;#39;t work. It basically turned into a few small mini
presentations by the organizers. All the prior SIGCSE BOFs I&amp;#39;ve
attended had the hosts facilitating a room wide discussion. This was
similar but slightly more awkward in the few virtual group discussion
sessions I&amp;#39;ve taken part in. This was a case of hybrid not
working. With some people in the room and some people at home you just
couldn&amp;#39;t have meaningful discussion. The people in the room couldn&amp;#39;t
talk without excluding the remote people and remote conversation
wasn&amp;#39;t available easily to the in person crowd.&lt;/p&gt;
&lt;p&gt;
Birds of a feather just don&amp;#39;t fly mixed. Do them remote or do them in
person.&lt;/p&gt;
&lt;p&gt;
A third thing that didn&amp;#39;t really bother me but I found weird was one
panel where one person was in person and the rest were remote while I
knew that at least one of the remote people were attending in
person. The mix just didn&amp;#39;t flow as well for me. I&amp;#39;ve attende all in
person panels, all remote panels, and panels where all the panelists
were in a room together but presenting remotely. All of these formats
worked. It think the mix of in person and remote was just kindof
weird. In future, I&amp;#39;d say either have all the presenters in a room
together at a big table even if it&amp;#39;s remote or have them all &amp;#34;dial
in.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Overall the conference was great so these are really nitpicks.&lt;/p&gt;
&lt;p&gt;
With this post out of the way I can get to the content posts but I
feel it would be remiss if I didn&amp;#39;t mention a couple of non content
related highlights that the SIGCSE organizers provided.&lt;/p&gt;
&lt;p&gt;
First, the opening evening reception had a &lt;strong&gt;bacon bar&lt;/strong&gt;. All
receptions, coffee breaks, snack times, and I&amp;#39;d even say sessions
should provide bacon.&lt;/p&gt;
&lt;p&gt;
The other thing which I&amp;#39;m more serious about is that they provided
coffee and tea before the opening sessions rather than their usual
practice of withholding caffeine for the 10:00 break. I can&amp;#39;t imagine
it would cost much to just put out the urns early.&lt;/p&gt;
&lt;p&gt;
Overall, great conference and great job by the organizers.&lt;/p&gt;
&lt;p&gt;
Content related posts to come.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SIGCSE 2019 - the keynotes</title>
      <link>https://cestlaz.github.io/post/sigcse-2019-keynotes/</link>
      <pubDate>Mon, 04 Mar 2019 15:25:59 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/sigcse-2019-keynotes/</guid>
      <description>
&lt;p&gt;
It&amp;#39;s that time of the year to write a series of blog posts about
SIGCSE. I thought I&amp;#39;d start with one on the keynotes. &lt;/p&gt;
&lt;p&gt;
There were four keynote speakers. Marie desJardins, Gloria Townsend,
Mark Guzdial, and Blair Taylor. I wasn&amp;#39;t at the first timer&amp;#39;s lunch
where Townsend spoke so I won&amp;#39;t talk at all about that keynote.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m also not going to summarize the talks. Andy Ko wrote up a terrific
summary of his &lt;a href=&#34;https://medium.com/bits-and-behavior/sigcse-2019-trip-report-celebrating-50-years-b3460835a09a&#34;&gt;SIGCSE experience&lt;/a&gt; and did a much better job giving
overviews to the keynotes than I ever could so I&amp;#39;ll just refer you to
Andy&amp;#39;s &lt;a href=&#34;https://medium.com/bits-and-behavior/sigcse-2019-trip-report-celebrating-50-years-b3460835a09a&#34;&gt;blog post&lt;/a&gt;. Rather, I&amp;#39;m just going to talk a bit about what they
left me thinking about. It might be something that&amp;#39;s pretty tangential
to the actual talk but hey, it&amp;#39;s the direction that the speaker sent
my brain to follow.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Marie des Jardin - the pinch hitter
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Marie desJardins wasn&amp;#39;t supposed to be the keynote. She was filling in
for a flu ridden &lt;a href=&#34;https://en.m.wikipedia.org/wiki/Freeman_A._Hrabowski_III&#34;&gt;Freeman Hrabowski&lt;/a&gt; at the last minute and she did a
more than admirable job.&lt;/p&gt;
&lt;p&gt;
The big line for me was her plea for us not to create &amp;#34;weed out&amp;#34;
courses but rather to create &amp;#34;launch&amp;#34; courses. I think this resonated
with many in the audience. It got me thinking about something that&amp;#39;s
been a concern of mine for a while. We see a lot of examples of making
student&amp;#39;s first CS experience more gentle and more varied. Probably
the biggest example is APCS-P but you can also find it in many college
CS0 classes. Hunter&amp;#39;s no exception - we&amp;#39;re now in the second year of a
more varied CS0 class (although truth be told, our problem
wasn&amp;#39;t so much that our old CS0 was a gatekeeper but more that
students hardly did any programming). &lt;/p&gt;
&lt;p&gt;
I started to become aware of the problem as I would hear stories of
kids who did Girls Who Code programs who then dropped out of CS
classes that were too hard and then later when my former students at
Harvard told me that many kids &amp;#34;dropped like flies&amp;#34; in the class after
CS50. I&amp;#39;ve also seen these problems at Hunter but at least here I know
we&amp;#39;re working on it. Having a more accessible entry point is terrific
but not if you just set the kids up to fail one step down the line. It
seems that not enough people are looking at the complete path: from
first course to last and the transitions in between. This is a hidden
danger. We can proudly say that diversity and enrollments are up based
on those first experiences and no one&amp;#39;s the wiser that we&amp;#39;re killing
the kids later on. We have to do better.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Mark Guzdial - the outstanding contributer
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Mark was this year&amp;#39;s winner of SIGCSE&amp;#39;s Award for Outstanding
Contribution to CS Education. A well deserved award. Mark&amp;#39;s talk was
terrific and similar to the one he gave at the Code and Beyond
conference in NY which I wrote about &lt;a href=&#34;https://cestlaz.github.io/post/thoughts-on-code-and-beyond-ct/&#34;&gt;here&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;
As with the previous keynote you can get a great summary if you read
Andy&amp;#39;s post linked above.&lt;/p&gt;
&lt;p&gt;
One point Mark made was that he felt that all students should learn
programming but if I remember the talk correctly he didn&amp;#39;t make a
strong statement about all students learning CS. He also said that
first course our CS majors take shouldn&amp;#39;t be the same as the first
course for non majors. I see where Mark&amp;#39;s coming from I&amp;#39;m not sure I
agree. Well, I do agree given what a first CS course for a major
typically looks like versus what a never-CS major might need for life but
the few CS0 for non major courses I&amp;#39;ve seen don&amp;#39;t leave their students
with enough to continue on to the CS major or a minor (which could be
valuable to a HUGE swath of students) so they end up taking the CS0
for CS majors anyway. This means one more course and one more
semester. More cost and more time spent. I&amp;#39;ll say that I do agree with
Mark UNLESS you can design a course that can address the needs of both
parties and the truth is I think you can. We did it at Stuy. Students
come back with that having been their only course and talk of its
usefulness and utility and students come back having used it to launch
a tech career in later high school, college, and beyond. What we built
isn&amp;#39;t perfect and is for a particular population but as proof of
concept it&amp;#39;s convinced me that a single course for both can be done&lt;/p&gt;
&lt;p&gt;
Another one of Mark&amp;#39;s big points was taking CS into other subject
areas. I love this and I love when he said (apologies if the quote&amp;#39;s a
little off) &amp;#34;They need things and we can build stuff&amp;#34; as a call to
action to partner with and to develop the languages and tools needed
to support a new vision of CS embedded in other subject areas.&lt;/p&gt;
&lt;p&gt;
My thoughts here are that as a community we are ignoring the realities
of K12 education. Mark mentioned Bootstrap World, a sprogram both he
and I like very much. It is embedded in Algebra classes and uses CS in
Racket (nee Scheme) to support learning said algebra. Mark noted that
Racket looks like Algebra and that&amp;#39;s one of the reasons Bootstrap
works. Another fact often left out is that algebra is frequently
taught either over two years or with a double period allocated to
it. It is given more time than most classes and that allows teachers to experiment
a bit more with instruction. Even if we develop more tools like
Bootstrap that align themselves to teaching other subjects those
subject teachers might not have the time to dedicate to the new
tool. Why not? That&amp;#39;s another thing Mark indirectly mentioned. At one
point he said that we might have to &amp;#34;take a step back&amp;#34; first in terms
of results and quite frankly, K12 teachers sometimes can&amp;#39;t take that
chance. In addition to not wanting to give their current students a
worse experience even with the promise that future classes would get a
better one they have to face the specter of high stakes testing. If
I&amp;#39;m using a new CS tool in a history class and my student&amp;#39;s test
results go down, they might have to repeat the class and the teacher
could put their license in jeopardy.&lt;/p&gt;
&lt;p&gt;
In the end I loved just about everything Mark had to say but it still
got me thinking about a lot and to me that&amp;#39;s one of the hallmarks of a
great talk. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Blair Taylor - the controversy
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Blair Taylor gave the final keynote and this one had some controversy
around it. Andy&amp;#39;s blog post again summarizes things well. &lt;/p&gt;
&lt;p&gt;
My only take on the content is that the talk was more about
Dr. Taylor&amp;#39;s journey and less about Cyber Security (I hate it that
it&amp;#39;s now just being called &amp;#34;cyber&amp;#34;) but that was fine. &lt;/p&gt;
&lt;p&gt;
What I want to talk about here is not so much the controversy over how
some people took parts of Dr. Taylor&amp;#39;s talk and the Q&amp;amp;A at the end but
rather the fact that more and more recently I&amp;#39;ve felt that as a
community we can&amp;#39;t talk about difficult issues concerning gender,
race, and the like. &lt;/p&gt;
&lt;p&gt;
I consider myself an ally to under represented and under served groups
but have found myself in situations recently where unless I 100%
parrot one side&amp;#39;s extreme view I&amp;#39;m accused of sexism or racism at
which point ANYTHING I say is treated as such. One is not allowed to
see any nuance in what is a very complex topic. &lt;/p&gt;
&lt;p&gt;
At one point, the speaker made a joke. She prefaced it with something
like &amp;#34;I&amp;#39;m going to tell this offensive joke&amp;#34; and that she could,
presumably because she is a women. The joke fell flat (although I&amp;#39;ve
told the story of the keynote to a few women in tech and they chuckled
and said they actually kind of liked the joke). My take was that the
speaker was setting the stage to maybe dive into a difficult
conversation. My take was also that some members of the audience right
then and there decided that the speaker was wrong about all things. &lt;/p&gt;
&lt;p&gt;
After the talk I was a bit more convinced that this was the case as I
read a tweet stream explaining what happened that included the joke
but none of the context for the reader to make an informed decision. &lt;/p&gt;
&lt;p&gt;
In the end, I felt that Dr. Taylor has honestly worked for under
represented groups and while this might be unpopular, her pragmatism of
sometimes swallowing an insult and &amp;#34;having a sense of humor&amp;#34; is the
right thing to do. Unfortunately, Dr. Taylor misread the audience and that
some people decided somewhere in her talk that even though she was
working to empower women in her own way, it wasn&amp;#39;t &amp;#34;my way&amp;#34; so it was
wrong. &lt;/p&gt;
&lt;p&gt;
The situation was unfortunate and my big fear is that as a community
we still have a long way to go before we can have these conversations
and personally, as someone who considers themselves an ally of the
undeserved I&amp;#39;m becoming more gun shy of partaking in discussions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
That&amp;#39;s all for now.
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
So, that&amp;#39;s my take on the keynotes. Much more to come on the
conference in future posts. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>