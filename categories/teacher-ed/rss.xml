<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Teacher Ed on C&#39;est la Z</title>
    <link>https://cestlaz.github.io/categories/teacher-ed/</link>
    <description>C&#39;est la Z (Teacher Ed)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 08 Feb 2021 20:12:43 -0400</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/categories/teacher-ed/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>Teaching and Pedagogy - words and music</title>
      <link>https://cestlaz.github.io/post/teach-pedagogy/</link>
      <pubDate>Mon, 08 Feb 2021 20:12:43 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teach-pedagogy/</guid>
      <description>&lt;p&gt;
I wanted to give a little more context on &lt;a href=&#34;https://cestlaz.github.io/post/teacher-creds/&#34;&gt;yesterday&amp;#39;s post&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;
In reading over the various comments on social media related to the
topic of required and desired CS teacher knowledge there are those
that fall on the content is king and pedagogy not so important and
others who think you don&amp;#39;t really need a deep knowledge of CS. I think
you need both and think current teachers need to be given a
reasonable but finite amount of time to get there.&lt;/p&gt;
&lt;p&gt;
Whenever the topic comes up I think of &lt;a href=&#34;https://en.wikipedia.org/wiki/Eddie_and_the_Cruisers&#34;&gt;Eddie and the Cruisers&lt;/a&gt;. Tom
Berringer is playing a song - &amp;#34;On the Dark Side&amp;#34; for the band as the
band ridicules him. Eddie (Michael Pare) says &amp;#34;Not bad&amp;#34; to which a
band mate says - &amp;#34;he can&amp;#39;t sing, he can&amp;#39;t play and he can&amp;#39;t
write. What&amp;#39;s not bad?&amp;#34; to which Eddie replies &amp;#34;he&amp;#39;s got something we
need, words and music.&amp;#34; &lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/Ds-MR9OPiNU&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Words and music - teaching and pedagogy. One isn&amp;#39;t enough - you need
both. You need the content but you also have to do something to bring
value to the kids beyond just dumping the content on the desk - it&amp;#39;s
why I&amp;#39;m so against scripted curricula.&lt;/p&gt;
&lt;p&gt;
Why do I think both sides are so important? I probably got here from
teaching at Stuyvesant for over 20 years. On top of that, I&amp;#39;m a Stuy
grad (&amp;#39;84), Stuy husband (Devorah, also &amp;#39;84), Stuy brother, and two
time Stuy parent. While Stuy has and had some good teachers, I got to
see a bunch of bad ones. I saw teachers who didn&amp;#39;t know their subject
areas and teachers who didn&amp;#39;t know how to teach. The rub is that at a
school like Stuy the kids will figure out what they need on their
own. You can put an unripe avocado on the teachers desk and the kids
will still pass all the exams. Sure, the kids pass but every kid
deserves a teacher that adds value to their lives. &lt;/p&gt;
&lt;p&gt;
Some of the worst at Stuy were teachers for whom Stuy was their first
(and only) gig - they never really had to learn how to teach but for a
variety of reasons - all the kids pass the AP or in the case of
teachers that know content but not teaching, the &amp;#34;smart kids&amp;#34; like the
teacher because they &amp;#34;know stuff&amp;#34; - they think they&amp;#39;re good teachers. &lt;/p&gt;
&lt;p&gt;
Sorry, you have to add value.&lt;/p&gt;
&lt;p&gt;
The best thing that happened to me when I started was when Stuy&amp;#39;s
chairman didn&amp;#39;t hire me. I ended up at Seward Park and that&amp;#39;s where I
started to learn my craft. Once at Stuy, I had to be careful not to
fall into the trap - you can become a good or even a great teacher at
a specialized school but, just like anywhere else, you have to work
for it. You have to really look at what and how you&amp;#39;re doing. &lt;/p&gt;
&lt;p&gt;
All of this is to say that to add value to your students you really
have to know both the content and you have to know how to teach - you
have to add value. If you can be replaced by an avocado, you&amp;#39;re not
earning your paycheck.&lt;/p&gt;
&lt;p&gt;
Now, I&amp;#39;m not saying that the teachers who don&amp;#39;t know CS and are taking
on this new challenge shouldn&amp;#39;t be given time to learn the subject or
that raw teachers who know their subject shouldn&amp;#39;t be given time to
learn how to teach but you eventually have to get there.&lt;/p&gt;
&lt;p&gt;
If we&amp;#39;re okay with teachers who have to follow scripts for either
content or pedagogy for the long term then we&amp;#39;re devaluing our
profession. I&amp;#39;d like to think we add more.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Physics Teacher Wanted - must NOT know Physics</title>
      <link>https://cestlaz.github.io/post/teacher-creds/</link>
      <pubDate>Sun, 07 Feb 2021 19:00:53 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-creds/</guid>
      <description>&lt;p&gt;
There were a few posts over on Facebook this weekend about teacher
certification. It started with a question - should teacher
certification be based on an exam like APCS-A with the teacher
correctly answering 85% or greater. A lively discussion
followed. There was agreement and disagreement with responses ranging
from:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;good idea&lt;/li&gt;
&lt;li&gt;it&amp;#39;s too hard&lt;/li&gt;
&lt;li&gt;it&amp;#39;s not hard enough&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There was also a discussion of the importance of content knowledge vs
knowing how to teach in general.&lt;/p&gt;
&lt;p&gt;
Since there was a lot going on in the thread I thought I&amp;#39;d pull my own
thoughts out into this post.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s first look at the test. There are a number of states that have
a content test for computer science. For some states, I think it&amp;#39;s the
only requirement. In terms of content, at least the Praxis exam is
something like APCS-A on steroids. This is not a good thing. Don&amp;#39;t get
me wrong, I think a qualified CS teacher should know more than APCS-A
on steroids but a single day test is not how you measure deep content
knowledge. I know plenty of students who&amp;#39;ve passed standardized
exams - be they regents, AP, or other but they were no way qualified
to teach the course. They knew the formulas, recognized the patterns,
but didn&amp;#39;t really know the material. Is this what we want of our CS
teachers? I certainly don&amp;#39;t. I&amp;#39;m not hugely opposed to an exam
covering somethign like college CS1 content other than my general
anti-testing beliefs - it would help to curtail some of the problems
that will invariably arise with weak certification programs but it
should no way be the actual bar to teach - if it exists, it should be
just one standard measure along the way.&lt;/p&gt;
&lt;p&gt;
Now to that content vs pedagogy thing. What current teachers and in
fact most people in the CS Ed space forget is that states move slowly
and that we&amp;#39;re playing the long game. Right now most CS teachers are
converts from other disciplines and relatively few have strong CS
backgrounds but over time this will change. As CS becomes more
established we&amp;#39;ll have young teachers entering the filed with the
intent of becoming a CS teacher. If states and teacher prep programs
set the content bar low that&amp;#39;ll be what we&amp;#39;re stuck with for a LONG
time.  We wouldn&amp;#39;t dream of creating a science teacher credential
where the teacher hardly knows any science - no way should we do it
for CS or any other subject.&lt;/p&gt;
&lt;p&gt;
The truth is that we need teacher prep programs that ensure that new
CS teachers know both the content and how to teach it and that content
should not be tied in to any specific curriculum. I wrote more about
all of this &lt;a href=&#34;https://cestlaz.github.io/post/teachers-prep-big-pic/&#34;&gt;here&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;
So what do do with current teachers and current needs? Easy - give
them time. Back when I started teaching I was a career changer. I
never took an education course, never student taught, nothing. Turns
out that Math was a shortage area so I had an option - as long as I
had enough math credits I&amp;#39;d get a temporary license  and start
teaching. Instead of teaching 5 classes, I&amp;#39;d teach 4 and get a
mentor. I then had to get a certain number of education credits within
a certain period of time. Since I already had the subject credits it
was just about learning how to teach. Truth is, I barely survived that
first year but things did get better.&lt;/p&gt;
&lt;p&gt;
New York and other states probably couldn&amp;#39;t do the exact same
thing. First off, current and potential teachers might not know the
content so it wouldn&amp;#39;t just be ed courses and second, certification
rules have changed big time since NCLB. Still, they could do something
similar - approve certification programs like the one I created at
Hunter - ones designed for current non-CS teachers and give teachers a
period of time to complete it. For career changers, create CS version
of programs like the NY Teaching Fellows. &lt;/p&gt;
&lt;p&gt;
What isn&amp;#39;t acceptable is saying that CS teachers don&amp;#39;t have to know CS
and that career changers who know CS don&amp;#39;t have to learn how to
teach. Create the programs and give people time. We&amp;#39;re playing the
long game and the only way we lose is if we cut corners for
convenience at the expense of the kids.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CS Teacher Prep - the big picture and the long game.</title>
      <link>https://cestlaz.github.io/post/teachers-prep-big-pic/</link>
      <pubDate>Wed, 25 Nov 2020 15:05:31 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teachers-prep-big-pic/</guid>
      <description>&lt;p&gt;
Time to follow up on my &lt;a href=&#34;https://cestlaz.github.io/post/teachers-can-learn-cs/&#34;&gt;last post&lt;/a&gt; and all the surrounding
discussion. To be honest, I was a bit surprised at first to see that
many posters were all for what I consider a weak program. I think all
of us agreed that you want and need a gentle entry - you have to be
accessible to teachers with little or even no prior computer science
experience but I was taken back by the number of teachers who thought
it was fine to have a graduate level program where the teachers end up
with no more knowledge than a high school student taking APCS-A.&lt;/p&gt;
&lt;p&gt;
Some teachers stated that they &amp;#34;were able to learn it all on their
own.&amp;#34; Others thought it was &amp;#34;enough for what I teach.&amp;#34; Many lamented
that if it&amp;#39;s too hard nobody would become CS teachers - something I
addressed in my last post.&lt;/p&gt;
&lt;p&gt;
I realized that many were viewing this from a very narrow lense - the
lens of their own experiences and not looking at the big picture or
the long game.&lt;/p&gt;
&lt;p&gt;
First thing to realize is that once a college creates a program it&amp;#39;s
unlikely to change it whole hog. If a college has starts with a
strong, rigorous certification program it will likely stay strong. A
weak one will stay weak. My go to example, although not for a program
is the old CISCO curriculum. The plan was to start teachers with basic
training and they&amp;#39;d mind the store while students took computer based
triaining models. I kept hearing that they&amp;#39;d ramp up the teacher
training later. It never happened. Some teachers knew real networking
already and some did indeed learn it on their own but too many were
just long term babysitters. Once programs are in place, they don&amp;#39;t
instantly morph into stronger programs. You&amp;#39;ll get some tweaks here
and there - I&amp;#39;ve already put in for some changes to my program but you
won&amp;#39;t see wholesale change.&lt;/p&gt;
&lt;p&gt;
if our weak CS program is enrolling teachers and you don&amp;#39;t hear crazy
complaints you can bet it&amp;#39;s not going to get stronger and teachers
with the best of intentions to learn more will frequently find that
life gets in the way.&lt;/p&gt;
&lt;p&gt;
The second thing to look at is the fact that this is a long game and
current non-CS teachers teaching CS is a temporary state. I&amp;#39;m
currently running a cohort of 21 teachers with experience ranging from
around 5 to 20 years. They&amp;#39;re not going to be teaching forever. In my
opinion, right now they fill a critical need - build a cadre of super
knowledgeable  amazing teachers in NYC who can host student teachers,
run workshops etc but the truth is, future generations of teachers
won&amp;#39;t come from other subject areas. They&amp;#39;ll come from preservice
programs - people who explicitly have decided to become CS teachers
from the start.&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s the long game and the big picture and those teachers need
quality programs. If our colleges create weak programs we&amp;#39;ll be left
with an eternity of under prepared teachers. If we have strong ones,
as teaching CS becomes a career path similar to teaching math or
science we&amp;#39;ll have well prepared teachers.&lt;/p&gt;
&lt;p&gt;
This is the crossroads we&amp;#39;re at in many states. Will we do it right?
I&amp;#39;m not particularly optimistic. My feeling is that just like in other
subject areas there will be some strong programs out there and plenty
of jokes. All I can do is worry about my little corner of the world so
I&amp;#39;ll do what I can to make sure teacher candidates at Hunter have the
best possible experience and are as well prepared as they can possibly
be.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teachers Can Learn CS and CS people will go into teaching</title>
      <link>https://cestlaz.github.io/post/teachers-can-learn-cs/</link>
      <pubDate>Fri, 20 Nov 2020 12:24:52 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teachers-can-learn-cs/</guid>
      <description>&lt;p&gt;
A friend&amp;#39;s post brought my attention to a new graduate CS Education Certificate
program. It&amp;#39;s not a New York State program so isn&amp;#39;t in competition
with what I do but it&amp;#39;s the type of program that I was afraid of. The
type that will hurt CS education more than it will help. There was
enough discussion following the Facebook post that I thought I&amp;#39;d write
about it here.&lt;/p&gt;
&lt;p&gt;
Before talking about the program itself, one issue that came up
multiple times in the Facebook thread is that old red herring - we
can&amp;#39;t teach teachers real CS because if they know the real deal
they&amp;#39;ll all go into industry. I mean, who would want to teach with all
those high paying tech jobs.&lt;/p&gt;
&lt;p&gt;
I call BS on this.&lt;/p&gt;
&lt;p&gt;
First, let&amp;#39;s look at math and science. While it&amp;#39;s true that since no
child left behind, teacher certificate has been greatly
neutered. Today you can be a math teacher and know math or you can be
a math teacher who took only &amp;#34;math-ed&amp;#34; classes and barely know high
school math. Back in the day you &lt;strong&gt;had to know math&lt;/strong&gt; or whatever your
field was. &lt;/p&gt;
&lt;p&gt;
New York&amp;#39;s always been the financial capital of the world and somebody
with a decent math background could always get a better than teacher
paying job on the street. Beyond that there have always been plenty of
other better paying options yet we have math teachers. Same for
science. We&amp;#39;ve got big pharma over in New Jersey yet we have science
teachers. Sure, math and science teachers are harder to find than say
English teachers but somehow they seem to be out there.&lt;/p&gt;
&lt;p&gt;
The same will be true for CS teachers as long as there&amp;#39;s a path
towards a career. Up until recently there were very few CS teaching
positions and no certification programs so if you were a CS minded
person and wanted to teach you had two options - get a certification
in another area like math and try to teach CS anyway or go into
another field. Now that pathways into the profession are starting to
exist and one can forge a career teaching CS those CS minded teachers
to be can indeed enter the field. This will take time but it will
happen.&lt;/p&gt;
&lt;p&gt;
Related is the old &amp;#34;you can&amp;#39;t be it if you can&amp;#39;t see it.&amp;#34; Up until
recently most schools didn&amp;#39;t offer CS so while students could see and
be inspired by say a history or math teacher and then follow in their
career footsteps the possibility of being a CS teacher never
existed. Now it does. True, we&amp;#39;re offering CS in far too few schools
and even in those schools we aren&amp;#39;t reaching all the kids but it&amp;#39;s a
long road and we&amp;#39;re just starting the trek.&lt;/p&gt;
&lt;p&gt;
This journey will take years if not decades but at least we&amp;#39;ve started
the journey.&lt;/p&gt;
&lt;p&gt;
A critical piece will be the graduate preparation programs which
brings us back to the certification program I mentioned at the start.&lt;/p&gt;
&lt;p&gt;
Professional development and workshop models have been an important
first step to expose large numbers of existing teachers to CS and to
kickstart CS around the country but it isn&amp;#39;t sufficient. PD is
invariably tied tightly to a product and is for the most part mass
training. It&amp;#39;s not a model that can truly build top flight
teachers. It&amp;#39;s an important part of phase 1 but we have to go beyond
it. &lt;/p&gt;
&lt;p&gt;
That&amp;#39;s where the schools of education come in. They&amp;#39;re the ones
preparing new teachers and ultimately they will have to prepare CS
teachers as well. No matter what, well resourced schools will find
knowledgeable teachers but under resourced schools will, as usual,
have to take what they can get. Strong programs will create strong
teachers for these schools. Weak ones will leave our under resourced
schools further behind and this is why I go nuts when I see a bad
program that purports to prepare K12 CS teachers.&lt;/p&gt;
&lt;p&gt;
The program in question requires the following courses:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Computer Science Principles (3 credits)&lt;/li&gt;
&lt;li&gt;Java Programming (4 credits)&lt;/li&gt;
&lt;li&gt;Computational Thinking in K-12 Classrooms (3 credits)&lt;/li&gt;
&lt;li&gt;Equity in Computer Science Education (2 credits)&lt;/li&gt;
&lt;li&gt;Methods of Inclusive Computer Science Teaching (3 credits)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So to start you&amp;#39;re taking 7 &lt;strong&gt;graduate&lt;/strong&gt; credits in APCS Principles and
APCS-A and that&amp;#39;s basically it for CS content. It&amp;#39;s the quintessential
you take it you teach it. Heck, you might as well offer APCS-P to 10th
graders then just choose an eleventh grader to teach it the following
year. These are &lt;strong&gt;not&lt;/strong&gt; graduate level classes. Now, I get it, you have
to start somewhere and you want to be able to take in candidates with
no prior CS experience. That&amp;#39;s fine - you can start with a basic
programming course but this program both begins and ends there.&lt;/p&gt;
&lt;p&gt;
It also offers a 3 credit class in Computational Thinking. I find this
interesting. I&amp;#39;m guessing it&amp;#39;s focused on teaching the younger
grades and as aside, this whole program looks like it would be pretty
good for an elementary school teacher. It just loses credibility as a
K12 program that includes high school. Based on course number it looks
that it&amp;#39;s classified as a Teaching and Learning course not a Computer
Science course so I really question what it&amp;#39;s all about anyway. It
also got me thinking - CS programs as far as I can tell don&amp;#39;t have
their students take a class in computational thinking. Between the CS
and other requirements we learn it but might not even use the label. &lt;/p&gt;
&lt;p&gt;
There are also two other teaching and learning courses - Methods and
Equity in CS. They could be fine but given what the overall design of
the program is, who knows.&lt;/p&gt;
&lt;p&gt;
As I said before, this sounds like a great program for an elementary
school teacher but I certainly wouldn&amp;#39;t my kids taught in High School
by a teacher prepared in this way. I want my math teachers to know
math, history teachers to know history, and yes, CS teachers to know
CS. &lt;/p&gt;
&lt;p&gt;
I get it - we need to start from 0 but when you&amp;#39;re creating a
&lt;strong&gt;graduate&lt;/strong&gt; program the end product has to be a truly prepared teacher
or you&amp;#39;re doing a disservice to the teacher candidate, their students
and to the field as a whole.&lt;/p&gt;
&lt;p&gt;
The thing is that you can do it right. I think our program at Hunter
does and the early results from our first cohort are confirming this. &lt;/p&gt;
&lt;p&gt;
Our first course is essentially a APCS-A alike because we know you
have to start form the floor. We expect our teachers to come in with
at least a little programming experience but given all the tutorials,
MOOCs, and standalone courses available I don&amp;#39;t think it&amp;#39;s
unreasonable to expect a teacher candidate to do a little pre-work to
get ready. We also point potential students to resources where they
can get up to speed.&lt;/p&gt;
&lt;p&gt;
From there we go to data structures and also a topics course - depth
and breadth and as a fourth CS course we have an ethics course that
includes a strong programming component rather than just reading case
studies and articles. We complement the CS with a methods course and a
curriculum design course and also fieldwork which is reuquired by NY
State. &lt;/p&gt;
&lt;p&gt;
We talk about APCS-A and APCS-P in our CS Ed classes but don&amp;#39;t design
our program around them. A teacher should not only be able to work
with a provide curriculum but also be able to design their own.&lt;/p&gt;
&lt;p&gt;
I think we&amp;#39;re getting it right and I think the reason for this is that
it&amp;#39;s designed by teachers who both know CS and have been teaching it
successfully for a long time and it&amp;#39;s designed to  prepare the types of
teachers we want to work with. &lt;/p&gt;
&lt;p&gt;
Yes, you have to start at nothing but you don&amp;#39;t want to end there and
the more good programs launch the more good teachers we&amp;#39;ll produce.&lt;/p&gt;
&lt;p&gt;
If we build them, they will come.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>