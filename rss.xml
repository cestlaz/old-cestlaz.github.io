<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#39;est la Z</title>
    <link>https://cestlaz.github.io/</link>
    <description>C&#39;est la Z</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Jan 2023 10:47:39 -0400</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>Kicking off 2023</title>
      <link>https://cestlaz.github.io/post/2023/</link>
      <pubDate>Sun, 01 Jan 2023 10:47:39 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/2023/</guid>
      <description>&lt;p&gt;
I never do much on New Years Eve. I can&amp;#39;t remember the last time I
stayed up until Midnight. It&amp;#39;s just not really a big deal with
me. Yesterday, thanks to Natan rushing tickets, I did close out the
year seeing the Metropolitan Opera&amp;#39;s new production of Fedora which
was very enjoyable.&lt;/p&gt;
&lt;p&gt;
Woke up late today - around 5:00, went for my first run of the year
and did the puzzle over coffee. My usual routine.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m still on a school calendar so my year goes from September to
September but since so much of the world uses January first, I thought
I&amp;#39;d share a couple of thoughts on education and tech in 2022 and 2023.&lt;/p&gt;
&lt;p&gt;
On the tech side, 2022 brought a rocky road. We had the cryptocurrency crash
and NFTs came and (hopefully) went and all the big players had massive
layoffs. The Crypto stuff is interesting and I&amp;#39;m curious where it
goes. I haven&amp;#39;t had the time to really get my head around all of it. I
read the &lt;a href=&#34;https://www.bitcoin.com/satoshi-archive/whitepaper/&#34;&gt;original whitepaper&lt;/a&gt;, and played with some code but haven&amp;#39;t
delved into web3 yet. I&amp;#39;ve always felt that NFTs were a scam and I
think that this whole web3 thing is still a technology looking for an
application but it does provide smart contracts and distributed
identity and authentication and that should eventually lead to
something. One of my post retirement side projects is to try to create
something on/for web3 to really see what it&amp;#39;s all about.&lt;/p&gt;
&lt;p&gt;
One thing I do wonder about with web3 looking forward is that a big
deal about it is that it&amp;#39;s distributed. That sounds great, but we&amp;#39;ve
been there before. Whenever we&amp;#39;ve built a distributed platform, the
next thing we do is centralize it. Thin about it:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Distributed&lt;/th&gt;
&lt;th&gt;Centralized&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;IRC&lt;/td&gt;
&lt;td&gt;Slack&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Usenet News&lt;/td&gt;
&lt;td&gt;Reddit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Napster&lt;/td&gt;
&lt;td&gt;Spotify&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Git&lt;/td&gt;
&lt;td&gt;GitHub&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
So, even if Web3 finds its legs and presents us with an amazing
distributed platform, will it be fated to be a distributed platform
controlled by one centralized player.&lt;/p&gt;
&lt;p&gt;
On the tech downturn, it was bound to happen. Interesting enough is
that I&amp;#39;m hearing from friends desperately trying to hire while others
were recently laid off. Messy and unfortunate but I think things will
get better on the company side.&lt;/p&gt;
&lt;p&gt;
On the candidate size, I think we&amp;#39;re going to need a correction
there. CS enrollments have and continue to explode and while hopefully
this will help bring along underrepresented groups, I&amp;#39;m guessing that
there are many new CS majors who are along for the ride and are really
meant for other things. Just like the law school boom and MBA booms
in the late 80s, the hot major becomes oversubscribed frequently for
the wrong reasons.&lt;/p&gt;
&lt;p&gt;
Moving forward both K12 CS and college CS has to do a better job in
communicating what CS and tech majors are for and preparing students
for all careers with the correct amount of CS. I don&amp;#39;t think that&amp;#39;ll
happen much though in 2023.&lt;/p&gt;
&lt;p&gt;
On the CS Ed front, for the most part, things have been chugging
along. At least in NY people are starting to recognize that while the
PD based model was essential to start CS4All things have to pivot to
pre-service programs. In general there also seems to be movement in
understanding that not every CS major wants to be a software engineer
(or a PhD candidate, which has long been the focus of most CS
programs) and we&amp;#39;re starting to see people waking to the fact that the
CS that&amp;#39;s appropriate and needed by the CS major is not the same as
that for the software engineer, other tech sector roles and possibly
most importantly everyone else. &lt;/p&gt;
&lt;p&gt;
The big negative in NY for CS Ed is that the state came out saying
that if you taught at least 1 CS class you can get grandfathered in
and won&amp;#39;t need CS certification for 10 years. This means we&amp;#39;re going
to have a lot of under-prepared CS teachers in the state for a long
time.&lt;/p&gt;
&lt;p&gt;
Looking forward in CS Education, I hope to see more preservice
programs come online in New York state and I hope that discussion of
CS for non-CS majors, non PhD candidates, and non software engineers
continues to expand.&lt;/p&gt;
&lt;p&gt;
It looks like web3 will take a bit of a back seat though and the big
topic in the next few months will be chatGPT and other AI systems.&lt;/p&gt;
&lt;p&gt;
I say AI systems, but as far as I can tell, chatGPT is really just
pattern matching on a more massive scale. Pretty impressive but not
closer to &amp;#34;intelligence.&amp;#34; There&amp;#39;s been talk about using it to solve
programming problems and write essays and this morning, I saw
something about asking it to lesson plan.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve played with it a bit and it is impressive but I&amp;#39;m predicting that
hype will fade as teachers will adjust. ChatGPT and related projects
also bring into question the rights on the training materials and that
it might threaten companies like Google. I&amp;#39;m not betting on that last
one as I&amp;#39;m guessing that Google&amp;#39;s got plenty of people working on
similar technologies internally.&lt;/p&gt;
&lt;p&gt;
So, we&amp;#39;ll see what 2023 brings in tech and education. I do plan to
write more on chatGPT in the coming months but we&amp;#39;ll see what other
themes emerge.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Finally some down time</title>
      <link>https://cestlaz.github.io/post/down-time/</link>
      <pubDate>Fri, 30 Dec 2022 11:56:52 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/down-time/</guid>
      <description>&lt;p&gt;
Since entering end of term grades I&amp;#39;ve finally had a few days of legit
down time. It&amp;#39;s been a long time. In the past few years, I went right
from Fall finals int dealing with whatever issues arose around
planning the next teacher ed cohort.&lt;/p&gt;
&lt;p&gt;
Not so this year. The three classes I&amp;#39;m teaching are the same as last
year so while I&amp;#39;ll be doing a lot of tweaking, planning, and updating
once we get started, there&amp;#39;s not much to do now. For the teacher ed
cohort, I&amp;#39;m advocating starting our next one in the Fall so again,
nothing to do for a while.&lt;/p&gt;
&lt;p&gt;
So, what have I been doing with this newly freed time? One thing I&amp;#39;ve
gotten to do is a bit more painting - something I decided to pick up
during the pandemic - something to get me off computer screens for a
while. I&amp;#39;m just a beginner but I&amp;#39;m enjoying it and making progress.&lt;/p&gt;

&lt;img  width=&#34;200&#34; height=&#34;200&#34; src=&#34;https://cestlaz.github.io/img/down-time/one.jpg&#34;/&gt;
&lt;img  width=&#34;400 height=&#34;400&#34; src=&#34;https://cestlaz.github.io/img/down-time/two.jpg&#34;/&gt;
&lt;img  width=&#34;200 height=&#34;200&#34; src=&#34;https://cestlaz.github.io/img/down-time/three.jpg&#34;/&gt;
&lt;p&gt;
Another thing I&amp;#39;ve been doing is getting back to some
programming. Nothing huge but it&amp;#39;s something I haven&amp;#39;t done in a
while. Last December (2021) I did a few &lt;a href=&#34;http://adventofode.com&#34;&gt;Advent of Code&lt;/a&gt; problems -
basically the easier ones at the start of the month that I could knock
out quickly. I stopped when the end of semester crush got bad. Same
thing this year. In between, I didn&amp;#39;t write a line of code. That&amp;#39;s not
entirely true - I wrote some small snippets for my classes but I don&amp;#39;t
really count that sinces it was all variations on things I&amp;#39;ve written
a hundred times already.&lt;/p&gt;
&lt;p&gt;
Since the semester ended, I&amp;#39;ve been able to go back and finish off a
couple of &amp;#34;harder&amp;#34; problems and also dive in to a couple of of other
small projects. One, a tool to automate some GitHub work and another a
Slack bot to make emoji polls. This got me back to dealing with web
code, working through OAuth and a few more little things. I did all of
that in Clojure but also got back to playing a bit with Rust.&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t think it&amp;#39;s absolutely necessary for CS teachers to write
programs in their spare time but for many CS teachers, and certainly
for me, there are a lot of benefits. On the practical side, it helps
me keep up with current technologies. When I started teaching, there
was no web. Then HTML. Soon after Perl was king along with CGI. Later,
Javascript brought us Ajax. Fast forward and we&amp;#39;re using things like
React. All very different technologies and all require different
approaches. Even if I&amp;#39;m not teaching web development, keeping current
also keeps me current in good development practices, architecting
projects and other aspects of coding through which I can help my
students.&lt;/p&gt;
&lt;p&gt;
If I&amp;#39;m exploring with contest problems like Advent of Code, I&amp;#39;ll learn
new algorithms and experiment with data structures - also something
that helps me as a teacher.&lt;/p&gt;
&lt;p&gt;
Of course these are pretty obvious and on the surface. Another HUGE
benefit is it helps place me in to the students mindset. When working
on new projects, one has to find resources and information on the
web. Learn new libraries, tools, and techniques, and of course
DEBUGGING!!!!!!!&lt;/p&gt;
&lt;p&gt;
Since I&amp;#39;m retiring from Hunter at the end of the Spring, I fully
expect to continue to be able to dedicate some time to
programming. After all, even though I plan to work to help transition
Hunter to the next guy I expect that to be less taxing than if I were
to continue to be the guy.&lt;/p&gt;
&lt;p&gt;
Programming, reading, and other personal professional development is
really important to teachers. I lost that time over the past couple of
years, but prior, at Hunter I had it. The real shame is that K12
teachers are rarely given the time and I think their students are worse
off as a result.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Things they remember that we forgot</title>
      <link>https://cestlaz.github.io/post/forgot/</link>
      <pubDate>Sat, 17 Dec 2022 06:43:31 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/forgot/</guid>
      <description>&lt;p&gt;
Some time ago I wrote about some of the things our students remember
(&lt;a href=&#34;https://cestlaz.github.io/oldblog/blight-move/&#34;&gt;link&lt;/a&gt; - sorry for the bad formatting). Lessons, concepts, stories, or
even small jokes I remember telling but had no idea that they left a
lasting impression on any students.&lt;/p&gt;
&lt;p&gt;
Fast forward to yesterday. I spent some time yesterday at a friend, a
former student&amp;#39;s company for their holiday get together. My friend was
telling a story about how I helped get him started - I won&amp;#39;t get into
details but while I do remember the overall impression of including
and encouraging him, I don&amp;#39;t remember the detailed specifics. Another
sign of getting old. &lt;/p&gt;
&lt;p&gt;
It made me think of not only the things they remember that we remember
but also what most surely be many things that as older teachers we no
longer remember yet may have stuck with our students.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve spoken to former students a few times and they&amp;#39;d tell me about
something they&amp;#39;ll &amp;#34;always remember&amp;#34; and usually it&amp;#39;s a pretty cool but
ultimately, just a small CS technique or work approach fact. Other
times, like the story that was told yesterday, it&amp;#39;s a reminder that at
times we can have a tremendous positive impact and sometimes we don&amp;#39;t
have to do much more than be decent human beings. Over the last few
years, I&amp;#39;ve been told a few times by older alums, just as a throwaway
comment how I created a &amp;#34;safe place&amp;#34; for them. Funny, I may have done
that by some throwaway comment or action by me and it meant a lot to
them. Now yeas later, I&amp;#39;m the one who&amp;#39;s greatly moved by their
throwaway comments.&lt;/p&gt;
&lt;p&gt;
Unfortunately, there are probably things I&amp;#39;ve inadvertently said or
done in my career that have adversely affected some students but for
better or worse, we rarely get feedback on that.&lt;/p&gt;
&lt;p&gt;
It goes to show the tremendous impact teachers can have even with
small gestures. &lt;/p&gt;
&lt;p&gt;
Even the good stuff, many teachers never hear about it. This is one
area that I feel both truly fortunate and humbled. Being in touch with
so many former students and with so many now friends, I&amp;#39;ve been given
the gift of hearing and seeing what I&amp;#39;ve done. I can&amp;#39;t say why, but I
think those of us who teach CS seem to get this opportunity more than
other teachers, even when our students go into totally unrelated
fields.&lt;/p&gt;
&lt;p&gt;
I think about my old teacher, mentor, and friend &lt;a href=&#34;https://cestlaz.github.io/posts/2012-05-09-my-favorite-year-teacher/&#34;&gt;Herb Greenhut&lt;/a&gt; - a
history teacher who made such an impact that he was frequently
included in his former students life events - weddings. receiving
birth announcements and so on and even got a Mayoral Citation in his
later years. I&amp;#39;ve been fortunate to get to enjoy some of these &amp;#34;gifts&amp;#34;
but I also know that many teachers, better than I and very well
regarded have not. I blame that on circumstance.&lt;/p&gt;
&lt;p&gt;
Why am I writing about this? Beyond yesterday&amp;#39;s reminder, I&amp;#39;ve been
reflecting more about my career as I prepare to leave the classroom
full time. It&amp;#39;s also important to point out to other teachers out
there that yes, our profession is in many ways thankless but there are
some rewards that money can&amp;#39;t buy and even if you&amp;#39;re not hearing about
the impact you&amp;#39;ve had, you&amp;#39;ve probably still had it.&lt;/p&gt;
&lt;p&gt;
For the younger teachers, it&amp;#39;s there, you just have to stick with it
long enough for your current students to go out in to the world.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>In Education, What&#39;s New is Old</title>
      <link>https://cestlaz.github.io/post/old-is-new/</link>
      <pubDate>Wed, 07 Dec 2022 12:44:43 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/old-is-new/</guid>
      <description>
&lt;p&gt;
I noticed a tweet the other day talking about gamification of
education. It got me thinking.&lt;/p&gt;
&lt;p&gt;
Gamification isn&amp;#39;t specifically the hot trend right now, at least not
as &amp;#34;the one true way&amp;#34; to teach but every few years it surges as this
great new idea to fix education.&lt;/p&gt;
&lt;p&gt;
When it surges, it&amp;#39;s always the hot new thing but it never really is.&lt;/p&gt;
&lt;p&gt;
Gamification has been around at least since I was in grade school and
it was never a magic bullet. It might not have been called
gamification but it was there.&lt;/p&gt;
&lt;p&gt;
Back in grade school, those stickers you got - gamification. Earn a
pizza party for the class gamification. Even those leveled readers
were gamified. I mean, you literally leveled up.&lt;/p&gt;
&lt;p&gt;
I remember early in my career I had to take a number of education
classes and gamifying was a big strategy that the professors all
taught to engage all the students. Contrast that with the advice I got
in schools by pretty much every experienced teacher who took me under
their wings - some kids are motivated by stickers but many
aren&amp;#39;t. It&amp;#39;s a superficial trick and you&amp;#39;ll only get so much mileage
out of it. It&amp;#39;s not the be all and end all.&lt;/p&gt;
&lt;p&gt;
Of course, ed tech companies can thrive on gamification because
they&amp;#39;re specifically catering to customers who thrive on it but it&amp;#39;s
not a magic bullet by any means. On the other hand, it can also be low
effort to implement so there are plenty of times when it&amp;#39;s worth a
shot.&lt;/p&gt;
&lt;p&gt;
This got me thinking about other teaching techniques that were the new
hot thing but were in fact around back in the day and more often than
not, nothing special.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s take a look at a few:&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
The Flipped Classroom
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
This is a big one the big way to fix education. Have the kids watch
videos before class and then do other things in class.&lt;/p&gt;
&lt;p&gt;
New idea?&lt;/p&gt;
&lt;p&gt;
Not so much.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s called homework.&lt;/p&gt;
&lt;p&gt;
Homework can be used to review past concepts and also to introduce new
ones.&lt;/p&gt;
&lt;p&gt;
So, not a new idea at all but does it work?&lt;/p&gt;
&lt;p&gt;
Not really. Sure, anything that moves from college style lecturing to
active learning during class time is good but &amp;#34;flipping the classroom&amp;#34;
has the same issues as homework.&lt;/p&gt;
&lt;p&gt;
Not all kids do or understand the homework and if you&amp;#39;re class
activities depend on what&amp;#39;s done the night before, you&amp;#39;re in trouble.&lt;/p&gt;
&lt;p&gt;
On top of that, there&amp;#39;s been a recent movement against homework that&amp;#39;s
also been gaining traction an that&amp;#39;s certainly contrary to flipping
the classroom.&lt;/p&gt;
&lt;p&gt;
So, flipping the classroom - new? Not so much. Effective? Sometimes
but like anything else, it&amp;#39;s not a magic bullet just a tool that can
be usefully or poorly deployed.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Code Tracing
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Another practice I&amp;#39;ve seen hyped more is Code Tracing. This one&amp;#39;s
easy  - it&amp;#39;s a good practice. It&amp;#39;s not new though. Code tracing - you
write out a table of variable values and you play computer, going
through the code line by line.&lt;/p&gt;
&lt;p&gt;
This is actually very similar to how students learned to graph linear
and quadratic equations. Make a table for x, and y, trace through the
algorithm, and chart the results.&lt;/p&gt;
&lt;p&gt;
Good practice but not new.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Subgoal Labeling
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Another good practice that&amp;#39;s cropped up in the past few years. Once
again, not new.&lt;/p&gt;
&lt;p&gt;
I didn&amp;#39;t call it subgoal labelling but I was writing code that way
back in the 1980s.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
Discovery Learning
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Back when I started teaching, cooperative learning was the true way,
more recently discovery learning took the mantel. Fortunately we&amp;#39;re
swinging back to more generic active learning which can incorporate
discovery learning and other techniques so maybe where actually
getting somewhere.&lt;/p&gt;
&lt;p&gt;
The thing about discovery learning is that even when I was a kid, we
were in classes where some of our teachers developed experiential
units where student groups worked at their own pace through activities
that led them through learning a topic - discovery learning.&lt;/p&gt;
&lt;p&gt;
Now, this practice can be good but it&amp;#39;s also not &amp;#34;the way.&amp;#34; I read
posts and articles from acclaimed schools and teachers about how they
do everything using discovery learning. Then you look further. They&amp;#39;re
almost always in rich private schools with small classes and almost
unlimited resources. Yeah - try that every day in an overcrowded
under resourced public school.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
Parsons Problems
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Let&amp;#39;s close with one more. Parsons problems - scrambled lines of code &lt;/p&gt;
&lt;p&gt;
Like code tracing and subgoal labeling, Parsons Problems appear to be
a useful teaching technique and like the former two, nobody has
claimed them to be the be all and end all - all are just tools in the
tool box for a teacher to use as appropraite.&lt;/p&gt;
&lt;p&gt;
Parsons problems though are also not new - they&amp;#39;re a CS take on
scrambled paragraphs.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-6&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
Final thoughts
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-6&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Now, just because these new ideas aren&amp;#39;t new doesn&amp;#39;t mean they&amp;#39;re
bad. My big complaint about the ones I don&amp;#39;t like is that they&amp;#39;re
mis-applied as a cure all not that they can&amp;#39;t be effective when used
appropriately.&lt;/p&gt;
&lt;p&gt;
The point is that these new ideas that you&amp;#39;ll hear about from your ed
professors or read in the research aren&amp;#39;t necessarily new.&lt;/p&gt;
&lt;p&gt;
To be honest, most teachers will get their best tools from their peer
group - fellow teachers, frequently more experienced ones or if
they&amp;#39;re lucky, In service or pre-service instructors who are in fact
experienced K12 teachers who are sharing their practices. This is as
opposed to when those teachers are employed to teach someone elses
canned curriculum.&lt;/p&gt;
&lt;p&gt;
In any event, I always get a kick out of seeing a &amp;#34;new&amp;#34; practice and
then thinking about how old it actually is - if you&amp;#39;ve got some to
share, please do.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Advent 2022 - day 3 - sets</title>
      <link>https://cestlaz.github.io/post/advent-2022-day03/</link>
      <pubDate>Sat, 03 Dec 2022 10:13:56 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/advent-2022-day03/</guid>
      <description>
&lt;p&gt;
&lt;a href=&#34;https://adventofcode.com/2022/day/3&#34;&gt;Day 3&lt;/a&gt; ended up being a quick one. That is, as long as your language
supports set operations. You can do it without set operations but it&amp;#39;s
easier if you&amp;#39;ve got them.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Part 1
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Input is a file of text where each line is an input.&lt;/p&gt;
&lt;p&gt;
You have to read each line, split it in half  and then find the common
letter between the left and right halves and then apply their scoring
rules on that letter.&lt;/p&gt;
&lt;p&gt;
For scoring, lower case letters are valued a=1, b=2 etc. and for upper
case, A=27, B=28 and so on.&lt;/p&gt;
&lt;p&gt;
For scoring, this is a nice opportunity to talk about ASCII values and
the relationship between characters and integers. For lower case
letters you can use the formula &lt;strong&gt;int(letter) - 97 + 1&lt;/strong&gt; where int(x)
returns the ASCII code for letter &lt;code&gt;x&lt;/code&gt;. The 97 is the value for &amp;#39;a&amp;#39; so
that will map the lower case letter to a value of  0 for &amp;#39;a,&amp;#39; 1 for &amp;#39;b,&amp;#39;
etc.. We add one becuase the question says to start with 1 for &amp;#39;a.&amp;#39;&lt;/p&gt;
&lt;p&gt;
For the upper case letters, we can use &lt;strong&gt;int(letter)-65 + 27&lt;/strong&gt; where 65
is the value for &amp;#39;A.&amp;#39; In this case, we add an offset of 27 since
that&amp;#39;s are lowest upper case score.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the clojure code but it would be similar in Python or other
languages:&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;defn &lt;/span&gt;score [letter]
  (&lt;span style=&#34;color:#66d9ef&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;Character/isUpperCase&lt;/span&gt; letter)
    (+ &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; (-  (int letter) (int &lt;span style=&#34;color:#e6db74&#34;&gt;\A&lt;/span&gt;)))
    (inc (-  (int letter) (int &lt;span style=&#34;color:#e6db74&#34;&gt;\a&lt;/span&gt;)))
    ))&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;
The processing of the data is also pretty straight forward. Here&amp;#39;s a
Clojure solution:&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;  (&lt;span style=&#34;color:#66d9ef&#34;&gt;defn &lt;/span&gt;parse-part1 [line]
    (&lt;span style=&#34;color:#66d9ef&#34;&gt;let &lt;/span&gt;[size (/  (count line) &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
          left (take size line)
          right (drop size line)
          common (&lt;span style=&#34;color:#a6e22e&#34;&gt;set/intersection&lt;/span&gt; (set left) (set right))]
      (&lt;span style=&#34;color:#a6e22e&#34;&gt;score&lt;/span&gt; (first common))))&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;
Line 2&amp;#39;s Python equivalent would be &lt;code&gt;size = len(line)/2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;
Line 3 takes the first half and stores it in left and line 4 drops the
first half and keeps the right hand side.&lt;/p&gt;
&lt;p&gt;
Line 5 uses Clojure&amp;#39;s set operations to find the letter in common.&lt;/p&gt;
&lt;p&gt;
To solve part 1 we just split the data, which starts as a long
string, split on newlines and then run the parse-part1 function
defined above on each line. We then use reduce to add up all the results.&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;defn &lt;/span&gt;part1 [data]
  (&lt;span style=&#34;color:#a6e22e&#34;&gt;-&amp;gt;&amp;gt;&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;str/split&lt;/span&gt; data &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;)
       (map  parse-part1)
       (reduce +)))&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;
Full code can be found &lt;a href=&#34;https://github.com/zamansky/advent2022/blob/main/src/day03.clj&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
A Python solution would look pretty similar. Java would be tricker for
beginners because they wouldn&amp;#39;t know about sets and using them
requires more overhead than either Clojure or Python. The problem can
still be solved by beginners. An easy, if inefficient way of finding
the intersection would be looping over all the characters in one
string and looking for it in the other.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Part two
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Part two was very similar. Instead of splitting each line in half, we
had to group entire lines by three.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the clojure code:&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;defn &lt;/span&gt;part2 [data]
  (&lt;span style=&#34;color:#a6e22e&#34;&gt;-&amp;gt;&amp;gt;&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;str/split&lt;/span&gt; data &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;)
       (map set)
       (&lt;span style=&#34;color:#a6e22e&#34;&gt;partition&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
       (map  &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;(reduce set/intersection %))
       (map first)
       (map score)
       (reduce +)))&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;
Instead of munging the data and then turning strings into sets, we
first use line 2 to transform the list of strings into a list of sets.&lt;/p&gt;
&lt;p&gt;
Then, we use (partition 3) in line 4. This groups the list 3 at a
time. Then, going through the rest of the lines&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;line 5 - find the intersection within the group fo 3&lt;/li&gt;
&lt;li&gt;line 6 - there will be one letter in the result, but we have to use
&lt;strong&gt;first&lt;/strong&gt; to extract the value since the result is a set.&lt;/li&gt;
&lt;li&gt;line 7 - score all the letters&lt;/li&gt;
&lt;li&gt;line 8 - add them up&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
A nice little problem. With beginners, you get to talk about the ASCII
character relationship and if your language supports it, you can play
with sets.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2022 - Days 1 and 2</title>
      <link>https://cestlaz.github.io/post/advent-2022-day01-01/</link>
      <pubDate>Fri, 02 Dec 2022 13:59:06 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/advent-2022-day01-01/</guid>
      <description>
&lt;p&gt;
It&amp;#39;s &lt;a href=&#34;https://adventofcode.com/&#34;&gt;Advent of Code&lt;/a&gt; season again. Every day a new two part programming
challenge and once again I&amp;#39;m taking part. At least until grading and
other end of term obligations end up eating my lunch.&lt;/p&gt;
&lt;p&gt;
I wasn&amp;#39;t planning on writing anything up but the first two days looked
like nice problems for CS1 or even CS0 students and since my friend
Steve was &lt;a href=&#34;https://github.com/scerruti/AoC2022&#34;&gt;writing up&lt;/a&gt; his take, I thought I&amp;#39;d at least comment on the
first two.&lt;/p&gt;
&lt;p&gt;
I also recorded a code through in Clojure which you can find at the
bottom of this post.&lt;/p&gt;
&lt;p&gt;
Even though I&amp;#39;m using Clojure, a similar approach can be taken in
languages like Python or Javascript. If you enjoy this type of
analysis please read Steve&amp;#39;s &lt;a href=&#34;https://github.com/scerruti/AoC2022&#34;&gt;posts&lt;/a&gt;. His approach is usually different
from mine as he&amp;#39;s working in Java and so is more OOP centric. I love
it when you can think about problems in different ways.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Day 1 - Calorie Counting
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Problem link: &lt;a href=&#34;https://adventofcode.com/2022/day/1&#34;&gt;&lt;a href=&#34;https://adventofcode.com/2022/day/1&#34;&gt;https://adventofcode.com/2022/day/1&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
Here the input was lines of numbers with an extra blank linke
separating sets of inputs:&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
1000
2000
3000

4000

5000
6000

7000
8000
9000

10000
&lt;/pre&gt;
&lt;p&gt;
Here, the first three numbers (1000,2000,3000) represent what the
first elf is carrying, 4000 the second elf, 5000, and 6000 the third,
etc..&lt;/p&gt;
&lt;p&gt;
The challenge was to figure out which elf carried the most.&lt;/p&gt;
&lt;p&gt;
A first year student might read a line at a time building a
sum. Whenever you see a blank line, see if that&amp;#39;s your largest sum so farand
if so, make a not of it.&lt;/p&gt;
&lt;p&gt;
In Python:&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;sum = 0
bigsum  = 0
for line in open(&amp;#34;../data/day01.dat&amp;#34;).readlines():
    if line == &amp;#34;\n&amp;#34;:
        if sum &amp;gt; bigsum:
            bigsum = sum
        sum = 0
        continue
    sum = sum + int(line)

print(bigsum)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Another approach, the one I used, was to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Convert the input lines into a list by splitting on double newlines&lt;/li&gt;
&lt;li&gt;Convert each list item into a list of numbers&lt;/li&gt;
&lt;li&gt;Sum each list&lt;/li&gt;
&lt;li&gt;Find the largest&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The video below shows this in Clojure, but in Python it might look
like this:   &lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;input = open(&amp;#34;../data/day01.dat&amp;#34;).read().strip().split(&amp;#34;\n\n&amp;#34;)
input = [x.split(&amp;#34;\n&amp;#34;) for x in input]
int_input = [ [int(x) for x in sublist] for sublist in input]
sums = [ sum(x) for x in int_input]
max(sums)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The nice thing here from the teaching point of view is that these
represent two very different approaches and there are probably more.&lt;/p&gt;
&lt;p&gt;
For part 2 you just had to add up the three largest elf loads. If you
used the second approach, instead of finding the largest number, you
can just sort the list and add up the biggest three.&lt;/p&gt;
&lt;p&gt;
The code for all of this in Clojure can be found &lt;a href=&#34;https://github.com/zamansky/advent2022/blob/main/src/day01.clj&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Day 2 - Rock Paper Scissors
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Day 2 was a rock paper scissors problem. Input was a list of &amp;#34;moves:&amp;#34;&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
A Y
B X
C Z
&lt;/pre&gt;
&lt;p&gt;
The above says that in move 1, your opponent played &amp;#34;A&amp;#34; and you played
&amp;#34;Y,&amp;#34; in move two, your opponent &amp;#34;B&amp;#34; and you &amp;#34;X,&amp;#34; etc.&lt;/p&gt;
&lt;p&gt;
The moves meant:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Opponent Letter&lt;/th&gt;
&lt;th&gt;Your letter&lt;/th&gt;
&lt;th&gt;Means&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;Rock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Paper&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;Z&lt;/td&gt;
&lt;td&gt;Scissors&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
Each turned was scored as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Result&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;Points&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;You win&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;You tie&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;You lose&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
Your score for a turn was the results points plus a 1 if you played
Rock, 2 if you played Paper, and 3 if you played Scissors.&lt;/p&gt;
&lt;p&gt;
The part 1 solution had you tracing through a game and figuring out
the score.&lt;/p&gt;
&lt;p&gt;
What&amp;#39;s nice about this problem is that it can be solved by a very raw
beginner with a not too long set of if statements.&lt;/p&gt;
&lt;p&gt;
You can also, however, look at more interesting approaches. &lt;/p&gt;
&lt;p&gt;
First, a student might notice that the moves are &amp;#34;in order&amp;#34; in that
each letter, or move, loses to the one after it. That is, Rock loses
to Paper, Paper loses to scissors, and wrapping around, scissors loses
to rock.&lt;/p&gt;
&lt;p&gt;
Then, they might see that they can assign a numeric value to each
move:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Opponent Letter&lt;/th&gt;
&lt;th&gt;Your letter&lt;/th&gt;
&lt;th&gt;Means&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;Rock&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Paper&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;Z&lt;/td&gt;
&lt;td&gt;Scissors&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
Finally, they might notice that if they find the difference between
your move and your opponent&amp;#39;s move, you&amp;#39;ll get:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;align-right&#34;&gt;Difference&lt;/th&gt;
&lt;th&gt;result&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td&gt;tie - same move&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;td&gt;You win - you&amp;#39;re the &amp;#34;next&amp;#34; move&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;2&lt;/td&gt;
&lt;td&gt;You lose&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
You can also either deal with mod to wrap around or you can put in a
couple of negative values for the difference on your chart.&lt;/p&gt;
&lt;p&gt;
For part 1, my solution basically did what I just described. Make a
look up table to map the letters to values, find the difference, then
look up the points awarded from another look up table.&lt;/p&gt;
&lt;p&gt;
The Clojure code can be found &lt;a href=&#34;https://github.com/zamansky/advent2022/blob/main/src/day02.clj&#34;&gt;here&lt;/a&gt; and the video is embedded below.&lt;/p&gt;
&lt;p&gt;
For part 2, things were a bit tricker but also more interesting. Now,
your &amp;#34;move&amp;#34; of X,Y, or Z didn&amp;#39;t mean Rock, Paper or Scissors. The
letters now said that depending on your letter you had to select a
move so that you would either win, lose or draw based on this table:&lt;/p&gt;
&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Your letter&lt;/td&gt;
&lt;td&gt;Choose a move that results in&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;You losing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;A tie&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Z&lt;/td&gt;
&lt;td&gt;You win&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
This part was a reduction - look at your letter and figure out what to
replace it with - A, B, or C based on the above chart and then just do
what you did in part 1.&lt;/p&gt;
&lt;p&gt;
Here, we notice that we tie if we choose the same move as our
opponent, we win if we choose the &amp;#34;next&amp;#34; move and we loose if we
choose the move that&amp;#39;s two away (mod 3 to deal with the wraparound).&lt;/p&gt;
&lt;p&gt;
The clojure code also &lt;a href=&#34;https://github.com/zamansky/advent2022/blob/main/src/day02.clj&#34;&gt;here&lt;/a&gt; and the walkthrough below.&lt;/p&gt;
&lt;p&gt;
Hope you all enjoyed this.&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/80so4H3mSCM&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Learning a new language - part 2 - Rust</title>
      <link>https://cestlaz.github.io/post/learn-new-language-2/</link>
      <pubDate>Tue, 29 Nov 2022 08:59:11 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/learn-new-language-2/</guid>
      <description>&lt;p&gt;
Last time, I wrote about frustrations in trying to &lt;a href=&#34;https://cestlaz.github.io/post/learn-new-language/&#34;&gt;motivate myself to
learn ocaml&lt;/a&gt;. I could see the strong points but given that I&amp;#39;ve been
using Clojure now for a while, it didn&amp;#39;t really hold any value added
for me in my current situation.&lt;/p&gt;
&lt;p&gt;
Next, I thought I&amp;#39;d explore Rust. On the non-functional style, my go to
languages have always been Python for scripting and small things and C
professionally. I also used and taught C++ and Java. I always loved
C&amp;#39;s minimalism but it was pretty bare bones and Java and C++ while
more modern both also have their warts so it made sense to see if
there was a language I&amp;#39;d like to use instead of any of those three.&lt;/p&gt;
&lt;p&gt;
A number of years ago, I decided to explore Go for this. Go had some
nice features. It didn&amp;#39;t do a full blown object oriented thing but
rather a more lightweight way of defining structures and binding
functionality to structures. I guess like interfaces. Since I&amp;#39;m not a
big OOP person but did like the occasional object abstraction this was
great. I also loved goroutines for concurrency. On the other hand, I
didn&amp;#39;t like the lack of functional goodness so ultimately I stopped
pursuing Go.&lt;/p&gt;
&lt;p&gt;
This time, it was Rust&amp;#39;s turn. Here&amp;#39;s a list of a few of the things
that drew me to Rust:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Good learning resources&lt;/li&gt;
&lt;li&gt;Good dev experience under Emacs&lt;/li&gt;
&lt;li&gt;Static typing&lt;/li&gt;
&lt;li&gt;immutable by default&lt;/li&gt;
&lt;li&gt;Supports the other functional goodness that I like&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I just started playing and so far I like it. In addition to the above
I&amp;#39;m also seeing some other positives. It has pattern matching which I
mentioned in my previous post and the object model looks more like Go
than like C++ or Java so that&amp;#39;s a plus.&lt;/p&gt;
&lt;p&gt;
Another big potential positive is Rust&amp;#39;s concept of ownership. An
informal way of thinking about it is that it&amp;#39;s how Rust deifnes what
can access memory. In Rust,  if you have code like this (lifted from
the Rust Book):&lt;/p&gt;
&lt;div class=&#34;src src-rust&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; s1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; String::from(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; s2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s1;

    println!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{}, world!&amp;#34;&lt;/span&gt;, s1);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
you&amp;#39;ll get an error. Once you assign s1 to s2 then s2 owns the memory
with the string &amp;#34;hello&amp;#34; so when you try to access it, you get an
error. Of course, Rust has ways of dealing with this including 
explicitly declared mutability and references and maybe other things I
haven&amp;#39;t gotten to yet so it isn&amp;#39;t really a problem. I can also see it
as being a really strong way of encouraging the writing of safe
programs.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m pretty early on in the journey - I though I might try Advent of
code this year in Rust but I don&amp;#39;t think I&amp;#39;ll be sufficiently up to
speed on it yet but we&amp;#39;ll see. In any event, it seems to be a very
cool language and a strong C++ or Java alternative.&lt;/p&gt;
&lt;p&gt;
A strong alternative at least in terms of using. For teaching, that&amp;#39;s
another story. For me, learning hasn&amp;#39;t been a problem since I&amp;#39;ve been
around the block a few times but I could see the language being a
challenge for beginners. Lot&amp;#39;s of cognitive overhead for the ownership
thing as well as general scope rules and the way mutability works. I
think all these features are great for the language but I suspect that
it wouldn&amp;#39;t fly very well in a CS0 course.&lt;/p&gt;
&lt;p&gt;
So, I&amp;#39;m feeling that Rust&amp;#39;s a go and I look forward to continuing to
explore the language. If you want to check it out, start here:
&lt;a href=&#34;https://www.rust-lang.org/&#34;&gt;&lt;a href=&#34;https://www.rust-lang.org/&#34;&gt;https://www.rust-lang.org/&lt;/a&gt;&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning a new language - part 1 - functional</title>
      <link>https://cestlaz.github.io/post/learn-new-language/</link>
      <pubDate>Mon, 21 Nov 2022 17:34:28 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/learn-new-language/</guid>
      <description>&lt;p&gt;
Now that I&amp;#39;ve done posting about &lt;a href=&#34;https://cestlaz.github.io/post/retiring-1-why/&#34;&gt;why I&amp;#39;m retiring&lt;/a&gt; we can get back to
our usual blogging.&lt;/p&gt;
&lt;p&gt;
I haven&amp;#39;t really done anything technical over the past couple of
year. The most programming I did in the past 18 months was a
halfhearted effort at the Advent of Code 2021 event last December. I
thought I&amp;#39;d see about picking up a new language to change that. In
doing so, I was reminded of some of my resistances to learning a new
language and how I&amp;#39;ve seen similar from self taught students coming
into my classes.&lt;/p&gt;
&lt;p&gt;
Of course my situation is different - I&amp;#39;m doing this wholly by choice
and once a student is in a class they&amp;#39;ve got to use the prescribed
tool.&lt;/p&gt;
&lt;p&gt;
The contenders on the functional side were Haskell and OCaml and on the
other side, mostly Rust.&lt;/p&gt;
&lt;p&gt;
Today, we&amp;#39;ll talk about the functional side. I decided to look at
OCaml. I had briefly looked at it well over a decade ago but barely
scratched the surface. Haskell I played with a little more deeply but
not much. I decided on OCaml because it was supposed to be more real
world and, to be honest, I get turned off by some of the holier than
though purely functional talk that sometimes occurs.&lt;/p&gt;
&lt;p&gt;
Funny thing is that I&amp;#39;ve had a really hard time getting going - so
much so that I decided that for now I&amp;#39;d explore Rust.&lt;/p&gt;
&lt;p&gt;
So, what&amp;#39;s going on?&lt;/p&gt;
&lt;p&gt;
OCaml looks to have some nice features. It&amp;#39;s functional and I&amp;#39;m a fan
there and it&amp;#39;s also supposed to be pragmatic - you can get real world
stuff done with it. It&amp;#39;s also statically typed which overall I think
is a good thing and it has cool features like pattern matching.&lt;/p&gt;
&lt;p&gt;
For pattern matching, I&amp;#39;m not talking about things like regex or
matching characters in a string but rather something like a really
cool and powerful case or switch statement. Even that description,
though is not doing it justice.&lt;/p&gt;
&lt;p&gt;
I think my problem is that I already am comfortable and enjoy
programming in Clojure. Clojure is functional and pragmatic but while
Clojure doesn&amp;#39;t have pattern matching built in but there is a library
that basically accomplishes the same thing. As to the type system,
Clojure is dynamically typed and while that would be an issue if I
were working on large real projects and/or on a team, I&amp;#39;m just writing
little toys by myself. If I want stronger typing, there are ways of
doing that in Clojure. True, it&amp;#39;s not required but working by myself,
I have that option, should I choose. It&amp;#39;s not the same - I know but as
I said, I&amp;#39;m not doing anything big, important or with other people
right now.&lt;/p&gt;
&lt;p&gt;
So, basically, every time I try to dive in to OCaml, I end up feeling
that &amp;#34;I can already do that and do it better in Clojure.&amp;#34; I&amp;#39;m guessing
I&amp;#39;d feel the reverse had I started on the OCaml side. &lt;/p&gt;
&lt;p&gt;
This has happened to me before. I was an early Python adopter feeling
that it was a huge improvement over Perl. A while later, Ruby came out
and shortly after that, Ruby on Rails became a thing. Every time I
looked into Ruby I had to stop - I could already do and do better in
Python. By then, there were enough tools to compete with Rails even
though they weren&amp;#39;t as mainstream and overall I preferred Python. I
never did end up learning Ruby.&lt;/p&gt;
&lt;p&gt;
I felt a similar sluggishness when I went from C++ to Java - something
I had to do because of the AP Exam change but I pushed through since I
had to teach it and ultimately, I&amp;#39;ve learned to appreciate the good
and curse the bad of both languages.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve seen similar blocks or resistance from who&amp;#39;ve had prior
programming experiences over the years. From students who seemed
to be taught more &amp;#34;the language&amp;#34; rather than CS using the language. I
know that&amp;#39;s a nebulous thing to say but I think some of you will catch
my drift. It&amp;#39;s subtleties like saying &amp;#34;okay, we&amp;#39;re repeating this
process, here&amp;#39;s how we do it in language such and such&amp;#34; vs &amp;#34;here&amp;#39;s how
we repeat this process period&amp;#34; and show the language construct.&lt;/p&gt;
&lt;p&gt;
My former math chairman at Stuy said he once, back in the 80s asked Marvin
Minsky what they should be teaching for CS in High School. Minsky
said, and I paraphrase, &amp;#34;nothing, you&amp;#39;ll only mess them up. At most
teach them to type.&amp;#34; Of course that was a different time and I
&lt;strong&gt;strongly&lt;/strong&gt; disagree with that statement but I do think we have to look
at how students entering our classes are or are not prepared and
adjust accordingly. &lt;/p&gt;
&lt;p&gt;
So, in the end, it&amp;#39;s back to Clojure for me on the functional side and
I&amp;#39;ll try to do an OCaml dive sometime in the future.&lt;/p&gt;
&lt;p&gt;
Fortunately, I&amp;#39;m having an easier time getting in to Rust. More about
that next time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Retiring part 3 - What&#39;s Next</title>
      <link>https://cestlaz.github.io/post/retiring-3-whats-next/</link>
      <pubDate>Wed, 09 Nov 2022 19:40:01 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/retiring-3-whats-next/</guid>
      <description>
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Links to the three posts in this series:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;If you&amp;#39;re seeing this before the previous two posts, I&amp;#39;d encourage you
to read post 1 and 2 first.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Post 1: &lt;a href=&#34;https://cestlaz.github.io/post/retiring-1-why/&#34;&gt;Why I&amp;#39;m retiring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Post 2: &lt;a href=&#34;https://cestlaz.github.io/post/retiring-2-accomplishments/&#34;&gt;What was accomplished at Hunter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Post 3: &lt;a href=&#34;https://cestlaz.github.io/post/retiring-3-whats-next/&#34;&gt;This post&lt;/a&gt;   &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
As I said at the start of these three posts, I do want to stay in the
game. Maybe take a break and definately slow down but I still think
I&amp;#39;ve got something to contribute.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m writing this so that you can have it in the back of your mind in
case a great match appears either soon or somewhere down the road.&lt;/p&gt;
&lt;p&gt;
I think I posses a somewhat unique set of skills and experiences. A
thirty year teacher with a strong CS/Tech background, I&amp;#39;ve taken students
from blank slate to industry, created entire programs, and worked with
educators from early grades through college level.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve also worked as a software engineer and have remained in touch and
connected with the tech industry.&lt;/p&gt;
&lt;p&gt;
What might be appealing?&lt;/p&gt;
&lt;p&gt;
Not sure.&lt;/p&gt;
&lt;p&gt;
Probably not full time and since I&amp;#39;ll be collecting my pension it&amp;#39;ll
be about fit much more than money. Still, I&amp;#39;d never say never on the
right opportunity.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;d love the opportunity to travel more - even if just in the
region. I think that&amp;#39;s my biggest regret is that Devorah and I really
never had the opportunity or took the time to see the country or
world.&lt;/p&gt;
&lt;p&gt;
Maybe if a company wants someone as a rep at conferences like all
those Ed Conference sponsors or who knows what else.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;d also be open to longer gigs elsewhere - a month, a semester, or
even a year on an interesting project where we can get to know a new
community.&lt;/p&gt;
&lt;p&gt;
I know the big tech companies work with colleges to try to help them
do what I did with Daedalus at Hunter. Given that none of them have
people with the range of educational experiences and successes I
have, they could do far worse than engaging me to help with these
programs.&lt;/p&gt;
&lt;p&gt;
Maybe some colleges, universities, or governments have a side project
and they could use someone like me.&lt;/p&gt;
&lt;p&gt;
To be honest, I don&amp;#39;t know but figured this was a good way to get the
word out.&lt;/p&gt;
&lt;p&gt;
So, thanks for reading and keeping me in mind.&lt;/p&gt;
&lt;p&gt;
Now, back to our regular blogging program.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Links to the three posts in this series:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;ul&gt;
&lt;li&gt;Post 1: &lt;a href=&#34;https://cestlaz.github.io/post/retiring-1-why/&#34;&gt;Why I&amp;#39;m retiring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Post 2: &lt;a href=&#34;https://cestlaz.github.io/post/retiring-2-accomplishments/&#34;&gt;What was accomplished at Hunter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Post 3: &lt;a href=&#34;https://cestlaz.github.io/post/retiring-3-whats-next/&#34;&gt;This post&lt;/a&gt;   &lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Retiring part 2 - Accomplishments</title>
      <link>https://cestlaz.github.io/post/retiring-2-accomplishments/</link>
      <pubDate>Wed, 09 Nov 2022 15:35:50 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/retiring-2-accomplishments/</guid>
      <description>
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Links to the posts in this series
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;If you&amp;#39;re reading this before the previous post, I&amp;#39;d recommend going
back and reading that one first. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Post 1: &lt;a href=&#34;https://cestlaz.github.io/post/retiring-1-why/&#34;&gt;Why I&amp;#39;m retiring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Post 2: &lt;a href=&#34;https://cestlaz.github.io/post/retiring-2-accomplishments/&#34;&gt;This post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Post 3: &lt;a href=&#34;https://cestlaz.github.io/post/retiring-3-whats-next/&#34;&gt;What I think I&amp;#39;ll be looking for next&lt;/a&gt;   &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
I think I&amp;#39;ve carved out a somewhat unique career. Never set out to be
a teacher and a couple of different turns here or there and things
could have been very different. When I started teaching, I thought I&amp;#39;d
probably, if anything  become a math chair and that was actually the
plan at Stuy until Richie Rothenberg, the math chair at the time
unexpectedly passed away in the late nineties. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Pre Hunter recap
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Just a quick recap. I started my career as a Programmer Analyst at
Goldman Sachs back in the day. I&amp;#39;d say Software Engineer but that
title didn&amp;#39;t exist back then. From there I went into teaching for two
decades, mostly at Stuyvesant.&lt;/p&gt;
&lt;p&gt;
At Stuyvesant I built the CS program, created classes, trained teachers and
shepherded hundreds, perhaps thousands of students towards tech
careers. My continued relationships with these former students left me
in a unique position as someone with strong CS chops, strong teaching
and education chops along with professional programming experience and strong ties
to the tech industry.&lt;/p&gt;
&lt;p&gt;
During this time, I played my part in getting the
ball rolling for K12 CS Ed. Certainly at Stuy but I&amp;#39;d like to think
beyond it as well.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
The Hunter chapter
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Almost seven years ago, I came over to Hunter to work on two major
projects. One was to develop and run an undergraduate honors computer
science program at the college and the other as to create and run
computer science teacher certification programs.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
Undergraduate CS Honors
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
Prior to my joining Hunter, they already had a long established CS
department and program. It was (and is) both as good as any other
program out there and as bad. There were though, a few particular
issues. First, Hunter&amp;#39;s program was either unknown to high school
students or had a poor reputation due to the misconception that a
liberal arts school can&amp;#39;t do good CS and, at the tech company end,
Hunter was a total unknown. &lt;/p&gt;
&lt;p&gt;
Hunter&amp;#39;s program was a typical college CS program in that it did a
great job preparing strong applicants for grad school but did nothing
to prepare them for tech careers and there was no connection with the
NY Tech industry.&lt;/p&gt;
&lt;p&gt;
When I started, top tech companies never recruited at Hunter and most
Hunter students never even applied for internships prior to
graduating - they didn&amp;#39;t know they were supposed to.&lt;/p&gt;
&lt;p&gt;
Over the past 7 years there have been tremendous changes.&lt;/p&gt;
&lt;p&gt;
My first cohort had 8 students. My latest has 64. My honors program and Hunter CS in general is
now a known CS destination in many NY high schools. Applications have
grown from around 50 to many hundreds and each year I field more and
more calls of students trying to decide between my program and other
top CS programs - I win some, I lose some.&lt;/p&gt;
&lt;p&gt;
On the exit side, my Daedalus students regularly end up at top tech
companies and the overall profile of Hunter CS is much greater and
more positive in the tech world.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve created new classes that integrate software engineering practices
with traditional CS and built many unique partnerships and programs over
the past 7 years.&lt;/p&gt;
&lt;p&gt;
My trouble is that the Daedalus program is in full swing. It has to be
maintained but the job is basically done. At the same time, I don&amp;#39;t
have the ability to get the reforms I&amp;#39;ve brought to my program to the
greater Hunter CS population. Sure, I&amp;#39;ve gotten some initiatives
started that are available to all Hunter students but a lot of the
core stuff that I&amp;#39;ve worked into my courses are only available to the
Daedalus students and I don&amp;#39;t have a way of changing that.&lt;/p&gt;
&lt;p&gt;
So, I think I&amp;#39;ve done what I can do. The original goal was to create
this honors program and I think we&amp;#39;ve gone well beyond. Hunter, and
Daedalus in particular, has a higher profile with high schools and
employers and Daedalus students get the best of CS, the practical
software engineering skills they&amp;#39;ll need and unique partnerships with
the tech community.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-5&#34;&gt;
Teacher Certification
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
My other major hat was on the K12 CS teacher side. First we had to
lobby the state to create the certification. I visited Albany a number
of times and spoke to my share of Regents but the real heavy lifting
went to Hunter&amp;#39;s President and the Dean of the Ed school.&lt;/p&gt;
&lt;p&gt;
Meanwhile, I created our masters and certificate programs while
doing my part in the whole K12 CS effort. I created new classes and
worked with some of my old teaching pals from Stuy to get ready to run
the program once the state approved everything. &lt;/p&gt;
&lt;p&gt;
Three years ago everything got really rolling. Hunter had the first active
certificate and masters programs in the state. Thanks to the generous
support of Gotham Gives, we were able to start a cohort of 21 working
teachers towards CS certification. They were joined by 2 masters
students.&lt;/p&gt;
&lt;p&gt;
A year later, New York State had its first certified CS teachers. &lt;/p&gt;
&lt;p&gt;
The following year, again with support from Gotham Gives, this time
joined by Google, we started another 24 working teachers along with 5
more masters students.&lt;/p&gt;
&lt;p&gt;
Now in our third cohort we&amp;#39;ve got another 56 working through the
programs.&lt;/p&gt;
&lt;p&gt;
By the time our third year ends, we&amp;#39;ll have around 100 certified CS
teachers in New York City.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m equally proud of the fact that we&amp;#39;ve got five teachers from the
Fingerlakes region in our program.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been pretty vocal over the years as to what I think a good CS
teacher looks like and I&amp;#39;m super proud that our brand of CS teaching
can now be found across the city and in fact across the state.&lt;/p&gt;
&lt;p&gt;
If you
think about the number of students these teachers reach each year,
that&amp;#39;s pretty amazing.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m equally proud of the fact that these cohorts are still in touch
and forming a new community of CS teachers in the city and state.&lt;/p&gt;
&lt;p&gt;
Now that we&amp;#39;re rolling, what&amp;#39;s next? The program needs to continue to
run but I don&amp;#39;t see major changes. There are more things to get done
at Hunter and in the state. Things like getting the state to separate
HS from early grades in terms of certification and integrating some CS
teacher prep in our elementary school programs but, right now, I don&amp;#39;t
see a path for the former and don&amp;#39;t have the energy for the latter.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-6&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-6&#34;&gt;
Other hats
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-6&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
I&amp;#39;ve also done a number of other one offs or side projects while at
Hunter. Some of them have been:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I was on the executive committe and a lead author in creating the
NY State K12 CS standards. Something I find ironic since I&amp;#39;m not a
fan of &amp;#34;state standards.&amp;#34;&lt;/li&gt;
&lt;li&gt;I mentioned earlier that I was a big part of Hunter winning and
administering the CUNY2X grant. Got to work with some great people
and that whole grant was huge in helping move the needle on Hunter
CS.&lt;/li&gt;
&lt;li&gt;I was also fortunate enough to work on a project funded by the
Robin Hood foundation on CS in the primary grades. It also allowed
me to work with some great people while dipping my toes in CS Ed
research and early grade work. &lt;/li&gt;
&lt;li&gt;Prior to Covid we were also well on our way in developing a nice
little K12 CS teacher community hosting monthxly meetups at tech
companies like Google and Digital Ocean.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
So, there it is, the major initiatives I&amp;#39;ve been working on at Hunter
and what I think I&amp;#39;ve accomplished. I&amp;#39;m proud of the work and in all
cases I think we went farther than we originally set out for.&lt;/p&gt;
&lt;p&gt;
What&amp;#39;s next? I&amp;#39;m not entirely sure. I&amp;#39;ll share some thoughts in my
next post. I hope all my friends read it and keep an ear open if the
right opportunity presents itself.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-7&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
Links to the posts in this series
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-7&#34; class=&#34;outline-text-2&#34;&gt;
&lt;ul&gt;
&lt;li&gt;Post 1: &lt;a href=&#34;https://cestlaz.github.io/post/retiring-1-why/&#34;&gt;Why I&amp;#39;m retiring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Post 2: &lt;a href=&#34;https://cestlaz.github.io/post/retiring-2-accomplishments/&#34;&gt;This post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Post 3: &lt;a href=&#34;https://cestlaz.github.io/post/retiring-3-whats-next/&#34;&gt;What I think I&amp;#39;ll be looking for next&lt;/a&gt;   &lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>After 7 years at Hunter College and 33 in NYC public schools, time for a change.</title>
      <link>https://cestlaz.github.io/post/retiring-1-why/</link>
      <pubDate>Wed, 09 Nov 2022 06:43:04 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/retiring-1-why/</guid>
      <description>
&lt;p&gt;
I&amp;#39;ve been dropping mentions of this here and there for a while now but
I think it&amp;#39;s time to come out more formally -&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m planning on retiring from Hunter at the end of this Spring.&lt;/p&gt;
&lt;p&gt;
This doesn&amp;#39;t mean getting out of the CS or CS Ed game entirely - I
could stay on in a part time capacity and, after some decompression I
think I still have things to offer but the plan is retire, collect my
pension, and then see where I can continue to be contribute to the
Ed/CS Ed scene. &lt;/p&gt;
&lt;p&gt;
Why now? Largely burnout but there are a number of reasons. I&amp;#39;ll talk
about them below.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m also posting this with two other posts.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;One talking about what I feel I&amp;#39;ve accomplished here at Hunter (&lt;a href=&#34;https://cestlaz.github.io/post/retiring-2-accomplishments/&#34;&gt;link&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Another talking about the types of opportunities I think I&amp;#39;ll be
looking for next (&lt;a href=&#34;https://cestlaz.github.io/post/retiring-3-whats-next/&#34;&gt;link&lt;/a&gt;).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I&amp;#39;d love it if people could read those - particularly the last one.&lt;/p&gt;
&lt;p&gt;
For the rest of this post, why it&amp;#39;s time.&lt;/p&gt;
&lt;p&gt;
As I said, burnout is at the top of the list. What from? Largely from
having too much on my plate. When I started at Hunter, neither of my
programs existed. We started undergraduate CS honors (the Daedalus
program) the following fall and that grew at a consistent pace until
it was a full time job. The CS Ed program took longer to get running
since we needed to get the state to create the license and get our
programs through governance but once they started, that was another
full time job. Add to that the assorted other responsibilities that
ended up on my plate and I&amp;#39;ve been doing two to three full time jobs
for the past three or so years - not sustainable. For the burnout,
Covid and the state of the world certainly hasn&amp;#39;t helped.&lt;/p&gt;
&lt;p&gt;
What does burnout mean? Well, I&amp;#39;m not enjoying my classes. Sure, there
are fun times but I don&amp;#39;t get up in the morning looking forward to it
and in class, I&amp;#39;m as likely to get annoyed by something as not. Part
of this is that I have students who refuse to mask - something I see
as a direct sign of disrespect but there&amp;#39;s more. All in all, this is a
good sign that it&amp;#39;s time to get out or at least take a break.&lt;/p&gt;
&lt;p&gt;
Another factor, and a big one is that I&amp;#39;ve accomplished everything
I&amp;#39;ve set out to accomplish at Hunter and then some. I&amp;#39;m normally not a
&amp;#34;goal guy,&amp;#34; I&amp;#39;m more about process and journey but in the case of
Hunter, I also had a set of goals and I&amp;#39;ve gotten there and
beyond. There are new challenges at Hunter but not challenges that I&amp;#39;m
as excited about. More on this in my accomplishment post.&lt;/p&gt;
&lt;p&gt;
Finally, I&amp;#39;ve got health and family reasons. Health isn&amp;#39;t anything
immediate but I do have indications of heart disease. Combine that
with the fact that my mom died when she was 72 and my dad at 44 and
well, now that I&amp;#39;m 55, if we can financially handle it, maybe it&amp;#39;s
time to give more time to myself and my family.&lt;/p&gt;
&lt;p&gt;
Finally, Devorah&amp;#39;s also retiring - she put in the paperwork the other day.&lt;/p&gt;
&lt;p&gt;
So, that&amp;#39;s why.&lt;/p&gt;
&lt;p&gt;
For those of you who read this blog, I&amp;#39;d love for you to keep your
ears open for potential next steps so I&amp;#39;d love for you to read my next
post on what I think I&amp;#39;ve accomplished at Hunter and what I bring to
the table and the one after that where I&amp;#39;ll muse about what I think I
might be able to get excited about and where I think I might be able
to contribute.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Links to this post  and the other two posts:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;ul&gt;
&lt;li&gt;Post 1: &lt;a href=&#34;https://cestlaz.github.io/post/retiring-1-why/&#34;&gt;This post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Post 2: &lt;a href=&#34;https://cestlaz.github.io/post/retiring-2-accomplishments/&#34;&gt;Recap of what was accomplished at Hunter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Post 3: &lt;a href=&#34;https://cestlaz.github.io/post/retiring-3-whats-next/&#34;&gt;What I think I&amp;#39;ll be looking for next&lt;/a&gt;   &lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Should college be career prep</title>
      <link>https://cestlaz.github.io/post/should-cs-be-practical/</link>
      <pubDate>Mon, 07 Nov 2022 11:47:50 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/should-cs-be-practical/</guid>
      <description>&lt;p&gt;
So, in some of the social platform discussion on my &lt;a href=&#34;https://cestlaz.github.io/post/new-major/&#34;&gt;last post&lt;/a&gt;, the
issue of the practicality of a college education came up. Should
college teach practical job skills or should it be for some more
abstract purpose - learning for learning sake or if one would be a bit
presumptions learning how to think.&lt;/p&gt;
&lt;p&gt;
Way back when going to college was not the norm. Most went from HS to
workforce and even in HS you might have the &amp;#34;academic&amp;#34; track that
prepared you for college, &amp;#34;vocational&amp;#34; that was job prep like
automotive or regular which was neither extreme. Sure, that system had
a host of problems but since the end goal wasn&amp;#39;t college for most, it
freed college from the need for being practical. College could just be
about learning non-useful stuff.&lt;/p&gt;
&lt;p&gt;
Nowadays kids don&amp;#39;t have the luxury of not going to college. It&amp;#39;s
expected in our society. Spend 4 years and oodles of dollars to get
the piece of paper and you can get a job that years ago only required
the HS version of the paper.&lt;/p&gt;
&lt;p&gt;
This, of course, leads to many rather large and hairy questions none
of which I will address here.&lt;/p&gt;
&lt;p&gt;
What I will address concerns my little CS corner of the world.&lt;/p&gt;
&lt;p&gt;
In commenting on my post, some people talked about college faculty
they know and how those faculty members refuse to teach or use
anything that might remotely be useful to kids in terms of
career. They feel it&amp;#39;s beneath them and that they serve a higher
academic purpose. I don&amp;#39;t doubt those comments - I know plenty of
college faculty who feel this very way.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll agree that college shouldn&amp;#39;t strictly be a jobs program but the
nice thing about CS is that you &lt;strong&gt;can&lt;/strong&gt; teach practical skills and job
skills within the context of a traditional academic CS degree. Add in
the reality that most CS majors don&amp;#39;t want to go to grad school and
you can redesign the major to do even more for the majority of
students.&lt;/p&gt;
&lt;p&gt;
How about programming languages and tools. Why not use a couple of
practical ones. This is not to say that the first language has to be
C++, Java, Python or similar but there&amp;#39;s no reason why a couple practical
languages shouldn&amp;#39;t be used. Sure, feel free  to use an esoteric
language or some professors pet project in a particular class and by
all means use the intro language that makes the most sense for your
situation but for a 4 year major, there&amp;#39;s no reason why students
shouldn&amp;#39;t walk away with a couple of languages that are widely used in
industry. Same for build tools and things like testing frameworks. I
use git and &lt;a href=&#34;https://github.com/doctest/doctest&#34;&gt;doctest&lt;/a&gt;. I&amp;#39;m not teaching a class in git or doctest, I&amp;#39;m
teaching software engineering techniques and testing as part of my CS1
classes. I have to use some tool as the platform on which to teach
these things so why not tools that they can also use outside of
school. It just makes sense. Sure, in terms of language, most colleges
seem to cover at least one of C++, Python, and Java but lag in terms
of the support concepts and tooling.&lt;/p&gt;
&lt;p&gt;
It reminds me about what I said in my earlier post about Intel
Assembly. At Stuy back in the 90s I taught a systems elective. It
wasn&amp;#39;t a programming course about Intel assembly. If it was, I&amp;#39;d just
do a bunch of random programming assignments in it. It was rather a
course about how the computer worked at a low level and we &lt;strong&gt;used&lt;/strong&gt;
Intel assembly as the tool.&lt;/p&gt;
&lt;p&gt;
You can&amp;#39;t do this everywhere in a CS curriculum but there are plenty
of places where you can. Do this, make sure there are some required
large project courses where students can learn to work in a group and
integrate technologies, introduce a couple of new electives, and all
of a sudden you can have a strong academic CS program that also does a
great job preparing students for the tech world beyond academia.&lt;/p&gt;
&lt;p&gt;
Some places are already doing this and others are trying but too many
are still caught in the past.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Crafting a new major for tech</title>
      <link>https://cestlaz.github.io/post/new-major/</link>
      <pubDate>Fri, 04 Nov 2022 09:42:40 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/new-major/</guid>
      <description>&lt;p&gt;
Hunter College, like most colleges and universities is facing
unprecedented demand for CS. It&amp;#39;s the hot major. Being a public
college, we have an obligation to provide the best education possible
to as many students as we can in our locality. This means we can&amp;#39;t
just put a GPA requirement or other cap on the major and we can&amp;#39;t do
things I&amp;#39;ve heard &amp;#34;elite&amp;#34; schools do like essentially making
applicants apply to the major direct from HS.&lt;/p&gt;
&lt;p&gt;
This had led to the usual problems - more large lectures, fewer
electives offered, challenges for space etc.. This is nothing unique
to Hunter.&lt;/p&gt;
&lt;p&gt;
Another problem, though is that Hunter offers a traditional CS major -
similar to the majority of institutions across the USA and the
traditional CS major is not really servicing many of our students.&lt;/p&gt;
&lt;p&gt;
Unlike many other majors, the students in CS by and large want to work
in Tech. Unfortunately, most CS programs aren&amp;#39;t set up for this. Rather
they are set up with the assumption that all CS majors want to go on
to PhD programs which is most certainly not the case. Sure, CS
students learn programming and some other career useful things but
they also learn a lot that most ever use. Theory is important but not
as much as many have to study. Far too much proof, How about calc 2
and sometimes 3? Sure these topics can be useful and even important to
some but I&amp;#39;ve talked to countless tech people in the business world
ranging from entry level programmers to top executives and everyone in
between and by and large the CS major is poorly set up for the CS
career. What&amp;#39;s more, the only career that many CS majors only somewhat
prepares students for is programming and even then just to a certain
extent and there are many non-programming heavy tech opportunities out
there waiting for our students.&lt;/p&gt;
&lt;p&gt;
I think many in academia acknowledge this as well. I&amp;#39;ve spoken to some
high up people at some of our most prestigious institutions and, at
least, privately, they&amp;#39;ve agreed with me on this.&lt;/p&gt;
&lt;p&gt;
As it stands, not all Hunter CS students can get through the major and
for those that do, they&amp;#39;re just as well set up for career as graduates
of the &amp;#34;elite&amp;#34; programs but truth be told, it&amp;#39;s not the institutions
that are setting them up well.&lt;/p&gt;
&lt;p&gt;
Hunter&amp;#39;s trying to do something about this. At recent department
meetings there&amp;#39;s been discussion of creating a new major - something
that maybe dumps the unnecessary stuff and replaces it with material
that is both more relevant to the students career while also providing
additional support in areas that the students need. The challenge is
to also keep the academic rigor at the same time and not just become a
jobs program for the flavor of the month.&lt;/p&gt;
&lt;p&gt;
There was a lot of talk asking &amp;#34;what do other colleges do and what are
they planning?&amp;#34; but I didn&amp;#39;t like that talk. Who cares what other
colleges are doing? Who says they&amp;#39;re doing it right. Every institution
has a unique situation. Hunter - a liberal arts college in the heart
of NYC which is part of the CUNY system should be figuring out what&amp;#39;s
best for itself, not what may or may not work for others.&lt;/p&gt;
&lt;p&gt;
I suggested talking to the tech community, particularly in NYC - what
jobs are out there now and what will be out there in the next decade
and how can we structure a program to inform students as to the
possibilities and to prepare them on their paths?&lt;/p&gt;
&lt;p&gt;
Fortunately, I&amp;#39;ve got tons of former students in all areas of tech and
we&amp;#39;ve been talking for the past few weeks and trying to figure this
out.&lt;/p&gt;
&lt;p&gt;
Originally, some of the Hunter faculty were considering things like
network admin / sys admin type roles and thought to explore there but
that&amp;#39;s not what I&amp;#39;ve been getting from my network.&lt;/p&gt;
&lt;p&gt;
A big obvious one was software engineering. This could be great for
those meant to follow the programming path but not for tech minded
people who don&amp;#39;t want to spend their days in code. Project management
kept coming up but there were more than a few concerns that to be a
great PM you really have to have some real world experience so a PM
major wouldn&amp;#39;t be serving students.&lt;/p&gt;
&lt;p&gt;
Another thing that came up was the idea that developers in many cases
do have more control over their infrastructure which would lead to
requiring knowledge in administering their own systems, some network
wherewithal as well as some knowledge of container technologies and
the like.&lt;/p&gt;
&lt;p&gt;
There was also a lot of talk about which current major classes were
useful and which really weren&amp;#39;t and there was discussion of a lot of
other things like software architecture (something never taught but
much needed), technology integration, and things like soft skills
(presentations/writing) ethics and so on.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m also glad &amp;#34;the family&amp;#34; got the idea that we wanted to teach
academic classes and not just how to use tools. I was heartened this
morning when one of my former students recalled:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Back in the 90s when I was in your systems class I remember you
saying that you weren&amp;#39;t teaching us Intel Assembly. We were learning
how computers worked and that we were &lt;strong&gt;using&lt;/strong&gt; Intel Assembly as a tool
to explore to accomplish that learning&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Made me feel good.&lt;/p&gt;
&lt;p&gt;
All in all, I&amp;#39;m really grateful for my StuyCS Family (or as some say,
the StuyCS Mafia) - got all the info I needed from which I think I&amp;#39;ll
be able to craft a very strong and useful new proposed major. I don&amp;#39;t
think it&amp;#39;ll focus on just one possible career but I think it should
get a student ready for a variety of entry level tech jobs including
programming related ones. What&amp;#39;s more, it will educate them as to the
possibilities - something else current majors don&amp;#39;t usually do. &lt;/p&gt;
&lt;p&gt;
Will the CS department like it? Who knows but I&amp;#39;m convinced that it
will be a great option for Hunter students if they do.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>College Recommendation Season</title>
      <link>https://cestlaz.github.io/post/college-recs/</link>
      <pubDate>Tue, 01 Nov 2022 20:42:24 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/college-recs/</guid>
      <description>&lt;p&gt;
It&amp;#39;s fall so for HS teachers who taught juniors last year it&amp;#39;s
recommendation writing season. For many of those teachers, they&amp;#39;re
already well into the season with early decision deadlines being as
early as November 1.&lt;/p&gt;
&lt;p&gt;
Writing recs is one thing I don&amp;#39;t miss now that I&amp;#39;m working at the
college level. Sure, it was always an honor to be asked but it was a
lot of work. Now I&amp;#39;m on the other side and reading the recs. On one
hand, much easier but on the other hand, getting worthwhile
information from a college rec as an application reader can be its own
challenge.&lt;/p&gt;
&lt;p&gt;
When reading recs, I see the same things that I knew were going on as
when I was on the writing side. Some teachers do a crap job and some
teachers put their all into it.&lt;/p&gt;
&lt;p&gt;
On the bad side, you get the generic rec - pretty much the same thing
for every kid. We all know some teachers do this. From the reader
point of view, you see these a mile away and when a lot of kids apply
with the same teacher writing, it&amp;#39;s even worse. Sometimes this is
indeed lazy rec writing but other times it&amp;#39;s because the teacher&amp;#39;s
doing their best but just doesn&amp;#39;t have the material - I used to get
asked for recs all the time from that quiet kid who basically did a
good job but was quiet, and to be honest, somewhat generic in terms of
application portfolio. Nice enough kid but within the context of
class, not a lot to write. You know as a teacher that this is a good
kid who deserves to be represented and you&amp;#39;re porbably their best or
only option but there&amp;#39;s not a lot to write. It&amp;#39;s hard. Combine that
when, like me, you&amp;#39;re not a great natural writer and you can get a
generic rec even it you&amp;#39;re not trying to.&lt;/p&gt;
&lt;p&gt;
On the good side, you get writers who really write something unique and
descriptive for each kid. In order to try to do
right by my kids, I&amp;#39;d insist on having multiple weeks to write the
recs since I&amp;#39;d have to space them out - I couldn&amp;#39;t do more than one or
two at a sitting for fear of them becoming generic.&lt;/p&gt;
&lt;p&gt;
In any case, good recs take work.&lt;/p&gt;
&lt;p&gt;
For me, I would always be very clear to my students. I&amp;#39;d tell them
&lt;strong&gt;&amp;#34;I&amp;#39;m making no effort at all to get you into any particular school.&amp;#34;&lt;/strong&gt;
I never saw that as the purpose of the rec. I&amp;#39;d tell them that my job
was &lt;strong&gt;&amp;#34;to paint a picture of them&amp;#34;&lt;/strong&gt; in the hope that the reader would
be able to determine if they were a good fit for a school. Afterall,
fit is what it&amp;#39;s all about. If an applicant or rec writer &amp;#34;fool&amp;#34; an
admission office into offering a bad fit, it won&amp;#39;t work out for
anyone. The majority of kids, in my experience end up in good places
and get good educations but the key is not getting in to the dream
school, the key is getting in to the right fit.&lt;/p&gt;
&lt;p&gt;
My son, in spite of an amazingly stellar application portfolio,
didn&amp;#39;t get into any of his first choice schools and went grudgingly to
Michigan - it turned out to be the best possible place for him. I
didn&amp;#39;t get in to my dream school back in the day and ended up at NYU
but that was indeed, the right place for me at that time.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s about fit and a rec can help paint a picture to see if there&amp;#39;s a
fit.&lt;/p&gt;
&lt;p&gt;
Now that I&amp;#39;ve been on the reading side for a number of years, that&amp;#39;s
what I look for. If I get a generic rec I don&amp;#39;t count it against a
student and if a rec isn&amp;#39;t well written I likewise try to look past
that. As I said before, I don&amp;#39;t consider myself to be a strong writer
so I understand the challenge. I do look for a rec to paint a
picture. Will this student be a good fit for my program. Will they
thrive and be a positive part of the community.&lt;/p&gt;
&lt;p&gt;
To be honest, for teachers at schools where i have a track record, I&amp;#39;d
just as soon get short and sweet - &amp;#34;You remember so and so, well this
kid is like them but here are the differences&amp;#34; or even &amp;#34;Mike, you know
I&amp;#39;ve written for a dozen kids in the past - you WANT this kid.&amp;#34; That
track record is important because over time, I get to know the schools
and the teachers and if they&amp;#39;re honest with me, their recs weigh more
heavily. On the other hand, if I read a bunch of over the top reviews
and later it turns out that the students weren&amp;#39;t fairly represented,
then those writers lose credibility with me in the future.&lt;/p&gt;
&lt;p&gt;
This has made a difference for kids in the past. Every year, it seems
that I reach out to rec writers directly where I&amp;#39;ve felt there was
something, a spark in the application but I needed to dig deeper to
make a case to advocate for the kid. Sometimes it worked out,
sometimes it didn&amp;#39;t but building the track record and history
certainly help.&lt;/p&gt;
&lt;p&gt;
Now, I can&amp;#39;t speak for anyone else or any admissions office - in fact,
I have nothing to do with the Hunter admissions process, I just have a
major voice in advocating for the students in my program and that is
indeed a very little corner of the world.&lt;/p&gt;
&lt;p&gt;
So, why did I write this? I was talking to a couple of friends who
stil teach high school and they were talking about rec writing and I
thought that even though I&amp;#39;m not directly involved in admissions and
in the greater scheme of things my program is very small and I&amp;#39;m just
one voice, I thought it might be interesting for teachers to read a
bit about how I look at and think about college recs.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Some Professional Development Is Worthwhile</title>
      <link>https://cestlaz.github.io/post/some-pd-is-worthwhile/</link>
      <pubDate>Wed, 26 Oct 2022 16:29:50 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/some-pd-is-worthwhile/</guid>
      <description>&lt;p&gt;
No, I&amp;#39;m not walking back anything from &lt;a href=&#34;https://cestlaz.github.io/post/why-pd-wont-do/#disqus_thread&#34;&gt;my last post&lt;/a&gt;. I still think
we have to stop using professional development as the primary means
for preparing CS teachers but I wanted to take a minute to make it
clear that while there&amp;#39;s plenty of lousy PD out there, there&amp;#39;s also
plenty of good stuff.&lt;/p&gt;
&lt;p&gt;
For bad PD, it&amp;#39;s frequently mandated and frequently neither useful or
relevant or even if its potentially relevant, but the time it becomes
useful you don&amp;#39;t remember it.&lt;/p&gt;
&lt;p&gt;
For good, first we look to our fellow teachers. A couple of years ago
at SIGCSE, they released the results of a survey of CS educators - I
think it was limited to colleges but the results were both expected
and interesting. It turned out that the majority of respondents
considered the best resource to improve their teaching practice to be
techniques learned from other teachers. I believe first it was in
department and then in external meetings but I could be wrong. &amp;#34;The
research,&amp;#34; on the other hand, was way down the list.&lt;/p&gt;
&lt;p&gt;
PD delivered by colleages is the best and can happen at all levels. A
teacher might not be a CS ace nor may they be very experienced but
they can run a session on something they tried and how it worked (or
didnt&amp;#39;) and I&amp;#39;ll take that any day over something from a &amp;#34;thought
leader.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Of course, back to yesterday&amp;#39;s post, you can&amp;#39;t prepare a CS teacher
that way - you can take a teacher and add trick, a technique, a
practice, or a topic.&lt;/p&gt;
&lt;p&gt;
Great stuff for what it is when used appropriately.&lt;/p&gt;
&lt;p&gt;
Every time we would have those school wide required PDs, we&amp;#39;d all look
at the offerings and seek out the good stuff being delivered by our
fellow teachers.&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s another class of PD that can also be excellent although,
again, it&amp;#39;s not a replacement for full teacher preparation. That&amp;#39;s
when some group goes in and isn&amp;#39;t trying to &amp;#34;train the teachers from
scratch to proficient&amp;#34; but rather understands that they&amp;#39;re delivering
a limited experience. This might be to expose a new audience to CS on
an introductory level or a non specialist on how they can deliver a
starter set of CS experiences or it could be something deeper but
it&amp;#39;ll be focussed on growing the teachers tool set and knowledge base,
not on delivering some set scripted experience.&lt;/p&gt;
&lt;p&gt;
This type of PD seems to frequently be delivered by researchers and
can be excellent stuff. It can also be delivered by content providers.&lt;/p&gt;
&lt;p&gt;
Finally, content providers can and do deliver worthwhile PD as long as
its taken in the right context. If you&amp;#39;re a knowledgeable CS teacher
you might love some provider&amp;#39;s curriculum and their training can be
the best way to go. Nothing inherently wrong here as long as the
training is not the actual teacher prep.&lt;/p&gt;
&lt;p&gt;
One of the best places for all of these types of PDs are at
conferences like the CSTA conference and that conference has
historically had the best of all versions of PD.&lt;/p&gt;
&lt;p&gt;
So, there it is, I&amp;#39;m not down on PD but I recognize that there&amp;#39;s a lot
of garbage PD to go with a lot of good stuff. The problem and the
danger is that it&amp;#39;s too often used as a replacement for real teacher
prep.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why PD doesn&#39;t work for CS</title>
      <link>https://cestlaz.github.io/post/why-pd-wont-do/</link>
      <pubDate>Mon, 24 Oct 2022 08:01:48 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/why-pd-wont-do/</guid>
      <description>
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
EDIT
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
I was reminded that by referring to CS4All and what it&amp;#39;s doing in NYC
people could read an implication that the many hard working educators
are not doing a yeoman&amp;#39;s job and indeed they are. They&amp;#39;ve been doing
the heavy lifting from day 1 to bring opportunities to students and I
did not mean to impugn their work or efforts in any way.&lt;/p&gt;
&lt;p&gt;
I also want to mention that I know that there are many educators
working in NY in CS who have been providing direct support for
teachers outside of PD and this post is not about them and their good
work. This is about what PD providers provide and how that is no
longer a good model for us to use for teacher prep. &lt;/p&gt;
&lt;p&gt;
I apologize to educators who read this prior to this edit who felt
that I was referring to them and I hope this addition clears things
up.&lt;/p&gt;
&lt;p&gt;
That said, I&amp;#39;m leaving the post as is because CS4all in NYC has set up
the current system and as I said below &lt;strong&gt;it was correct and necessary at
the start to do it that way&lt;/strong&gt; but it is now clear that the CS4ALl
leadership has to change directions with regards to using professional
development as a model for preparing teachers.&lt;/p&gt;
&lt;p&gt;
I also am leaving it because there are other states along with
nationwide CS PD providers that claim that the PD  model is adequately
preparing CS teachers and it isn&amp;#39;t.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Original Post
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Overall, I&amp;#39;ve been down on the Professional Development model that has
been used nationwide to &amp;#34;prepare&amp;#34; our CS teachers. Yes, I&amp;#39;ll happily
admit that in order to get to a lot of teachers quickly, starting
teachers off with PD was essential but too many people think it&amp;#39;s
doing fine and that&amp;#39;s a problem.&lt;/p&gt;
&lt;p&gt;
Before getting to the specifics of CS PD let&amp;#39;s think about PD in
general. There are different types of PDs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Teachers sharing practices&lt;/li&gt;
&lt;li&gt;conferences and meetings that teachers choose to attend&lt;/li&gt;
&lt;li&gt;PD run by content providers, that is, people selling something&lt;/li&gt;
&lt;li&gt;PD required by schools and districts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The first two types are usually considered good, the third, sometimes
but not as often. The fourth, fuggedaboudit.&lt;/p&gt;
&lt;p&gt;
Given that there were and are so few CS teachers that really know CS
and how to teach it, CS training, which started with PD, started with
content providers. As I said at the start, this was essential at first
but had and has many problems.&lt;/p&gt;
&lt;p&gt;
First off, content providers aren&amp;#39;t teaches. Sure, they often hire people
who have taught but usually for a limited period of time. Second,
since they&amp;#39;re pushing their product they&amp;#39;re usually teaching a pretty
scripted experience and not going beyond either the way they envision
their lessons to progress nor to broader possible content. This was
essential at the start but it&amp;#39;s not really preparing teachers. It&amp;#39;s
preparing actors for a play. Unfortunately, those 30 or so other
actors in the room (the students) are all doing improv.&lt;/p&gt;
&lt;p&gt;
Even with those problems content provider provided PD can certainly
have value but there&amp;#39;s one more problem and it&amp;#39;s HUGE. Professional
Development has no teacher accountability or follow up. When you
attend a PD there are no exams or required projects, no assessment, no
grade for credits - nothing. You attend, you&amp;#39;re done.&lt;/p&gt;
&lt;p&gt;
This is 100% the right way to do it for most fields but not when this is
how you&amp;#39;re initially training teachers. I&amp;#39;ve seen this in the
applicants to my program. I mentioned it in earlier posts but I&amp;#39;ve
seen far too many applicants who&amp;#39;ve attended multiple years of CS4All
training in NYC. Training provided by a who&amp;#39;s who of providers and
they can barely get past hello world. I&amp;#39;ve even seen it &lt;strong&gt;in&lt;/strong&gt; my
program where a couple of participants have viewed our courses as PDs
and really tried to dial it in. Fortunately, the vast majority get
that we&amp;#39;re offering legit grad courses for grad credits and while
you&amp;#39;ll work (and hopefully have fun) through the program, you&amp;#39;ll
indeed grow as a  CS teacher throughout. &lt;/p&gt;
&lt;p&gt;
Combine the fact that PD is never assessed by the fact that NY state
is allowing unprepared teachers to teach CS for the next 10 years and
we&amp;#39;ve got a problem.&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t really have an answer - PD in general should remain as it is
in most fields but it should no longer be used as primary teacher
preparation. Even though I strongly believe this, nothing will change
based on the state&amp;#39;s stance and the fact that city and state
politicians gain more by rubber stamping CS teachers and saying
they&amp;#39;ve done it rather than facing the fact that they&amp;#39;re going to
exacerbate the difference between the haves - who can make sure
their kids get well prepared teachers, and the have nots who will get
the PD trained kind.&lt;/p&gt;
&lt;p&gt;
What the city and state should be doing is funding teachers to take
advanced certificate programs like mine and students to take CS
teacher preparation programs, also like mine but like the ones offered
by Siena College and others as well. Do this and reduce the number of
years during which you don&amp;#39;t need certification from 10 years to 5 and
you&amp;#39;ve got a real solution.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not holding my breath.&lt;/p&gt;
&lt;p&gt;
In any case, there are teachers out there who want to do it right and
there are charitable groups like Gotham Gives and Google who&amp;#39;ve helped
us at Hunter move around 100 teachers from where they started to
becoming solid CS teachers.&lt;/p&gt;
&lt;p&gt;
Regardless of what the city and state do, we need more organizations to
get on board funding good programs and more good programs becoming
available to truly prepare teachers. If this happens, I do believe the
teachers will come.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Don&#39;t give away the punchline</title>
      <link>https://cestlaz.github.io/post/punchline/</link>
      <pubDate>Fri, 21 Oct 2022 15:42:24 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/punchline/</guid>
      <description>&lt;p&gt;
Commenting on my post on teaching some &lt;a href=&#34;https://cestlaz.github.io/post/same-old-topics/&#34;&gt;Software Engineering&lt;/a&gt; concepts,
there was a comment on code review and that code.org now included it
in their CS-A curriculum. I found &lt;a href=&#34;https://www.youtube.com/watch?v=dWddHWU3_YM&#34;&gt;this video&lt;/a&gt; but no other materials. I
was thinking that I certainly hoped that the video was not being used to
introduce code review to students. I mean the video is fine and
probably great to show to teachers so that they&amp;#39;ll have some idea on
what code review is and why it&amp;#39;s important. For students, it would be
giving away the punchline too early.&lt;/p&gt;
&lt;p&gt;
There are times when you, as a teacher, have to directly instruct
students and there are times when just seeing a good practice is
sufficient but code review isn&amp;#39;t one of them. Why do I feel that way?
Because I&amp;#39;ve seen code review in the wild. Sure, some, and I&amp;#39;d hope
many professionals take it to heart but I know too many cases where
testing and code reviews are afterthoughts. People click okay based on
reputations or cursory glances or often based on deadlines and don&amp;#39;t
take the time to really review code.&lt;/p&gt;
&lt;p&gt;
For students to buy into code review, they have to really see why it&amp;#39;s
important and useful.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s somewhat like teaching version control, which I do with Git and
GitHub. I teach it early because I use it as a means of distributing
and collecting software but truth be told, students don&amp;#39;t really buy
into the program. They only &amp;#34;get&amp;#34; version control later on when it
saves their bacon. I haven&amp;#39;t cracked the nut of making version
control meaningful early on but I think I have done a pretty good job
with code review (&lt;a href=&#34;https://cestlaz.github.io/post/code-review-2/&#34;&gt;old post&lt;/a&gt;, &lt;a href=&#34;https://cestlaz.github.io/post/code-review/&#34;&gt;other old post&lt;/a&gt;) and it involves having
them do some activities before revealing what we&amp;#39;re really doing or
giving them the punchline.&lt;/p&gt;
&lt;p&gt;
Sometimes you&amp;#39;ve got to give the info up front but sometimes you want
to set up exploration, discussion, and discovery. Most teachers know
this but not all. I remember three years ago, we had our first CS
teacher cohort. We started with 22 teachers but one dropped after the
first week. That one teacher insisted that we tell them everything
that was coming up in detail. I explained that we could share some
things in advance but giving away the punchline would lessen their
experience and how much they got out of the program. A couple of days
later they were gone. The other 21 bought in and together we had a
great program.&lt;/p&gt;
&lt;p&gt;
So, most teachers get it, but not all. On the other hand I&amp;#39;m not
convinced that most content providers get it. Yes, they&amp;#39;ve heard all
the buzzwords but I&amp;#39;m not convinced that most of them have really
experienced educators (let alone CS educators) driving their ships, I
mean, it is a profession where it takes decades to become a master
teacher and to me, 5 to 10 years is really advanced beginner to
intermediate and I don&amp;#39;t think you really master your craft util
around 20 and that&amp;#39;s only if you continue to work at it.&lt;/p&gt;
&lt;p&gt;
Some people might push back on that last paragraph but if you&amp;#39;re a
5-10 year teacher, as yourself this - do you expect to stay the same
and not get any better for the rest of your career or do you expect to
continue to grow and get better. If you do expect to grow than what
you will become will be the master teacher version of yourself. If you don&amp;#39;t expect to grow,
you&amp;#39;re probably in the wrong business.&lt;/p&gt;
&lt;p&gt;
Anyway, I digress.&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t know what materials code.org put together for their whole code
review unit. If the video is intended to show at the start or if
they&amp;#39;ve got something more developmental but it got me thinking about
our craft, how it&amp;#39;s important to give the right information at the
right time, to guide but not to give away the punchline until the time
is right.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Turning 55</title>
      <link>https://cestlaz.github.io/post/turning-55/</link>
      <pubDate>Wed, 19 Oct 2022 15:15:25 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/turning-55/</guid>
      <description>&lt;p&gt;
So, I turned 55 today. Another year older. The changes? Well, I&amp;#39;m
seeing more doctors and seeing them more frequently and to be honest,
I&amp;#39;d love to have a day or two without some small niggling ache or pain
but that&amp;#39;s life. Like many people my age, we&amp;#39;ve got our health issues
but I&amp;#39;m pretty active and managing mine (hey, I had a great 8 mile run
this morning :-) ).&lt;/p&gt;
&lt;p&gt;
Still, 55 is a big one. Yeah, I know, it&amp;#39;s not 50 which ends in a 0
and is half a century so people seem to earmark it. It&amp;#39;s also not 62
or 67 when social security can kick in for most people. Nope. It&amp;#39;s
also not 65 when you get all those senior discounts.&lt;/p&gt;
&lt;p&gt;
Fifty five, for teachers who started around when I did is that magic
age that, if you&amp;#39;ve put in enough years (which I have) you can retire
and start collecting unreduced pension benefits. &lt;/p&gt;
&lt;p&gt;
I mentioned &lt;a href=&#34;https://cestlaz.github.io/post/turning-54/&#34;&gt;last year&lt;/a&gt; that I was starting to think about retirement as
a possibility. Of course, that doesn&amp;#39;t mean getting out of the game
entirely but if I go that route it means reducing my work obligations
be they at Hunter or elsewhere. Regardless of what I do, I think I
still have something to offer in terms of CS, the Tech Industry,
Education, and the intersection of the three.&lt;/p&gt;
&lt;p&gt;
Regardless of what I decide to do, it&amp;#39;s been a tough few years, and
I&amp;#39;m feeling somewhat burnt out and it&amp;#39;s calming and relieving to know
that if I wanted to, I could now step back whenever it suits me.&lt;/p&gt;
&lt;p&gt;
So, now to do some hard thinking and have conversations about this
with family and friends (yes, dear reader, I&amp;#39;ll be reaching out to
some of you) while I work to make the experiences of my current
students as positive and rewarding as I can.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Good class day today</title>
      <link>https://cestlaz.github.io/post/good-day-in-class/</link>
      <pubDate>Thu, 13 Oct 2022 14:59:22 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/good-day-in-class/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been in something of a teaching funk for much of the
semester. Don&amp;#39;t get me wrong, I think things are going pretty well
with the classes but I don&amp;#39;t feel like I&amp;#39;ve had my &amp;#34;A game.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Part of it, I think is because of the relaxed mask policy. Hunter is
masks optional and in their infinite wisdom, last year replaced the
signs that said &amp;#34;Masks required&amp;#34; with signs that say &amp;#34;Masks &lt;strong&gt;NOT&lt;/strong&gt;
required.&amp;#34; I&amp;#39;m in two overcrowded rooms - one of them, in fact has a
capacity lower than my class size and I have some imunocompromised
people in my life that I&amp;#39;d like to be able to safely see not to
mention my own health. At the beginning of the semester, I requested
for these reasons that in the classroom people wear masks. Most did
and most do but a few didn&amp;#39;t and won&amp;#39;t and a few decided it wasn&amp;#39;t
important any more after a few weeks.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s typical that a few cases like this can really bring the tone down
but I think that&amp;#39;s affecting me more than anything else.&lt;/p&gt;
&lt;p&gt;
In any event, in spite of this, today was a good day. In particular, I
got a boost from my second class. I started my lesson on writing a
program to &lt;a href=&#34;https://cestlaz.github.io/posts/2014-01-07-rot13-gateway/&#34;&gt;decode a Caesar cipher&lt;/a&gt;. It wasn&amp;#39;t exactly the same as the
post. Today we started with a lot of internet history and culture -
&lt;a href=&#34;https://en.wikipedia.org/wiki/ROT13&#34;&gt;rot13&lt;/a&gt;, Usenet news, and the first public dialup Unix system on the
internet the &lt;a href=&#34;https://en.wikipedia.org/wiki/The_Big_Electric_Cat&#34;&gt;Big Electric Cat&lt;/a&gt; run by my old schoolmates and friends,
Charles Foreman, Robert Sweeney, Lee Fischman, and Richard Newman.&lt;/p&gt;
&lt;p&gt;
We moved from there to starting to develop ideas behind finding a
similarity score between two things based on the distance formula. I
now that sounds like a weird topic jump but it made sense in context.&lt;/p&gt;
&lt;p&gt;
More to come in the next few classes.&lt;/p&gt;
&lt;p&gt;
After class in the halls I heard mutterings from students on how they
thought it was a really cool lesson. Made me feel pretty good.&lt;/p&gt;
&lt;p&gt;
My earlier class wasn&amp;#39;t particularly cool but it also went
well. Mostly students sharing work. First part had them in groups and
sharing solutions from the past weeks lab with other group
members. The second part was more interesting and more fun. I had them
look at each others solutions without discussion and then had group
members explain and otherwise talk through other group members
solutions. So, for example, in a four person group, group member A
might chose question 3 from group member B&amp;#39;s repo and then teach that
solution to the full group of four.&lt;/p&gt;
&lt;p&gt;
I think was a productive exercise and time well spent. It&amp;#39;s important
to get them to share solutions and to be able to understand other
peoples code so this was a step in the right direction.&lt;/p&gt;
&lt;p&gt;
So, that&amp;#39;s it today. Nothing really deep, just sharing a good day in
the classroom.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Same Old Topics</title>
      <link>https://cestlaz.github.io/post/same-old-topics/</link>
      <pubDate>Sat, 08 Oct 2022 14:40:55 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/same-old-topics/</guid>
      <description>&lt;p&gt;
I haven&amp;#39;t been posting about specific CS teaching techniques and
lesson content recently. Probably because I&amp;#39;ve been teaching the same classes
at Hunter now for the past six years.&lt;/p&gt;
&lt;p&gt;
Twice a year, Fall and Spring, I teach a recitation for Hunter&amp;#39;s CS1
in C++. In the Fall I also teach a version of their CS0 in Python. My
second undergrad CS class in the Spring is Data Structures.&lt;/p&gt;
&lt;p&gt;
I have some freedom in the CS0 class but that&amp;#39;s more with applications
and assignments since the basics are the basics. Data Structures is
even more constrained. I&amp;#39;ve got to cover the same data structures and
algorithms as the other, non honors section. I can do more and I can
cover things the way I want but the list of data structures and
algorithms is pretty set.&lt;/p&gt;
&lt;p&gt;
For my CS1 recitation, I probably have the most freedom. For the
regular sections, they cover a number of labs in the recitation. Since
I have an honors class, I push the labs to homework assignments and
can do what I want with the recitation time. This gives me some
freedom but I still have to match the pace and content with what
they&amp;#39;re learning in the CS1 lectures. That means I can&amp;#39;t arbitrarily
cover a topic until it&amp;#39;s prerequisites are covered in the main lecture
and likewise, I can&amp;#39;t cover anything that&amp;#39;s covered in a future
lecture.&lt;/p&gt;
&lt;p&gt;
Now, this doesn&amp;#39;t mean I have no freedom at all. For all three
courses, I developed my lessons and I&amp;#39;ve continually tweaked how I&amp;#39;ve
taught but it&amp;#39;s been largely the same.&lt;/p&gt;
&lt;p&gt;
I bet this is similar to a math teacher teaching algebra or geometry
for the billionth time.&lt;/p&gt;
&lt;p&gt;
For the CS1 lab I initially added in a bunch of software engineering
and a couple of straight CS topics. The software engineering included
things like coding standards, testing, code reviews, working on other
peoples code and the like. It&amp;#39;s worked well but last couple of times
I&amp;#39;ve felt the course was a little stagnant and wanted to mix in some
new things.&lt;/p&gt;
&lt;p&gt;
What to add? I looked at the class calendar and lecture syllabus and
as luck will have it, I&amp;#39;ll be able to add three more topics this
semester. First up will be code coverage. We&amp;#39;ve been talking about
testing and TDD since I started teaching at Hunter but code coverage
as it relates to tests has been an afterthought. This time, I&amp;#39;m going
to bring it to the forefront. I think it&amp;#39;ll be interesting and
fun. The second will be Continuous Integration (CI). I was holding off
on this because of tooling but now that I&amp;#39;ve had a chance to look, it
seems that GitHub actions will make it really easy. Finally, I want to
more formally talk about code profiling.&lt;/p&gt;
&lt;p&gt;
None of these topics is particularly large or complex (at least at the
introductory level) so it&amp;#39;ll all fit nicely and it&amp;#39;s giving me
something new to get excited about as opposed to the same lessons
merely tweaked. In fact, I&amp;#39;m finding myself thinking &amp;#34;Oh man, I&amp;#39;m
going to have to cover those three lessons on decryption before I get
to that cool new lesson on code coverage, ugh.&amp;#34; Four years ago, the
decryption lesson was the cool and fun new lesson that I was super
excited about.&lt;/p&gt;
&lt;p&gt;
So, we&amp;#39;ll see how it all goes. Planning to report back after all the
lessons are delivered.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>We need certified teachers, not professionally developed teachers.</title>
      <link>https://cestlaz.github.io/post/certification-needed/</link>
      <pubDate>Wed, 28 Sep 2022 17:35:05 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/certification-needed/</guid>
      <description>&lt;p&gt;
Last time I mentioned that there are many teachers teaching CS in NY
that have no intention of earning the new certification and also don&amp;#39;t
really know the subject. People might not want to here this but it&amp;#39;s
true. I don&amp;#39;t blame the teachers for this since they&amp;#39;ve been
repeatedly told that &amp;#34;CS is super easy&amp;#34; and that their PD training
100% makes them CS teachers and really prepares them.&lt;/p&gt;
&lt;p&gt;
It doesn&amp;#39;t&lt;/p&gt;
&lt;p&gt;
With the new certification, one would hope that teachers who took one
for the team and muddled through would either get certified or go
back to teaching their primary subject but that probably won&amp;#39;t be the
case.&lt;/p&gt;
&lt;p&gt;
Why?&lt;/p&gt;
&lt;p&gt;
Because the state is allowing it.&lt;/p&gt;
&lt;p&gt;
Current teachers can (or could) file for the SOCE - Statement of
Continuing Eligibility. Basically if you taught CS you can fill out a
form and keep teaching it for 10 years regardless of
qualifications. It has limitations - it&amp;#39;s tied to the school you filed
the SOCE at - if you transfer it&amp;#39;s no longer valid but it basically
means that if you taught CS, good or bad, you can keep doing it at
your current school.&lt;/p&gt;
&lt;p&gt;
This is not good.&lt;/p&gt;
&lt;p&gt;
The idea of giving a time frame to become a strong CS teacher is a
good one but 10 years is excessive.&lt;/p&gt;
&lt;p&gt;
Yes, there are some teachers that won&amp;#39;t be certified but really know
CS and how to teach it but in my experience they are in the
minority. Over the past three years I&amp;#39;ve worked closely with about 100
teachers in my program and I&amp;#39;ve evaluated applications from afew
hundred more. Many of these applicants have been attending CS
professional development for &lt;strong&gt;years&lt;/strong&gt;. These PDs are the usual
suspects - CS4all&amp;#39;s training in NY, code.org etc.. The number of
teachers who attended years of these types of training but have
difficulty with &amp;#34;hello world&amp;#34; has been shocking. Now, I&amp;#39;m not down on
a teacher for not knowing more than what they&amp;#39;ve been taught but
what&amp;#39;s being taught in PDs is sorely lacking and attending them does
not a CS teacher make.&lt;/p&gt;
&lt;p&gt;
Now, this isn&amp;#39;t to say that all CS Certification programs will be
superior to the low bar PD. I&amp;#39;m confident in saying that the Hunter
program is. I&amp;#39;m also confident in the quality of Siena&amp;#39;s program but
they only award a Bachelors so it&amp;#39;s not for currently working, certified
teachers. Other programs, I just don&amp;#39;t know - some will probably be
great and others will be glorified PD.&lt;/p&gt;
&lt;p&gt;
We really need to educate school administrators and district leaders
as to what real CS teacher preparation should look like and they have
to insist that while right now, we&amp;#39;re in a transitional phase, within
a few years - and &lt;strong&gt;not&lt;/strong&gt; the 10 the state is giving, that teachers both
new or existing get that preparation.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Certified CS teachers - 2 flags in NY</title>
      <link>https://cestlaz.github.io/post/certified-teacher-in-ny/</link>
      <pubDate>Wed, 28 Sep 2022 16:39:37 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/certified-teacher-in-ny/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been running Hunter&amp;#39;s teacher certification program now for three
years. We started with our Advanced Certificate which allows currently
working teachers to earn an additional cert in CS and soon a few
masters students joined the pipeline.&lt;/p&gt;
&lt;p&gt;
In three years we&amp;#39;ve made great progress. Approximately 45 New York
City teachers are either state certified to teach CS or are qualified
to recieve the certification once they file with the state. We&amp;#39;ve got
close to 60 more joining them this spring. That&amp;#39;s really exciting as
it gets us to the critical mass I think the city needs moving
forward.&lt;/p&gt;
&lt;p&gt;
A core of knowledgeable teachers to provide an existing
community of professionals as new young CS teachers join the
profession over the next few years.&lt;/p&gt;
&lt;p&gt;
This work something I&amp;#39;m both proud and excited about but there are two
major concerns.&lt;/p&gt;
&lt;p&gt;
First, there are many teachers teaching CS in NY that have no
intention of earning the new certification and also don&amp;#39;t really know
the subject. &lt;/p&gt;
&lt;p&gt;
Second, this is only New York City and NY is a big state and not
enough is happening in other parts of the state.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll talk about the first issue in my next post but for now, let&amp;#39;s
talk about the state.&lt;/p&gt;
&lt;p&gt;
A big thing I&amp;#39;m excited about with my current cohort of teachers is
that five of them are from the Finger Lakes region of NY. About a year
ago, I was essentially cold called by educators from the Dryden school
district. They wanted to make sure they had knowledgeable CS teachers
and saw that we had an advanced certificate program. They wanted to
send their teachers to us for certification. There were issues - for
funding, they ended up applying and receiving an NSF grant and on my
end, I had to make sure that our program would remain remote - that
commute from the Finger Lakes would&amp;#39;ve been brutal. When all was said and
done, we started this past summer with over 50 teachers and teacher
candidates from New York City and 5 from Dryden and neighboring
Groton. Those five teachers have been a terrific addition to the
cohort and I think it&amp;#39;s also worked for them - they immediately become
a local network of CS teachers as opposed to being the only one in
town and they&amp;#39;ve also tapped into the New York City network we&amp;#39;ve been
building.&lt;/p&gt;
&lt;p&gt;
This means we&amp;#39;ve planted 2 flags in NY State - two locations that have
or will soon have certified CS teachers. The ones that have finished
my program in NYC along with the five from Dryden and Groton.&lt;/p&gt;
&lt;p&gt;
The trouble is, we need more.&lt;/p&gt;
&lt;p&gt;
Right now, there are 5 institutions with register masters program in
New York State and 3 wither registered bachelors programs. I can&amp;#39;t
vouch for the quality of any programs other than mine and I don&amp;#39;t know
how many are active.&lt;/p&gt;
&lt;p&gt;
Regardless, the issue here is that these are all programs that provide
initial certification - they&amp;#39;re for new people entering the
profession. These programs are needed but will ramp up slowly across
the state. At Hunter we&amp;#39;ve had registrations of 2, 4, and now most
recently 5.&lt;/p&gt;
&lt;p&gt;
We need more Advanced Certificate programs across the
state. Programs that allow current CS teachers to learn this new field
so they can teach it legally and teach it well. Right now, Hunter&amp;#39;s
the only game in town. This is one of the reasons why I&amp;#39;ve fought
to keep us online - you can&amp;#39;t expect teachers from way out in queens
to come into the heart of Manhattan after a school day for classes and
then back out LI or wherever they live let alone teachers from 4 hours
north of the city.&lt;/p&gt;
&lt;p&gt;
We need more Advanced Certification programs and we need ways to fund
the teachers who need these programs. I&amp;#39;ve been extremely fortunate
that organizations like Gotham Gives and Google support our work in
New York City but I&amp;#39;m thinking we need the equivalent up the Hudson
Valley, across the Erie Canal and all the way to Buffalo.&lt;/p&gt;
&lt;p&gt;
These programs and the related funding also wouldn&amp;#39;t have to last
forever. After there years of intense work, NYC will have its core of
certified teachers and I expect the demand for my advanced cert
program to go way down while we slowly see an uptick in interest in
our Masters program.&lt;/p&gt;
&lt;p&gt;
Next time, I&amp;#39;ll talk about that other issue - the fact that we&amp;#39;re
going to have a lot of teachers that don&amp;#39;t really know CS and how to
teach it for a long time but this is enough for now.&lt;/p&gt;
&lt;p&gt;
We need more programs across the state that will recertify current
teachers and really set them up as CS teachers. I&amp;#39;ve done what I could
in that regard at Hunter and am very proud of our partnership with
Dryden and Groton but it&amp;#39;s got to be more than Hunter college.&lt;/p&gt;
&lt;p&gt;
So, hey, if you&amp;#39;re somewhere outside of the city and this is important
to you - drop me a line, I&amp;#39;d love to work together to make things
happen across the state.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Research Vs Practice</title>
      <link>https://cestlaz.github.io/post/research-vs-practice/</link>
      <pubDate>Sun, 11 Sep 2022 12:33:02 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/research-vs-practice/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been seeing a lot of tweets recently about &amp;#34;the research&amp;#34; - how
PD should present how to teach and cite &amp;#34;the research,&amp;#34; how research
defines the best practices teachers should use, and on and on.&lt;/p&gt;
&lt;p&gt;
As readers know, this is not something I subscribe to.&lt;/p&gt;
&lt;p&gt;
What got me this time was a specific tweet on the PD thing and how
it&amp;#39;s critically important to show the research to &amp;#34;prove&amp;#34; the
effectiveness of whatever is being pitched. Sorry, no. &lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s look at two scenarios.&lt;/p&gt;
&lt;p&gt;
Scenario 1:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You get a PD either from a researcher telling you how to teach based
on their research or, as would be more common, from an administrator
or private consultant or contractor who read some researcher&amp;#39;s work.&lt;/p&gt;
&lt;p&gt;
The presenter tells you about the practice and how the research said
it was the one true way.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Scenario 2:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You get a PD from an actual teacher. They tell you what they tried,
how it went, and a robust discussion ensues between the presenter and
audience on how the practice might or might not work with the
audience&amp;#39;s students.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I&amp;#39;m taking scenario 2 any day of the week. &lt;/p&gt;
&lt;p&gt;
There is and can be good education research and it can have tremendous
value but the truth is, education research has pretty poor overall reputation
and as far as I can tell, it&amp;#39;s largely deserved. Over my career, I&amp;#39;ve
been told how to teach multiple times based on the research only to
hear a few years later that it was wrong and there&amp;#39;s another one true way.&lt;/p&gt;
&lt;p&gt;
Ed research, as far as I can tell is rarely if ever reproduced and
hardly ever accounts for the many, MANY variables that can change
outcomes.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll talk about the good side of Ed Research down below but first an
example.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve spoken to ed researchers over the years and told them a story
of my classes and how my first period CS class always under-performed
as compared to my later classes. Not by a lot but it was
consistent. The response was always the same - &amp;#34;that class starts at
8:00am, right? That&amp;#39;s way too early - that&amp;#39;s the difference.&amp;#34; Sounds
good and truth be told, I agree that 8:00am is too early but that
wasn&amp;#39;t the factor. My first period was weaker because math team ran
at the same time. My other CS classes always had a math team ace or
two pulling up the average. Once I took them out of the mix, the
variance was gone.&lt;/p&gt;
&lt;p&gt;
There are so many subtle and not so subtle factors that can affect a
class that it&amp;#39;s impossible for &amp;#34;the research&amp;#34; to cover it all. Sure,
you can account for a few, particularly big and obvious ones but there
are so many more. Was the class before or after lunch or gym? What
about on the sunny side of the building getting the greenhouse affect
in the mid afternoon? What about just certain mixes of students. The
variables are endless.&lt;/p&gt;
&lt;p&gt;
Rather than telling us teachers how to teach based on &amp;#34;the research&amp;#34;
I&amp;#39;d much rather hear from, and/or talk to teachers about things
they&amp;#39;ve tried. What worked for them and what didn&amp;#39;t. Why, at least
from their perspective. Then I can pick and chose and try for
myself. While I&amp;#39;ve gotten some good ideas from research papers, the
amount is pretty meager compared to what I&amp;#39;ve learned from other
teachers.&lt;/p&gt;
&lt;p&gt;
All this said, I do think that there can be good and great research
and that good research is important.&lt;/p&gt;
&lt;p&gt;
Even if you don&amp;#39;t account for all the variables, researchers are
documenting practices and this is importance. I&amp;#39;ve learned much more
from teachers than from ed researchers about teaching but what I&amp;#39;ve
learned from teachers is ephemeral. It&amp;#39;s not recorded for all
time. The research can document these practices. We just have to take
a stronger line as a community in saying that &amp;#34;this is what we tried,
here are some of the variables, and here is what happened. It might
work for you or it might not, it&amp;#39;s not the one true way.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Another side where ed research can have a major positive impact is
that when researchers work with teachers they can develop practices
and tools together that directly help teachers. A great example of
this is what Mark Guzdial is doing with his teaspoon languages.&lt;/p&gt;
&lt;p&gt;
So anyway, after seeing all those tweets I felt I had to vent. I know
this is not a popular view in some of my circles but that&amp;#39;s okay,
contrary voices are important as well and as the designated old CS Ed
Curmudgeon I&amp;#39;m always happy to take that role :-).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Subtle Errors</title>
      <link>https://cestlaz.github.io/post/subtle-errors/</link>
      <pubDate>Fri, 02 Sep 2022 15:05:19 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/subtle-errors/</guid>
      <description>&lt;p&gt;
The semesters back up in full swing again - teaching 2 undergrad
classes in person - CS0 in Python and CS1 in C++ along with my teacher
certification class - Ethics via Zoom. Grand total of about 125
students. An error came up in the CS0 class the other day that
reminded me how tough it is not only to prepare students to deal with
all the things that can go wrong when learning to program but even for
a teacher to realize what&amp;#39;s going on.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the code. It looks pretty straightforward and should work to
draw a square.&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; turtle

wn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; turtle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Screen()

crush &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; turtle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Turtle()

crush&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;forward(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)
crush&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;left(&lt;span style=&#34;color:#ae81ff&#34;&gt;90&lt;/span&gt;)
crush&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;forward(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)
crush&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;right(&lt;span style=&#34;color:#ae81ff&#34;&gt;90&lt;/span&gt;)
crush&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;forward(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)
crush&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;right(&lt;span style=&#34;color:#ae81ff&#34;&gt;90&lt;/span&gt;)
crush&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;forward(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)
crush&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;right(&lt;span style=&#34;color:#ae81ff&#34;&gt;90&lt;/span&gt;)

wn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exitonclick()
wn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mainloop()&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;
Problem is, it didn&amp;#39;t. Now, algorithmicaly this is correct and in fact
the actual code looks correct as well but the student couldn&amp;#39;t get it
to run.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s an actual screenshot that resulted in the error. Can you spot
the problem?&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;&lt;img src=&#34;https://cestlaz.github.io/img/thonny-error.png&#34;/&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;
I spotted it pretty quickly. Not because I&amp;#39;m any good at this but
because I&amp;#39;ve seen the error before. It turns out the student had named
their program file &lt;strong&gt;turtle.py&lt;/strong&gt; and so when line 1 tried to &lt;strong&gt;import
turtle&lt;/strong&gt; we ended up with a circular reference. Instead of loading the
turtle graphics module, it would try to load itself. Had the actual
error message remained on the screen it would have said something
about &amp;#34;circular reference&amp;#34; but that wouldn&amp;#39;t help a student and truth
be told it probably wouldn&amp;#39;t help most CS teachers in diagnosing the
problem. Now, the student wasn&amp;#39;t faultless here - I had explicitly
stated that they should name their program file &lt;strong&gt;t1.py&lt;/strong&gt; but we all
know how well students follow directions ;-).&lt;/p&gt;
&lt;p&gt;
This is just one example of the myriad issues that arise when teaching
programming. One could try to minimize these issue by working in
sandboxed environments but then when students leave class and the
sandbox. The sandbox makes life easier for the teacher but it&amp;#39;s really
only kicking the can down to someone else.&lt;/p&gt;
&lt;p&gt;
I remember this being a big deal when codecademy wa the big thing
around a decade ago. Everyone went to their site and &amp;#34;learned&amp;#34; how to
program. So many of them realized after finishing the course that they
couldn&amp;#39;t do anything outside of the little codecademy programming
window. This isn&amp;#39;t to say that Codecadmey wasn&amp;#39;t a good product or
service but students learning about how to deal with platform and
implementation issues is a real one.&lt;/p&gt;
&lt;p&gt;
This particular issue left some hints - the error mentioned the import
and said that it was circular but there are plenty of weird errors
like this - dealing with versions, file and module locations, build
systems and even things like disk quotas and file permissions that can
make learning to program much more of a minefield than it should be. &lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t have any real answer as to how and when these issues should be
dealt with - how much we should shield our students at first and how
we should expose them to real world issues but it&amp;#39;s probably something
teachers should be talking about more.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teaching CS - How early and how often?</title>
      <link>https://cestlaz.github.io/post/cs-how-early/</link>
      <pubDate>Tue, 16 Aug 2022 15:38:55 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cs-how-early/</guid>
      <description>&lt;p&gt;
A big part of the CS4All movement has been making computer science
available at all grade levels. Of course that can mean many
things. Grade levels could be elementary, middle, and high school or
it can me k-2, 3-5, 6-8, 9-12 or maybe even every grade.&lt;/p&gt;
&lt;p&gt;
Does it mean required at every level or just an option?&lt;/p&gt;
&lt;p&gt;
This has led to many discussions and, at least from the ones I&amp;#39;ve
listened in on, the prevailing feeling from the CS side is all CS all
the time.&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t know if this should be the case. It&amp;#39;s important to think about
other factors - bang for your buck, budgets, student workload,
available faculty, what are the other requirements, and more.&lt;/p&gt;
&lt;p&gt;
This question also isn&amp;#39;t limited to computer science, or at least it
shouldn&amp;#39;t be. K12 schooling is still a zero sum game - there are only
so many minutes in a school day and while CS is important, so too are
most if not all of the other subjects and some, like art and music are
in danger or being left by the wayside at the expense of CS. Of
course, on the other hand, there are some subject that I feel are
already given too much time or the wrong amount.&lt;/p&gt;
&lt;p&gt;
That said, this post is about CS. We have neither the funds nor the
faculty to offer CS as a requirement in every grade but is it even
necessary? I don&amp;#39;t know. An important part of offering CS in K12 is so
that it&amp;#39;s on a student&amp;#39;s radar so they can consider studying more
after HS. This is particularly important with some colleges requiring
students apply as a CS major before even attending. Another side is to
give a student the base level knowledge that we feel every educated
person should have just as we seek to do this in biology, chemistry,
history and so on.&lt;/p&gt;
&lt;p&gt;
I know that we can accomplish these goals with a single class
requirement and two years of offerings overall . How do I know this?
Because we did this at Stuy. Doing this requires two basic things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A well taught, well designed intro course that exposes students to
the subject.&lt;/li&gt;
&lt;li&gt;Covering enough material deeply enough so that students are well
prepared for the next steps in college should a student take them.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The required intro gives the base level that everyone should have and
a more advanced follow up elective sets students up for success if
they want more in college. Truth be told the required course should
really be a year rather than a semester but we still made it work.&lt;/p&gt;
&lt;p&gt;
This fits well in the Stuyvesant program and given New York graduation
requirements adding a single required course or even a required year
fits pretty easily and adding electives also isn&amp;#39;t a problem.&lt;/p&gt;
&lt;p&gt;
If you can&amp;#39;t offer or require more then this can be enough. The
question, though, is - &amp;#34;is it ideal?&amp;#34; I&amp;#39;d be hard-pressed to say that
a school should require more than a year of CS. If you do it right and
follow up with electives a year is plenty. If you don&amp;#39;t do it right,
well, then multiple years of bad CS isn&amp;#39;t any better than 1. &lt;/p&gt;
&lt;p&gt;
What about earlier grades? Middle school? Standalone CS is nice but is
it necessary or are we better off embedding CS into other classes? I
haven&amp;#39;t landed on an opinion on this but I do know that we&amp;#39;ve had a
few middle school teachers graduate from my State Certification
Program and I&amp;#39;d love to get their opinions over the next few years. 
As a general statement, I think it&amp;#39;s safe to say that if you can fit
in some meaningful CS in middle school that would be great but if I
had a choice to either require it in middle school or in high school,
I&amp;#39;d opt for HS. Middle school is too far from college and work. Why
would I say this? Because of what I&amp;#39;ve noticed. There were periods of
time where CS, or at least programming or web dev were introduced in a
lot of Stuy&amp;#39;s feeder schools and more often than not, when I surveyed
students about past experiences they either barely remembered them
(wait, I think I did something like making a web page in 7th grade…)
or in any event based on my surveys, it made little difference towards
either success in High School CS nor in interest in doing more CS.&lt;/p&gt;
&lt;p&gt;
Finally, the primary grades. When the whole CSforAll thing got started
I noted that a lot of what we&amp;#39;d see in the elementary schools would be
a rebranding of stuff that already being done in schools that can
afford it - logic, problem solving, algorithms etc and also a
relabeling of already taught concepts using CS or CT vocabulary. This
is all good stuff and since it&amp;#39;s more foundational it&amp;#39;s probably
pretty important. Of course, when schools and teachers had the freedom
and budget, this was already happening prior to the CS movement even
if we didn&amp;#39;t call it CS.&lt;/p&gt;
&lt;p&gt;
So, do we need CS at all levels? Probably not. Would it be nice? Sure
but we&amp;#39;re not serving kids if we&amp;#39;re just CS zealots. We have to look
at the big picture and the whole student. If I ran a school system and
could only afford CS at one level I&amp;#39;d go high school as I outlined
above. If I could do two, I&amp;#39;d hop down to elementary school and then
fill in middle last. Of course, that&amp;#39;s just me.&lt;/p&gt;
&lt;p&gt;
Of course non of what I&amp;#39;ve said talks at all about digital citizenship
or fluency but that&amp;#39;s for another day.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>End of summer program beginning of summer break</title>
      <link>https://cestlaz.github.io/post/cohort-3-end-of-summer/</link>
      <pubDate>Wed, 03 Aug 2022 11:45:33 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cohort-3-end-of-summer/</guid>
      <description>
&lt;p&gt;
Yesterday was the last day of classes for our current cohort. The
rest of the week and maybe weekend will be all grading all the time
and then I&amp;#39;ll try to tune out work for a couple of weeks to try to
recharge the batteries. Since there are some ongoing Hunter
administrative snafus I&amp;#39;m not all that optimistic on getting real down
time but we&amp;#39;ll see.&lt;/p&gt;
&lt;p&gt;
So, how did it go?&lt;/p&gt;
&lt;p&gt;
Overall I&amp;#39;m happy with the results. We had a much larger cohort -
almost three times the size of past years so that presented challenges
but at the end of the day the participants showed a lot of growth and
based on our anonymous survey the vast majority were very happy with
the experience. There were a couple who were not happy but in a large group,
particularly of teachers being taught, you&amp;#39;re not going to please
everybody.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Challenges
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The large group was a challenge but I&amp;#39;m not really sweating it since I
don&amp;#39;t expect there to be cohorts nearly this large in the future. I
had a personal goal of getting NYC to around 100 certified teachers
ASAP and that&amp;#39;ll be done once this cohort finishes in the spring but I
suspect that as we move on, there will be less demand for teachers
getting an additional CS certificate while on the other hand, there
will be a slow and steady increase in demand for Masters programs. At
the same time, additional programs should start coming online across
the state.&lt;/p&gt;
&lt;p&gt;
The end result should be no more classes of 60.&lt;/p&gt;
&lt;p&gt;
We also had elementary school teachers for the first time. This added
an additional axis of complexity. We couldn&amp;#39;t do a whole lot about
some of it. The state created a K12 cert so there&amp;#39;s no way around it,
all students must learn the CS we feel is needed for a 12th
grader. Creating two tracks isn&amp;#39;t an option even though it would make
more sense.&lt;/p&gt;
&lt;p&gt;
The other challenge was the spread of expertise. Other than saying
that most of the participants were real troopers on both sides of the
experience spectrum I&amp;#39;ll leave this alone since it&amp;#39;s not appropriate
for a public post. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Good Stuff
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
As I just said, most participants were real troopers. Most of the
participants with strong CS backgrounds put on their teacher hats and
helped support less experienced teachers. We&amp;#39;d frequently drop in and
lurk in a breakout room to see the more expereinced guide the room and
it was rare to see one of them dominate and just &amp;#34;do the task&amp;#34;
(although it did occasionally happen). Likewise most of the
participants who came in raw showed tremendous progress and
growth. Many stayed for end of day office hours to go beyond what we
were asking because they wanted to master everything. &lt;/p&gt;
&lt;p&gt;
Also, based on the comments, the cohort is building a strong sense of
community. There were a couple of comments where a student or two felt
otherwise, but they were in an extreme minority (based on the
anonymous surveys) and from their full comments it looks like they
just didn&amp;#39;t buy into the program at all.&lt;/p&gt;
&lt;p&gt;
We also had a handful of participants from outside the city with five
from up near Ithaca. It was great adding them to the mix and I think
there will be some rich discussions in the Fall in curriculum
development when we can not only contrast schools but entire
districts.&lt;/p&gt;
&lt;p&gt;
Of course, at a base level, there&amp;#39;s also the fact that everyone got
through the program and there was a lot of growth across the board. &lt;/p&gt;
&lt;p&gt;
For me personaly, the highlight was getting to know a bunch of great
teachers and people and to be able to work with my team again. My team
from Stuy is still the thing I miss most at Hunter. It&amp;#39;s funny, we had
one of my CS colleagues from Hunter also on the team and he commented
on how great it was to work with this team and how well we worked
together. A number of students also pointed that out as a positive.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
A couple of things that stood out
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
These are just a few things that have been on my mind since
closing. Maybe they&amp;#39;re important, maybe not and I might change my own
mind down the line. Still, these are few random or tangential things
that stood out from the past month.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
The state of CS PD
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
This year, when I saw the spread of CS expertise, I decided to dig
deeper into teacher backgrounds. I also looked back to the teachers
from the first two cohorts who came in barely able to write &amp;#34;Hello
World!&amp;#34;&lt;/p&gt;
&lt;p&gt;
In many, indeed most of these cases the teacher had gone to the &amp;#34;usual
suspects&amp;#34; PD sessions - mostly through CS4All in NYC but sometimes
arranged independently by them or their school.&lt;/p&gt;
&lt;p&gt;
I then looked to see how long these teachers were doing these PDs.&lt;/p&gt;
&lt;p&gt;
In many cases it was years - three, four, five, or even more years of
going to CS training.&lt;/p&gt;
&lt;p&gt;
This really alarmed me. Well, actually, I already suspected this but
it was a sobering confirmation. I know a lot of people won&amp;#39;t want to
hear this but teachers attending CS &amp;#34;training&amp;#34; for multiple years
should be well beyond the most basic of programs. Even if they haven&amp;#39;t
used a text based language, after multiple years, they should be able
to transition to text fairly easily.&lt;/p&gt;
&lt;p&gt;
So, I know that a lot of people might be offended by my saying this
but I stand by it. There are some providers I know who do good work
but I think what I saw here is an indictment of the overall PD
approach that, to paraphrase what code.org said a few years ago,
&amp;#34;trained XXXXX CS teachers&amp;#34; in a very short period of time.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-5&#34;&gt;
Split the class
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
Another interesting thing is that there weren&amp;#39;t a lot of comments from
participants about the mixed teacher levels in terms of sharing
experiences. On the other hand many would have loved us to be able to
split based on programming experience. I haven&amp;#39;t had a chance to do a
deep debrief with JonAlf and Topher who ran the methods components but
this was a little bit of a surprise. We&amp;#39;ll see if this becomes a
larger discussion topic in Curriculum Development.&lt;/p&gt;
&lt;p&gt;
On the splitting for programming level we couldn&amp;#39;t do that for
assorted reasons and moving forward I expect it not to be an issue.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-6&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-6&#34;&gt;
Teaching Methods and Best Practices
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-6&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
We approach methods, and in fact our approach to teaching in general
is all about helping teachers build a toolbox. We have to do a better
job at communicating why this is our approach.&lt;/p&gt;
&lt;p&gt;
There were a couple of comments both in class and in the survey about
&amp;#34;best practices&amp;#34; and &amp;#34;the research&amp;#34; with respect to methods. I get it,
younger teachers are hit over the head with this type of edubabble
from their first education course through every department meeting,
PD, and observation.&lt;/p&gt;
&lt;p&gt;
The truth is that there are no &amp;#34;best practices,&amp;#34; there are practices
that under certain circumstances, based on a combination of students,
teacher, school, culture and more can be most effective for &lt;strong&gt;&lt;strong&gt;THAT
SPECIFIC TEACHER&lt;/strong&gt;&lt;/strong&gt; to use in &lt;strong&gt;&lt;strong&gt;that time at that place.&lt;/strong&gt;&lt;/strong&gt; Teachers
aren&amp;#39;t usually taught this, they get hammered with &amp;#34;best practice&amp;#34; and
&amp;#34;the research&amp;#34; but nobody ever tells them that while there are some
people doing great work in Ed research and CS Ed research, the field
is generally held in low regard, work is almost never replicated and
when you read most of it, there are tons of important variables that
the research leaves out.&lt;/p&gt;
&lt;p&gt;
On top of this, we can go down a long list of &amp;#34;best practices&amp;#34; which
were foisted upon teachers as the one true way only to be replaced a
few years later with the new &amp;#34;best practice.&amp;#34;&lt;/p&gt;
&lt;p&gt;
We believe in building a toolbox of content and techniques and we
trust teachers to know their own strengths and weaknesses as well as
their student needs and that they&amp;#39;ll use the right tool at the right
time.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-7&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-7&#34;&gt;
Writing plans from scratch 
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-7&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
Another thing I noticed was that when we got to the lesson planning
unit, a lot of teachers really wanted to base their work off of a
canned lesson. They said they wanted to adapt it but they were really
reluctant to come up with something on their own, only using other
resources for examples, references, etc.&lt;/p&gt;
&lt;p&gt;
I was a little surprised about this reluctance but upon thinking, it
makes sense. Even if they adapt lessons, CS PD and training is all
about providing canned lessons to teachers so in many cases, it&amp;#39;s what
they&amp;#39;re used to. Add to that the fact that this was for an Education
class, and to be honest, the demands and rigor of education classes
vary greatly  and in many cases the default approach is path of least
resistance. I get it. I did many an Ed class where I threw together a
quick paper from prefabbed sources to get my A for the semester. I&amp;#39;d
like to think, though that our program is a bit better than that.&lt;/p&gt;
&lt;p&gt;
I think the cohort ended up doing it right and with the right attitude
but I think it&amp;#39;s interesting to see what teachers are normally
presented with and how that contrasts, good or bad, with what my team
is selling.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-8&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-8&#34;&gt;
What&amp;#39;s next
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-8&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
So, summer&amp;#39;s in the books. We&amp;#39;ll take this group through a few more
courses and in the Spring they&amp;#39;ll join the ranks of New York State
Certified CS Teachers. &lt;/p&gt;
&lt;p&gt;
Personally, I&amp;#39;m going to try to disengage from Hunter related stuff
for the next few weeks and try to recharge. There will be a few things
I have to deal with but I&amp;#39;ll try to keep them to a minimum. After a
few really hard years I&amp;#39;m hoping I&amp;#39;ll start up again at the end of the
month with some renewed energy.&lt;/p&gt;
&lt;p&gt;
I also have to give some serious thought to the long term both for
Hunter and me. Devorah turned 55 last November and I join her in
October so, as many of you know, we&amp;#39;ve got some potential big changes to
consider. More on that though once the year starts.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>CoTeaching - learning from colleagues</title>
      <link>https://cestlaz.github.io/post/co-teach/</link>
      <pubDate>Thu, 28 Jul 2022 12:49:50 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/co-teach/</guid>
      <description>&lt;p&gt;
A few weeks ago I wrote on how &lt;a href=&#34;https://cestlaz.github.io/post/workshop-a-lesson/&#34;&gt;you can&amp;#39;t workshop a lesson&lt;/a&gt;. Besides
the slow feedback loop, teachers largely work alone. Between classes,
teachers might have a small bit of time to collaborate and bounce
around ideas but with a HS teacher typically having 5 classes a day +
professional assignment there&amp;#39;s not a lot of time.&lt;/p&gt;
&lt;p&gt;
CS teachers typically have it worse as they might be the only CS
teacher in their building. My hope is that this current cohort of
Hunter CS Ed students, like earlier cohorts form their own support
network but that&amp;#39;s not what I&amp;#39;m writing about today.&lt;/p&gt;
&lt;p&gt;
As you know, for the past month I&amp;#39;ve been working my CS Teacher
certification program. We&amp;#39;ve got close to 60 participants. This means
we were able to engage 2 teachers per class. Truth be told, I&amp;#39;ve got a
great team and the whole crew is supporting each other in all of the
classes, not just the one they&amp;#39;re teaching.&lt;/p&gt;
&lt;p&gt;
The end result is that we&amp;#39;re all working harder but we also get to
teach together and, in fact, at least partially workshop our lessons.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m loving it because the one thing I really miss teaching at Hunter
is my teaching team. I&amp;#39;m the only person doing what I do at Hunter so,
just like so many other CS teachers, I&amp;#39;m on an island.&lt;/p&gt;
&lt;p&gt;
When Sam was talking about run time analysis, he had a really nice way
of exploring the run time of the n^2 sorts. I think I do a pretty good
job when teaching this but I loved the way Sam developed and
communicated the topic. Likewise, he did a unit on Expression Trees
which was very different from my approach to trees. We had plenty of
time before he did these units to discuss them and afterwards to
debrief. I&amp;#39;m 100% stealing some of this when they come up in my
classes.&lt;/p&gt;
&lt;p&gt;
Not to just be a taker, Sam really liked the way I introduced and
developed linked list and will be stealing that from me on his next
iteration.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s being able to work with other teachers like this that makes
running the summer program special. On the other hand, the workload is
far to great to be sustainable. This is also the kind of thing that
teachers should be given the time to do. Giving teachers time to work
together in their schools is worth so much more than the professional
developments that schools usually offer and require.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m hoping that the program participants, in addition to the core
material in our classes are also reflecting on how each of the
instructors are running parts of the classes. Not saying that we&amp;#39;re
hitting everything out of the park but a fair and careful analysis of
how we teach a subject and comparing it with what they do can provide
an extra layer of development beyond what&amp;#39;s formally in the classes.&lt;/p&gt;
&lt;p&gt;
We&amp;#39;d actually highlight this more had the state not decided, in their
infinite wisdom that we couldn&amp;#39;t merge our CS and CS Ed classes. We
did that for cohort 1 and it was extremely effective.&lt;/p&gt;
&lt;p&gt;
In any event, it&amp;#39;s been a very full month with a couple more days to
go but thought this was something worth shareing about now.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Masters of CS Education</title>
      <link>https://cestlaz.github.io/post/masters/</link>
      <pubDate>Fri, 22 Jul 2022 06:45:43 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/masters/</guid>
      <description>&lt;p&gt;
I was in the middle of writing a post on how early and often we should
be teaching CS in our schools but had to jump in with a quick hit
here.&lt;/p&gt;
&lt;p&gt;
As any reader here knows, Hunter was the first institution with state
approved CS Teacher Education Masters and Certificate programs. Siena
had the first Bachelors program (Hunter doesn&amp;#39;t have undergraduate
education programs that lead to state certification).&lt;/p&gt;
&lt;p&gt;
We&amp;#39;ve been graduating certificate students for a couple of years
now. Those are professional teachers - working under another
certification area who are earning the new New York State CS
credential. We now have around 40 certificate graduates who are either
state certified or qualified to be state certified if they haven&amp;#39;t
filled out the state application. It was cool that we were the first
but more importantly that NY is getting qualified CS teachers.&lt;/p&gt;
&lt;p&gt;
We passed another milestone the other day. Our first two Masters
students graduated this past June and I just heard from one of them
that she now possesses New York State Certification to teach Computer
Science. She should be the first newly minted Masters grad to have
earned certification.&lt;/p&gt;
&lt;p&gt;
Another cool milestone passed.&lt;/p&gt;
&lt;p&gt;
I expect that in the coming years, the demand for Hunter&amp;#39;s certificate
program will go down as demand for the Masters program goes up. We&amp;#39;ll
see if I&amp;#39;m right.&lt;/p&gt;
&lt;p&gt;
For now, just wanted to share a bit of cool news.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CS - it isn&#39;t all that</title>
      <link>https://cestlaz.github.io/post/cs-all-that/</link>
      <pubDate>Wed, 13 Jul 2022 11:52:31 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cs-all-that/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve dedicated my entire career - something like 32 years, to CS
education and the spread of CS education. So, while I try to be a
cheerleader I also think it&amp;#39;s important to call out things that we do
or say that are maybe not so great.&lt;/p&gt;
&lt;p&gt;
So, I hope I don&amp;#39;t annoy too many people (or maybe I hope I do) with
this post and maybe a few more to come.&lt;/p&gt;
&lt;p&gt;
Before diving into specific CS teaching methods, we started with some
general discussion. What is CS? Why study CS? Why it&amp;#39;s important to
offer etc. This is is really red meat for CS teachers so rich
discussion quickly ensued. Nothing particularly new, I&amp;#39;ve heard and
has been part these conversations so many times.&lt;/p&gt;
&lt;p&gt;
Lots of good stuff but there were a few things that always come up in
these conversations that I think are worth calling out.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CS is creativity&lt;/li&gt;
&lt;li&gt;CS is problem solving&lt;/li&gt;
&lt;li&gt;CS is making mistakes&lt;/li&gt;
&lt;li&gt;CS is building projects.&lt;/li&gt;
&lt;li&gt;Students like CS, it&amp;#39;s fun.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These aren&amp;#39;t bad things and in fact are almost always good
things. What I want to call out is that they&amp;#39;re not CS and certainly
not exclusive to CS.&lt;/p&gt;
&lt;p&gt;
The big thing I don&amp;#39;t like about this is that the good things here are
not exclusive to CS and are not always in CS. CS can teach problem
solving but so can Math. Creativity? How about writing or the
arts. Making mistakes? Science? Math. and on and on.&lt;/p&gt;
&lt;p&gt;
On the flip side CS doesn&amp;#39;t necessarily have these and other good
attributes. CS is generally perceived as fun but then again we&amp;#39;re CS
educators. Math teachers think math is fun. Likewise, as long as CS
classes are populated by students electing to be there and as long as
the content is lightweight it&amp;#39;s not surprising that many kids think
it&amp;#39;s fun. When standardized testing sets in and teachers are
pressured to cover more with less in less time, this will probably
change.&lt;/p&gt;
&lt;p&gt;
I will not infrequently say that something I&amp;#39;m teaching is &amp;#34;inherently
cool&amp;#34; but the truth is it isn&amp;#39;t. There are plenty of things that I
might think are cool or neat or fun but that doesn&amp;#39;t automatically
mean all our students will feel the same way.&lt;/p&gt;
&lt;p&gt;
Problem solving and creativity? &lt;/p&gt;
&lt;p&gt;
As I said before, just about every other field can be about these but
CS might not. Back when the code school / bootcamp boom started in the
Ruby on Rails days, those code schools taught neither problem solving
nor creativity. They taught rote pattern programming to create a very
specific type of application to solve a specific problem that was in
demand in the early days of the second internet boom.&lt;/p&gt;
&lt;p&gt;
CS also isn&amp;#39;t also necessarily taught in a creative way in the
K-College classroom. I&amp;#39;ve seen many classes where student create a
game but they all code it together and the creativity consists of
students deciding on the sprite to use for the player. Yes, this
allows for a controlled form of creativity on the visual part of their
project but not on the problem solving side. &lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t mean to be down on CS. CS can incorporate all these good
things and more but I think it&amp;#39;s important to recognize that other
fields can be these things as well and CS might not be all we think
it&amp;#39;s cracked up to be.&lt;/p&gt;
&lt;p&gt;
CS does, though have one edge over most other fields. As the new kid
on the block K12 CS education is not as highly regulated and
restricted as other fields. We don&amp;#39;t have standardized exams nor
standardized curriculum. The closest we have are APCS-A and
APCS-Principles. This means teachers are more free to teach what they
want how they want. This can be great with a well prepared, qualified
tearch or less great with a less ready one.&lt;/p&gt;
&lt;p&gt;
As CS becomes more part of the system I expect teachers to have less
freedom in what they teach and how they teach. As a community we might
be able to steer the ship towards keeping the good stuff but then
again, we might not.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s important, as a community of educators, that as CS becomes more
standardized that the teachers and not the curriculum providers, not
the standards makers, and not the gorillas in the room with the
oversized influence but none of the actual teaching or CS experience
have a voice to keep the good stuff and not go the way of other
disciplines that are no longer considered cool.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teacher Preparation - know what&#39;s under the hood</title>
      <link>https://cestlaz.github.io/post/arraylists-under-the-hood/</link>
      <pubDate>Tue, 12 Jul 2022 11:52:31 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/arraylists-under-the-hood/</guid>
      <description>&lt;p&gt;
Yesterday was the last day on our first course for teacher
certification. A programming course similar to a college CS1 - think
APCS-A. We&amp;#39;re now moving to a data structures course.&lt;/p&gt;
&lt;p&gt;
There are a few reasons for this. First, it&amp;#39;s depth of knowledge. The
most advanced class a high school student will normally take would be
APCS-A. Data structures is the next course. A teacher should have
studied a topic to a greater depth than the students. We fill in the
breadth in our topics course. Now, this means that our elementary
school candidates need data structures and I&amp;#39;m the first one who&amp;#39;ll
agree that elementary school teachers don&amp;#39;t need the same depth of
knowledge as a high school teacher but New York State in it&amp;#39;s infinite
wisdom decreed that their CS Certification would be K12 - same thing
for all teachers from Kindergarten through the end of high school.&lt;/p&gt;
&lt;p&gt;
A second reason, and this is a big one, is that studying data
structures is a computer scientist or programmers first opportunity to
understand what&amp;#39;s going on under the hood. Why is this important?
Well, to me, it&amp;#39;s one of the differences between what, for lack of a
better word I&amp;#39;ll call a coder or programmer with a computer scientist.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not talking about a computer scientist as a college employed
researcher, I&amp;#39;m using the term as someone who problem solves and
creates solutions using the tools and techniques of computer
science. For a coder / programmer, I mean someone who creates working
programs but doesn&amp;#39;t think deeply about the solution but rather uses
built in constructs, libraries and packages blindly.&lt;/p&gt;
&lt;p&gt;
This is not to say that someone employed as a coder can&amp;#39;t be or isn&amp;#39;t by my
definition, a computer scientist, they certainly can. &lt;/p&gt;
&lt;p&gt;
Back to the point. We closed out the programming class learning about
classes and implementing something that we called a SuperArray,
basically a cut down Java Arraylist.&lt;/p&gt;
&lt;p&gt;
On day one of data structures we went over the ArrayList. This is our
usual strategy - implement something and then you learn about and can
use the built in one.&lt;/p&gt;
&lt;p&gt;
A poorly trained programmer will just learn about the ArrayList and
then use it blindly. But by first exploring something
like the SuperArray, the computer scientist has deeper knowledge.&lt;/p&gt;
&lt;p&gt;
An ArrayList has a number of nice features. You can keep adding to
them paying little attention to size, you can delete from the middle,
insert anywhere and more. All these operations take time. If you try
to remove an element from an ArrayList, the ArrayList has to shift all
the elements past the element in question down. If you want to insert
at the front, you&amp;#39;ve got to shift everything down to make room. Adding
something to the end, however, takes no time at all unless the
underlying array is full, in which case, more work is to be done.&lt;/p&gt;
&lt;p&gt;
When writing the SuperArray, students had to write the code necessary to
do all of these operations so we can discuss the good, the bad, and
the ugly.&lt;/p&gt;
&lt;p&gt;
If you are using an ArrayList and you blindly do all your insertions
at the front, you&amp;#39;re going to have horrible performance but if you
always add to the end, things will be much faster. The coder doesn&amp;#39;t
understand this but the computer scientist does.&lt;/p&gt;
&lt;p&gt;
When we do LinkedLists next week we can dig deeper on these ideas and
even more when we get to sorting and searching.&lt;/p&gt;
&lt;p&gt;
The bottom line is that even if one doesn&amp;#39;t write an entire ArrayList,
exploring under the hood can arm a coder (or teacher) so that they
make wise choices instead of treating every problem like a nail.&lt;/p&gt;
&lt;p&gt;
A side added bonus on this specific SuperArary / ArrayList
project is that when you&amp;#39;re done you can actually look at the Java
ArrayList code. The class won&amp;#39;t understand all of it but they should
be able to get the gist and they&amp;#39;ll see that the Java code is very
similar to what the students wrote. This can be very empowering.&lt;/p&gt;
&lt;p&gt;
After this data structures course, the teachers may never again write
the code for a linked list, implement a hash table or tree or manually
sort a data set but the underlying knowledge will help them understand
and teach all sorts of computer science concepts. A web page is
represented in a a tree, a network is a graph. Understanding hash
tables and search trees are a gateway to databases.&lt;/p&gt;
&lt;p&gt;
Sometimes the specific implementations one studies are never used
again but for teachers, the underlying concepts can be game changes
for their students.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CS Teacher Certification - starting Cohort 3</title>
      <link>https://cestlaz.github.io/post/teacher-cert-cohort-3/</link>
      <pubDate>Tue, 28 Jun 2022 10:25:35 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-cohort-3/</guid>
      <description>&lt;p&gt;
Tomorrow we&amp;#39;ll kick off cohort 3 of Hunter&amp;#39;s Computer Science teacher
Advanced Certificate program. That is, New York State&amp;#39;s only currently
approved program for working, certified teachers that leads to New
York&amp;#39;s new Certificate to teach Computer Science.&lt;/p&gt;
&lt;p&gt;
This is not our first rodeo, having gone through this twice already
but there are a few differences this time out.&lt;/p&gt;
&lt;p&gt;
First off, we&amp;#39;re going big. Cohorts one and two had about 20
candidates each. This time, we&amp;#39;ll have around 55 teachers who will be
joined by around 5 masters students. That&amp;#39;s exciting but a little
scary. I&amp;#39;m sure I&amp;#39;ve also mentioned before that a handful of our
teachers are from the Dryden school district up around the finger
lakes. I&amp;#39;m super excited that we&amp;#39;re able to not only work with NYC
teachers but also to help build the community beyond the five
boroughs. &lt;/p&gt;
&lt;p&gt;
Bigger cohort means more instructors. Adding to the team this
year is my long time partner in crime Sam. I wanted to include Sam
from the start but unfortunately he was on sabbatical the year prior
to cohort 1 and according to DOE rules (he&amp;#39;s a K12 teacher) you can&amp;#39;t
work in any capacity during your sabbatical year. Sam&amp;#39;s been involved
in almost all of my teaching side projects along with JonAlf and
Topher so it&amp;#39;s great that we can get the band back together.&lt;/p&gt;
&lt;p&gt;
We&amp;#39;re also adding on my friend and colleague on the Hunter CS side,
William and I&amp;#39;ve been looking to be able to actually work with him for
years.&lt;/p&gt;
&lt;p&gt;
We&amp;#39;ll also have  4 TAs per class. That is going to be interesting. The
TAs are undergrads - they&amp;#39;re all terrific but it&amp;#39;s possible that some
of the candidates teach in the schools that the TAs attended. It&amp;#39;ll
all be good but it will be interesting.&lt;/p&gt;
&lt;p&gt;
As to running the show, we&amp;#39;ll still use Zoom - one big Zoom when
appropriate but breaking into groups of assorted sizes as appropriate
from small breakout rooms to midsize &amp;#34;sections&amp;#34; for sharing. This will
be a bit of an experiment but we&amp;#39;ll get it right. One nice thing about
teaching teachers is that they know when you&amp;#39;re trying something new
and if you&amp;#39;re open and honest they&amp;#39;ll help you to get it right. I
think that&amp;#39;s also probably something unique about our program. Since
it&amp;#39;s designed by and for K12 teachers and many of the instructors are
K12 teachers we&amp;#39;re all part of the same community. It&amp;#39;s not a bunch of
K12 teachers taking some classes taught by college people who have
theories of how to teach K12. I mean, yes, we do have college profs
involved as well but we also have K12 teachers, including myself
who&amp;#39;ve walked the walk. The teachers in the program get this and know
we&amp;#39;re a family and our goal is to make the program as strong as
possible, not only for them but for future participants.&lt;/p&gt;
&lt;p&gt;
Now, that might sound a little hokey but I really believe it.&lt;/p&gt;
&lt;p&gt;
Beyond Zoom we&amp;#39;ll be using Slack for all discussion - much better than
using Zoom chat. Besides the extra Slack features, Zoom chat goes away
when the Zoom closes. Our Slack from even cohort 1 lives on and is
still active. Truth be told, I prefer Zulip to Slack but we had
already committed to Zoom which is fine.&lt;/p&gt;
&lt;p&gt;
The final piece for tooling is repl.it and that&amp;#39;s been a game
changer. During our first year, repl.it wasn&amp;#39;t quite up to speed so
teachers had to install environments on their own computers. This was
at the start of the pandemic so it was 100% remote. Woof. All sorts of
issues including some nice ones like a teacher with a DOE laptop that
used to have Java on it but not any more (but the registry still had
some hidden settings). Repl.it allows us to have one single consistent
interface that everyone can use plus it integrates with GitHub. Of
course, if a student comes in with a stronger background they can do
their own thing but using repl.it has made things so much easier.&lt;/p&gt;
&lt;p&gt;
So, tomorrow at 9:00am we&amp;#39;re off to the races. An 8 day all day
programming class followed by 16 half days of more advanced
programming along with 16 half days of CS teaching methods. In the
Fall we&amp;#39;ll do our ethics class and curriculum development and then
finally topics in the Spring.&lt;/p&gt;
&lt;p&gt;
That will bring us to around 100 certified teachers.&lt;/p&gt;
&lt;p&gt;
Probably won&amp;#39;t sleep tonight but looking forward to tomorrow.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>You can&#39;t workshop a lesson</title>
      <link>https://cestlaz.github.io/post/workshop-a-lesson/</link>
      <pubDate>Tue, 07 Jun 2022 10:02:36 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/workshop-a-lesson/</guid>
      <description>&lt;p&gt;
The other day, Natan scored tickets for us to see an interview with High
Jackman and Sutton Foster. We&amp;#39;ll be seeing them in &amp;#34;The Music Man&amp;#34;
come this fall.&lt;/p&gt;
&lt;p&gt;
It was fun but it was the taping for a radio interview so nothing
earth shattering or surprising. Still, one thing stuck with me and got
me thinking.&lt;/p&gt;
&lt;p&gt;
Jackman told a story about how, during rehearsals, he wandered down from
his dressing room to find  Foster was working with Jerry
Zaks, the director on &amp;#34;My White Knight.&amp;#34; He remained and observed,
entranced as Foster and Zaks spent an hour or so working on the song.
It reminded me of a Master Class taught by Maxim Vengerov, my favorite
current violinist that I caught on cable one day. &lt;/p&gt;
&lt;p&gt;
It got me thinking about how horribly pathetic our model of teacher
observation, support and improvement is and that you can&amp;#39;t have a
master class for a lesson.&lt;/p&gt;
&lt;p&gt;
The two things in teaching that would be closest to a master class
would be either teaching a mock lesson to a colleague or supervisor or
an observation. Mock lessons rarely occur outside of teacher
interviews but colleagues will observe each other. The problem is,
those aren&amp;#39;t Master Classes. In a Master Class, you have an immediate
feedback loop. You perform, stop, get feedback, rinse and repeat. When
teaching, you get some feedback at the end of the lesson and even if
it&amp;#39;s good you generally can&amp;#39;t implement any changes until next
year. If you&amp;#39;re lucky, next semester. Sometimes you might be able to
rush try things in a class later that day but usually not. Of course,
if and when you do try that change you likely won&amp;#39;t be getting any
feedback on that.&lt;/p&gt;
&lt;p&gt;
The problem is, you can&amp;#39;t stop the lesson in the middle becuase, you
know, the students and you certainly can&amp;#39;t then go back  and reteach
the last 10 minutes again to them to see if it&amp;#39;s better.&lt;/p&gt;
&lt;p&gt;
Although there are many similarities between teaching and performing
there are of course crucial differences. The bar for a performer is
pretty simple - will the audience get something out of the
performance - enough to think positively about it. That&amp;#39;s pretty much
it. To get there, Sutton and Zaks worked on a challenging song. There
wasn&amp;#39;t any audience feedback but rather they worked to achieve the
director&amp;#39;s vision. When Vengerov runs his class, he&amp;#39;s working with his
students on their interpretation of the work. These work in performance
becuase first, presumably they know what works with an audience and
second, an audience may very well go to something to see or hear an
artists interpretation. Personally, I&amp;#39;ll go to one violinist or
anther&amp;#39;s performance of a work specifically to hear their
interpretation.&lt;/p&gt;
&lt;p&gt;
When teaching the bar is harder to define, at least if you&amp;#39;re serious.
about education. My first chairman kept it simple. He said, when you
observe a class, just keep asking yourself &amp;#34;is learning going on?&amp;#34; And
then figure out where and how. I always liked that and always lived by
that.  Of course these days observations aren&amp;#39;t about learning but
about teacher evaluation using garbage metrics like Danielson where
it&amp;#39;s all about checking off the boxes.&lt;/p&gt;
&lt;p&gt;
Of course, good teachers do work to improve their lessons. They try
different techniques, work within the extremely slow feedback loop and
they work with their colleagues even though they&amp;#39;re never given the
time.&lt;/p&gt;
&lt;p&gt;
None of this really means anything. Just something I found interesting
to ponder. Would a master class work for teachers? Maybe. Maybe you
could run a department meeting as one with one teacher presenting and
the rest of the department playing students, both good and bad. That
would actually be pretty interesting. If anyone tries this, let me
know.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Big Four Four</title>
      <link>https://cestlaz.github.io/post/the-big-four-four/</link>
      <pubDate>Wed, 25 May 2022 13:17:57 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/the-big-four-four/</guid>
      <description>&lt;p&gt;
Nope, not 40 years old, I&amp;#39;m closer to pushing 55. I&amp;#39;m talking about
the number of New York&amp;#39;s certified computer science teacher.&lt;/p&gt;
&lt;p&gt;
Two years ago, there weren&amp;#39;t any. Last year we got 21 and now, with
the semester wrapping up we&amp;#39;ll get another 23. &lt;/p&gt;
&lt;p&gt;
That&amp;#39;s 44 state certified computer science teachers in a hurry and
what&amp;#39;s more, 44 teachers that I can comfortably say really know their
stuff both in terms of CS content and how to teach it.&lt;/p&gt;
&lt;p&gt;
Our first cohort were all working teachers coming back for their
advanced certificate and NY State Certification. This year, it was the
same for the majority of people in the program this past year. We did,
however, have two Masters students both graduating. They should be the
first Masters in CS Education students in the state and will be the
first two such teachers certified once they file the paperwork.&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s really cool. Another box checked off.&lt;/p&gt;
&lt;p&gt;
I was also happy with the whole model we set up of having the Masters
students mix with the Advanced Cert teachers, at least for their
overlapping classes. I think this was great for the Masters
students. They got to be in classes and do fieldwork with experienced
NYC teachers so they learned the real deal. I pride my program as
being designed by teachers and taught by and for teachers but if we
give a standard &amp;#34;professor&amp;#34; answer that&amp;#39;s patently not workable in the
real world, you can be sure, when talking to a room of 20 pro teaches,
you&amp;#39;re going to get called on it. Those two masters students also get
the benefit of starting out in a network of CS teachers from across
the city. In fact, one of the Masters students got a job this past
year (you can do that in NY State by applying for intern
certification) at the school of one of our Cert student.&lt;/p&gt;
&lt;p&gt;
The Advanced Cert students on the other hand benefit from the new
teacher energy and fresh ideas that the Masters students bring to the
table and in general the Masters students come in with a stronger CS
background than many of the Cert teachers.&lt;/p&gt;
&lt;p&gt;
I thought it would work well when designing things and I&amp;#39;m happy with
how it&amp;#39;s been working out.&lt;/p&gt;
&lt;p&gt;
Back to the title - that&amp;#39;s 44 teachers in a hurry. This summer we&amp;#39;re
upping the ante. We&amp;#39;ll have around 5 Masters students joining in with
around 55 Cert teachers. Five of the cert teachers are from upstate
New York which I think is pretty awesome but almost all the rest are
from NY City.&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s pretty huge going 0 - 44 in two years and we&amp;#39;ll be at 100 in
one more. That&amp;#39;s getting to the critical mass in the system that I&amp;#39;m
personally aiming for. Just like other subject areas have a small
subset of the teachers who go to the conferences, attend the optional
PDs and are, in fact the experts, we&amp;#39;ll have the same in NYC for CS.&lt;/p&gt;
&lt;p&gt;
After this? It&amp;#39;ll be time to change gears. Less emphasis on the
Advanced Certificate and time to start advertising the Masters
program.&lt;/p&gt;
&lt;p&gt;
Why? Besides having achieved the minimum critical mass, I don&amp;#39;t think
there will be as much demand for the certificate program moving
forward. There are a number of reasons why I believe this but I&amp;#39;m not
going to go down that rabbit hole right now.&lt;/p&gt;
&lt;p&gt;
There will still be interest and we&amp;#39;ll still run the program but I don&amp;#39;t
see another set of 50+ teachers banging down the door.&lt;/p&gt;
&lt;p&gt;
On the other hand, now is the time to start pushing the
pre-service. I&amp;#39;d like to get more students into my Masters
program. Now that we&amp;#39;ll have a critical mass of real CS teachers in
the system the newly minted Masters students won&amp;#39;t have to be the
&amp;#34;experts.&amp;#34; They get to be the &amp;#34;new teachers&amp;#34; which is as it should be.&lt;/p&gt;
&lt;p&gt;
Things can then settle in and CS teacher prep will become the same
more or less as other fields.&lt;/p&gt;
&lt;p&gt;
Of course, it&amp;#39;s not quite that simple. Right now, I&amp;#39;m the only game in
town but other programs are registered in the state and more should
register over time. Some of those programs will be good and others bad
but it will certainly complicate the landscape. As I&amp;#39;m sure you know,
I&amp;#39;m proud of my program and will put it up against anything out there
and would love other institutions to come up with similar programs but
you also know I fear that there will be many &amp;#34;you take it you teach
it&amp;#34; programs that&amp;#39;ll meet the state&amp;#39;s requirements but do little more
than the current PD based &amp;#34;teacher prep&amp;#34; that is all too common and
too commonly touted as successful. &lt;/p&gt;
&lt;p&gt;
In any event, time will tell and I can really just try to worry about
the parts I can control.&lt;/p&gt;
&lt;p&gt;
So, now that this past semester is in the books I&amp;#39;ll be spending the
next few weeks getting the team together and planning out how we&amp;#39;re
going to wrangle the group of 60 we&amp;#39;ll be working with this
summer. Should be fun.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Put It In The Books</title>
      <link>https://cestlaz.github.io/post/put-it-in-the-books/</link>
      <pubDate>Fri, 20 May 2022 17:20:10 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/put-it-in-the-books/</guid>
      <description>&lt;p&gt;
Just finished entering grades closing out my 32nd year teaching.&lt;/p&gt;
&lt;p&gt;
Whew!&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s been a hard year for me and I&amp;#39;m sure even harder for the K12
teachers out there. Still this year I&amp;#39;m really missing what I was oh
so many years ago - a regular teacher.&lt;/p&gt;
&lt;p&gt;
Teaching from September through June is a beast and from my first day
on the job I had to work ten times harder than I ever had to as a
software engineer and was commensurately exhausted. In spite of what
the &amp;#34;real world&amp;#34; says teachers need their summers to recharge the
batteries. This isn&amp;#39;t to say that teachers don&amp;#39;t work over the
summer - they lesson plan, attend PD and in fact a bunch of them will
be with me, working towards their NY State CS teaching certification.&lt;/p&gt;
&lt;p&gt;
Now, I&amp;#39;m also technically on a school year contract so why do I wish I
was a regular teacher? Because once you enter those final grades, you
put the past to bed. Once I clicked on &amp;#34;post grades&amp;#34; in CUNYFirst I
thought about that. Early in my career, before I had to deal with
building Stuy&amp;#39;s CS program and otherwise getting involved in the
movement, once those grades were entered I was done. I could mentally
turn off. My responsibilities to student and school were done and I&amp;#39;d
have a couple of months before the next go around. &lt;/p&gt;
&lt;p&gt;
I noted that I should have been feeling that but wasn&amp;#39;t. Why not?
Because I&amp;#39;m still immersed in dealing with issues for my advanced
certificate program - working on scholarship issues, getting the
teachers, making sure they&amp;#39;re up to speed, finding instructors under
some draconian restrictions placed on me by both Hunter and the staet,
andto be honest, the self imposed stress of feeling responsible for
making everything work.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s been a while since I&amp;#39;ve &amp;#34;just taught&amp;#34; and maybe would like to get
back to that but even then, all this is making me seriously think
about that possible (probable?) retirement in a year to scale things
back or change things up.&lt;/p&gt;
&lt;p&gt;
In any event, ploughing ahead with the teacher certification program
this month to get things in order and then teaching through
July. Should get a week or two of downtime in August so that&amp;#39;ll be the
time to reflect on the year in depth. Until then it&amp;#39;s nose to the
grindstone.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Yes, deadlines do matter</title>
      <link>https://cestlaz.github.io/post/late-assignments/</link>
      <pubDate>Tue, 17 May 2022 08:28:56 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/late-assignments/</guid>
      <description>
&lt;p&gt;
I&amp;#39;ve been seeing a few threads lately talking about the virtues of
allowing students to hand in assignments late. Not just late but
pretty much whenever they want. This attitude seems to be related with
things like mastery or specification grading, which I believe in but
it&amp;#39;s not the same thing.&lt;/p&gt;
&lt;p&gt;
The threads start with someone saying that assignments shouldn&amp;#39;t have
deadlines or some variant and the thread proceeds with a bunch of
people chiming in as to why a teacher who actually enforces deadlines
is an inhuman monster.&lt;/p&gt;
&lt;p&gt;
Nonsense.&lt;/p&gt;
&lt;p&gt;
Now, before I dive in, I do think that a teacher should have some
flexibility with deadlines but allowing students to hand in anything
at any time is probably not a good idea in most cases and any teacher
or self styled educator who proudly proclaims that deadlines in all
cases are evil should just step off their soap box and maybe look more
into their own teaching practice. Of course, the teacher that likewise
says strict to the minute deadlines with no flexibility should do the same.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s look at both sides.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Advantages of no deadlines
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The push here is that students have things going on outside of school
and an arbitrary deadline doesn&amp;#39;t account for this. Particularly over
the past couple of years students have had to contend with all sorts
of difficulties that could be unique or semi-unique to them or at
least they hit at different times.&lt;/p&gt;
&lt;p&gt;
The other push is that students might get certain concepts at
different times so a student might not be able to finish something
when originally assigned but could very well have mastered the concept
by the end of the term.&lt;/p&gt;
&lt;p&gt;
Finally, there&amp;#39;s the thought that those most susceptible to missing
deadlines are the most in need of support. &lt;/p&gt;
&lt;p&gt;
I agree with these issues and do feel that some deadline flexibility
is warranted or at least some mechanism to mitigate a missed deadline
or two or a bad grade and I certainly agree with the idea that the
important thing is that the student gets it at the end and not
necessarily that they get it when first introduced.&lt;/p&gt;
&lt;p&gt;
That said, the idea of largely or wholly eliminating deadlines just
doesn&amp;#39;t fly.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Why deadlines matter
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The usual first response is that having no deadlines rewards bad
behavior. This can be true but it really depends on circumstances. On
the other hand there are some legit reasons for deadlines.&lt;/p&gt;
&lt;p&gt;
A big one is snowballing - some courses are compartmentalized. The CS
topics course I just taught was. Each unit was independent so in
theory any could be completed at any time. Here the snowballing is
just the overall amount of work. If completing one assignment say,
every two weeks is a challenge for a particular student, imagine when
they let the deadlines slip and then have to complete 6 at once.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s worse though in courses that do build. I taught data structures
last semester. You can&amp;#39;t build your linked lists without understanding
your pointers and you can&amp;#39;t build an open hash table without those
linked lists. If you can&amp;#39;t do the pointers you&amp;#39;re going to really be
at a loss for those other topics. This means making sure a student
&lt;strong&gt;can&lt;/strong&gt; successfully master what&amp;#39;s needed by the dealine &lt;strong&gt;is&lt;/strong&gt; important
and not arbitarary.&lt;/p&gt;
&lt;p&gt;
Another reason is that, in spite of the no-deadline crowds
contentions, deadlines &lt;strong&gt;do matter&lt;/strong&gt; in the real world. You&amp;#39;re not
getting on that plane once the door at the gate closes. Likewise, I&amp;#39;m
sure you&amp;#39;d be pretty unhappy if your house burned down because the
fire department had to finish their dinner before heading over to put
out the blaze. Also, try getting into college if you miss the
application deadline. &lt;/p&gt;
&lt;p&gt;
Usually, deadlines are more flexible and the penalties for missing
them are less severe but they do indeed exist. If you miss a client
deadline you might lose the client, if you don&amp;#39;t pay your bills,
eventually the collectors will come for you. &lt;/p&gt;
&lt;p&gt;
Even without the penalties there&amp;#39;s also a matter of respect - not just
for the teacher but also for your classmates. Putting aside the legit
reasons for missing deadlines, some students will indeed either be
lazy on not focused or might just be taking advantage of a more
lenient teacher. This student is then given more attention from the
teacher - since teacher time is limited, that&amp;#39;s going to be at the
expense of the other students - not fair and not cool. If the reason
for missing a deadline is legit, then no problem but as we all know
there are plenty of people who&amp;#39;ll take advantage of any system that
lets them.&lt;/p&gt;
&lt;p&gt;
Another big reason for deadlines that&amp;#39;s never talked about is that
many students want and/or need them. Over my 30+ years as a teacher,
I&amp;#39;ve tried strict deadlines, no deadlines and everything in between. I
can&amp;#39;t tell you how many students have told me that they needed
deadlines to keep them on task and in fact, deadlines with internal
targets to meet helped even more. &lt;/p&gt;
&lt;p&gt;
Finally, one has to consider the teachers workload and schedule. It&amp;#39;s
time to drop the &amp;#34;hero teacher&amp;#34; bit. Teachers &lt;strong&gt;should&lt;/strong&gt; have a work
life balance and that means not being available to handle student
issues 24/7. I hate grading and it takes me a lot of time and
effort. When I grade, I set up my systems to be efficient and I get
into a grading groove. If a student hands in something late, even with
a good reason, it breaks my flow and takes me much longer and also
ties me up in other ways. Sure, if I taught at an &amp;#34;elite&amp;#34; private
school and only had a dozen kids in a class I could make all sorts of
accommodations but when you teach 5 of 34 every day somethings got to
give. The teacher also has their own deadlines - students must know
this or that before the AP or standardized test and of course the big
deadline - getting those grades in.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
What do I do?
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
So, where do I ultimately fall on this? I do believe in deadlines but
I believe in some flexibility. I also like to have enough information
on my students so that by the end of the term I can assess them even
if one or two things are missing.&lt;/p&gt;
&lt;p&gt;
Are my deadlines hard? Not really - anyone can ask for an extension
but my two requirements are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;They have to have shown that up to the request they&amp;#39;ve tried to
make some headway on the project. This is easy since I use Git and
GitHub so I can just log at their logs.&lt;/li&gt;
&lt;li&gt;They speak to me about the extension before the deadline and by
this I mean as soon as there might be an issue, not the evening
before the project is due. I encourage them to speak to me even if
they think there might be an issue to get my okay and then, more
often than not, they don&amp;#39;t use the extension.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Some teachers don&amp;#39;t like the fact that I require that the student
actually talk to me about an extension and that they do it in what I
consider a timely manner but I think at some point the students must
advocate for themselves.&lt;/p&gt;
&lt;p&gt;
So, how does it work for my classes? I think pretty well. I&amp;#39;ll take
almost any reason - sickness, family event, lots of other things due,
something&amp;#39;s unclear or almost anything else. We discuss it and come up
with a fair extension. I usually ask &amp;#34;what do you need&amp;#34; in terms of
time, resources, and in some cases help and then I try to give that
plus a cushion.&lt;/p&gt;
&lt;p&gt;
So, what do you think? Are you part of the no deadline crowd? What am
I missing? Got other strategies and techniques? Let&amp;#39;s hear them as
well.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>When Your Program Crashes</title>
      <link>https://cestlaz.github.io/post/when-your-program-crashes/</link>
      <pubDate>Fri, 13 May 2022 14:22:57 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/when-your-program-crashes/</guid>
      <description>&lt;p&gt;
&lt;figure class=&#34;z_image_center&#34;&gt;&lt;img src=&#34;https://neoteric.eu/wp-content/uploads/2017/06/It-doesnt-work-I-dont-know-why-1024x512.png&#34;/&gt;
&lt;/figure&gt;
 &lt;/p&gt;
&lt;p&gt;
We all have to deal with bugs - students, teachers, hobbyists,
professionals. It&amp;#39;s rare that we&amp;#39;ll take a concept to working program
without some bumps along the way. Well, once or twice I did but that&amp;#39;s
once or twice over the course of a lifetime, those cases are the
exceptions.&lt;/p&gt;
&lt;p&gt;
The errors and the bugs are inevitable so what can we do to help
students deal with the invariable frustration?&lt;/p&gt;
&lt;p&gt;
Why am I thinking about this now?&lt;/p&gt;
&lt;p&gt;
For two reasons.&lt;/p&gt;
&lt;p&gt;
One is that I was recently observed - it was the usual peer
observation. At Hunter, everyone except tenured full (research)
professors get peer reviews and those faculty members along with other
full time instructors do the reviews. I can&amp;#39;t take it too seriously
since in my experience, of all those teaching at the college level,
research professors are the least qualified to productively comment on
teaching.&lt;/p&gt;
&lt;p&gt;
Anyway, I was observed in a remote lesson that included a video and in
the video I was doing some live coding and got hung up on a bug. I
worked my way through it, got stymied, paused the video and resumed it
but when I resumed, I made sure to show what I found, how I found it
and how I fixed it.&lt;/p&gt;
&lt;p&gt;
The observer commented that this was very bad - I should have edited
the video so that I coded the program perfectly since making an error
shows that I don&amp;#39;t know what I&amp;#39;m doing. Nope, my observer was 100%
wrong. I made  the error and left it in and that was the correct
choice. Model mistakes for the students. Show them that we &lt;strong&gt;don&amp;#39;t&lt;/strong&gt; get
it right the first or even the second time and that we can struggle
finding errors losing huge chunks of time over a a missing semicolon.&lt;/p&gt;
&lt;p&gt;
The other reason was that a student recently submitted a program that
didn&amp;#39;t work. First, I was upset that the student hadn&amp;#39;t asked for
help. I know it&amp;#39;s hard for many for many of them but it&amp;#39;s always been
frustrating for me when they don&amp;#39;t use their human resources - me,
classmates, and mentors. Second, when I did start working with the
student to find and fix the error I saw they were looking in the wrong
place.&lt;/p&gt;
&lt;p&gt;
The assignment was a recursive search - knights tour or something
similar. The crash was a segmentation fault and the student was
looking at the recursive logic struggling to see where they went wrong
and was making no headway.&lt;/p&gt;
&lt;p&gt;
I suggested we use the debugger. Not to trace through the code but to
get a stack trace. We&amp;#39;re using C++ and if you run a program under the
gdb debugger you can use the &lt;strong&gt;bt&lt;/strong&gt; command to get a backtrace which is
a stacktrace - where the program crashed and the sequence of function
calls made to get there. You can also easily see what all the
variables were all the way down.&lt;/p&gt;
&lt;p&gt;
The students had been exposed to gdb last semester but too few of them
use it when appropriate.&lt;/p&gt;
&lt;p&gt;
Looking at the stack trace we quickly saw that there wasn&amp;#39;t anything
wrong with any program logic and in fact the problem was that the data
file had an extra blank line at the end. We deleted that line and
everything worked.&lt;/p&gt;
&lt;p&gt;
So, even getting by the asking for help how do we get students to use
the tools they have available to help them?&lt;/p&gt;
&lt;p&gt;
This even goes for the compiler itself - the error messages. True many
error messages are cryptic, particularly for beginners and it&amp;#39;s hard
when you get that wall of text but how do we get them to learn to read
those messages.&lt;/p&gt;
&lt;p&gt;
I try two things. Read the first message since that&amp;#39;s usually the root
cause and then, even if the message doesn&amp;#39;t make sense, when you do
figure out the error you&amp;#39;ll start to develop a mapping from weir error
messages to actual problems&lt;/p&gt;
&lt;p&gt;
Of course when debugging, I, like many others fall back to, if I may
quote Brian Kernighan &amp;#34;..careful thought, couple widh judiciously
placed print statements&amp;#34; but even educating students on doing this
effectively takes work.&lt;/p&gt;
&lt;p&gt;
I think the biggest challenge is getting them to see that it&amp;#39;s not
them - we all make errors and all struggle fixing them.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve just mentioned a couple of things here and of course there are
many other debugging and development strategies that we use as
teachers and as professionals. Rubber Duck debugging, code reading,
incremental development etc.. What else? I&amp;#39;d love to hear any strategies others have used to help students along when
dealing with errors. &lt;/p&gt;
&lt;p&gt;
&lt;figure class=&#34;z_image_center&#34;&gt;&lt;img src=&#34;https://i.pinimg.com/564x/7c/9c/c8/7c9cc8769af215e0b2ca689ac9408d1a.jpg&#34;/&gt;
&lt;/figure&gt;
 &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>When will I need to know this, Data Structures edition</title>
      <link>https://cestlaz.github.io/post/when-need-ds/</link>
      <pubDate>Mon, 02 May 2022 14:23:44 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/when-need-ds/</guid>
      <description>&lt;p&gt;
One of the things we&amp;#39;re frequently faced with as computer science
teachers is the questiosn of &amp;#34;when will I need to know this.&amp;#34; This
comes up when you teach an non-mainstream language like Racket or a
language kids sometimes see as inauthentic like Scratch. It also comes
up a lot when learning data structures and algorithms.&lt;/p&gt;
&lt;p&gt;
Do I really need to know all of these sorts when I&amp;#39;m just going to use
the built in sort routine? Do I really have to implement that hash
table or linked list when I&amp;#39;ll just use the standard library&amp;#39;s
implementation? You know, once I get past the technical interview for
fill-in-the-company I&amp;#39;ll never need it again so why are we wasting all
this time and energy?&lt;/p&gt;
&lt;p&gt;
For the most part, these are valid questions to ask.&lt;/p&gt;
&lt;p&gt;
On the one hand it&amp;#39;s hard to  really say that a student &lt;strong&gt;needs&lt;/strong&gt; to
know all these things, I mean, we all know people with successful
careers in tech who know few or one of the these &amp;#34;questionable&amp;#34;
topics. On the other hand, it&amp;#39;s much easier to explain why one might
want to know or even benefit from knowing these &amp;#34;less relevant and
directly useful&amp;#34; topics.&lt;/p&gt;
&lt;p&gt;
Personally, I believe that you shouldn&amp;#39;t use a tool that you
couldn&amp;#39;t build yourself or rather, more realistically, you should
understand something of the topics underpinnings. For a hash table for
instance, one should understand that the internal storage structure
has to be sparse or be otherwise cleverly set up to avoid
collisions. Likewise if one understands the differences between an
array based structure and dynamically allocated one they can make
sensible decisions when they choose between a Java ArrayList and a
Java LinkedList.&lt;/p&gt;
&lt;p&gt;
The other biggie is that if they understand the data structures and
algorithms then they have a shot at creating derivative algorithms or
building solutions on top of data structures rather than just using
standard library implementations.&lt;/p&gt;
&lt;p&gt;
Of course it&amp;#39;s much easier to convince students they might build or
use solutions that employ standard data structures and algorithms with
real world examples and fortunately we have them.&lt;/p&gt;
&lt;p&gt;
In my data structures class, we&amp;#39;re currently covering Binary Search
Trees. At the end I talk a little about next steps - 2-3 trees,
red-black trees, B-trees etc. but to be honest students are probably
never going to write any of these. On the other hand we have a tree
implementation that students interact with on a daily basis and could
very well have to work with and manipulate.&lt;/p&gt;
&lt;p&gt;
The DOM.&lt;/p&gt;
&lt;p&gt;
For those of you who don&amp;#39;t do web development, DOM stands for Document
Object Model and is the structure that your web browser uses to store
a web page. Web pages are written in HTML - Hyper Text Markup Language
which is a specific instance of XML - eXtensible Markup Language.
HTML is a hierarchical format and in fact is a textual way of
representing a tree.&lt;/p&gt;
&lt;p&gt;
For example, this HTML example:&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
  &amp;lt;div id=&amp;#34;anchor&amp;#34;&amp;gt;
    &amp;lt;h1&amp;gt; this is a heading &amp;lt;/h1&amp;gt;
    &amp;lt;ol&amp;gt;
      &amp;lt;li&amp;gt;item 1&amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;item 2&amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;item 3&amp;lt;/li&amp;gt;
    &amp;lt;/ol&amp;gt;
  &amp;lt;/div&amp;gt;
&lt;/pre&gt;
&lt;p&gt;
has a &lt;strong&gt;div&lt;/strong&gt; as the root node with two children. the first child is the
&lt;strong&gt;h1&lt;/strong&gt; component (header 1) and the other is the ordered list -
&lt;strong&gt;ol&lt;/strong&gt;. the ordered list the has three children, those three &lt;strong&gt;li&lt;/strong&gt;
list item elements. &lt;/p&gt;
&lt;figure class=&#34;z_image_center&#34;&gt;&lt;img src=&#34;https://cestlaz.github.io/img/html-tree.png&#34;/&gt;
&lt;/figure&gt;
&lt;p&gt;
In fact, you can explore this tree through your web browser. You can
right click and explore the page or you can bring up the javascript
console and show that once you get an element with something like &lt;code&gt;d =
document.getElementById(&amp;#34;anchor&amp;#34;)&lt;/code&gt; you explore the tree with things
like &lt;code&gt;d.children&lt;/code&gt; or &lt;code&gt;d.firstChild&lt;/code&gt; and the like.&lt;/p&gt;
&lt;p&gt;
This is a pretty concrete example of a tree that CS students could
very well be working with and manipulating particularly given how many
front end opportunities exist out there.&lt;/p&gt;
&lt;p&gt;
It turns out there&amp;#39;s also a great example out there these days for the
linked list. Usually students can see the utility of the linked list
and it&amp;#39;s ability to insert and delete with a much lower cost than an
array but they also see the limitations that result from linear access
but where might they need to implement a linked type structure as
opposed to just using the built in LinkedList.&lt;/p&gt;
&lt;p&gt;
Nowadays we don&amp;#39;t have to look any further than &lt;strong&gt;blockchain&lt;/strong&gt;. A
blockchain literally is a linked list - each node has a reference to
it&amp;#39;s neighbor. It&amp;#39;s a perfect real world example. Of course once you
look at this example it&amp;#39;s easy to show others since linked constructs
are everywhere. The difficulty from the student point of view is they
frequently just think of them as &amp;#34;pointer&amp;#34; based structures where the
&amp;#34;pointer&amp;#34; is the language construct but it&amp;#39;s really just any reference
to the &amp;#34;next&amp;#34; item. That reference can be an index into an array for
instance and it would still build a linked list.&lt;/p&gt;
&lt;p&gt;
I think examples like these show students that they may indeed build
and or manipulate the data structures and algorithms they study as
budding computer scientists and in fact, they might not even realize
it. I was talking blockchain a while ago with a number of students and
it took quite a while before one said - &amp;#34;hey, this is really just a
linked list.&amp;#34; I think making that connection explicit and early can be
a big help.&lt;/p&gt;
&lt;p&gt;
So, do you have some real world examples like these that we can use to
help motivate our students to really learn some of these subjects that
at first glance are only useful to and through the technical
interview? If so, please share.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Should CSforAll focus on entrepreneurship and jobs?</title>
      <link>https://cestlaz.github.io/post/cs-for-jobs/</link>
      <pubDate>Thu, 14 Apr 2022 14:41:05 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cs-for-jobs/</guid>
      <description>&lt;p&gt;
Is CSforAll a jobs program? This came up again the other day.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I&amp;#39;m using a recent review as an excuse to ask more general questions.&lt;br&gt;&lt;br&gt;Is &lt;a href=&#34;https://twitter.com/hashtag/CSforAll?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#CSforAll&lt;/a&gt; a jobs program or preparing future citizens? &lt;br&gt;&lt;br&gt;Does learning about CS belong just to STEM education?&lt;br&gt;&lt;br&gt;Should we only teach CS to Ss with math background, or can we teach CS to Ss who hate math? &lt;a href=&#34;https://t.co/k030BHoZ93&#34;&gt;https://t.co/k030BHoZ93&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mark Guzdial (@guzdial) &lt;a href=&#34;https://twitter.com/guzdial/status/1511340494462279684?ref_src=twsrc%5Etfw&#34;&gt;April 5, 2022&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
With one of the referenced tweets talking about CS salaries.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Median pay in tech jobs:&lt;br&gt;&lt;br&gt;Snap: $327,710&lt;br&gt;Google (Alphabet): $295,884&lt;br&gt;Facebook (Meta): $292,785&lt;br&gt;&lt;br&gt;All the more reason for public schools to teach computer science so that underserved populations have a chance at these jobs.&lt;/p&gt;&amp;mdash; Hadi Partovi (@hadip) &lt;a href=&#34;https://twitter.com/hadip/status/1512592779083280388?ref_src=twsrc%5Etfw&#34;&gt;April 9, 2022&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I think Hadi&amp;#39;s numbers are a little high but that&amp;#39;s not really the
point.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve actually been meaning to write about this for a while going back
to &lt;a href=&#34;https://www.thisisgoingtobebig.com/blog/2019/1/6/sevens-dont-get-funded&#34;&gt;this really great post&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/ceonyc&#34;&gt;Charlie O&amp;#39;Donnell&lt;/a&gt; titled &lt;a href=&#34;https://www.thisisgoingtobebig.com/blog/2019/1/6/sevens-dont-get-funded&#34;&gt;Sevens Don&amp;#39;t Get
Funded&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve seen arguments on all sides of this issue. On the one hand,
people in the tech industry are big on the jobs side of things. This
is in part because the more people who go into tech the more resources
they have for their companies. I also think that a lot of the people
on the tech side have seen tech work for them and allow for successful
careers so they see CS education as providing others with a similar
path. I also see a number of teachers with this view - they&amp;#39;re
teaching kids in poverty and see this as a potential way out. Nothing
wrong with this point of view and for CSforAll to really get anywhere
it&amp;#39;s certainly helpful to have a region&amp;#39;s business leaders on board.&lt;/p&gt;
&lt;p&gt;
On the other side, I have many colleagues at Hunter and other
intuitions who get offended at the merest mention that anything we
teach be in any way practical as it hurts the purity of our academic
mission. Needless to say, I&amp;#39;m not in  this extreme camp but I do think
that CS should be much more than a jobs program.&lt;/p&gt;
&lt;p&gt;
This tension has been there from the begining. Are we teaching K12 CS
for aspiring CS majors who will go into academia? Those who will be
software engineers? Everybody else? Or a combination.&lt;/p&gt;
&lt;p&gt;
To complicate matters, at least in my experience is that the business
push very frequently comes with a push for entrepreneurship. We need
more kids starting their own tech companies. I suspect much of this is
well meaning. They see the next big thing and would love to see a
group of founders from the other side of the tracks figure it out.&lt;/p&gt;
&lt;p&gt;
In my time in CS Ed in NYC I&amp;#39;ve seen a tremendous push for
entrepreneurship. Many programs that have touted themselves as CS
programs were really entrepreneurship programs with a little tech and
this concerns me.&lt;/p&gt;
&lt;p&gt;
This is where Charlie&amp;#39;s piece got me thinking.&lt;/p&gt;
&lt;p&gt;
Charlie says he gets around 2000 pitches in his inbox a year but only
makes around 10 investments. This seems consistent with ratios I&amp;#39;ve
seen for other venture capitalists. This means if you&amp;#39;re going to get
that investment on your startup idea you&amp;#39;ve got to really stand out or
to quote the article:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It might be that your company is a seven (out of 10)  — a perfectly acceptable, but
not particularly exciting seven.&lt;/p&gt;
&lt;p&gt;
If you’re trying to be one of the best ten things I see in a
year—worth risking LP capital on, then a seven just isn’t going to
make it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Even if you are funded, the majority of startups don&amp;#39;t succeed. I&amp;#39;ve
read that 10% of startups provide nearly all the returns for a fund
and other similar numbers indicating that failure is much more likely
than success.&lt;/p&gt;
&lt;p&gt;
Now, if you&amp;#39;re a venture capitalist and looking at the big picture
from the top, the more entrepreneurs the better but if you&amp;#39;re a kid
from the lower economic rungs I don&amp;#39;t know if we should be pushing
entrepreneurship as the ticket out.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m reminded of a friend of mine who does outreach, recruiting, and
interviewing for his alma mater which is  one of the hardest
institutions to gain acceptance to in the USA. On the one hand, he had
a great experience and wants to share that with others. On the other
hand, he also recognizes that for even the best student he pitches to,
he&amp;#39;s likely to be building them up for disappointment.&lt;/p&gt;
&lt;p&gt;
As a teacher who&amp;#39;s worked with fragile kids, I can tell you that
you&amp;#39;ve got to tread lightly here. Setting kids up for failure is more
than bad, it&amp;#39;s dangerous.&lt;/p&gt;
&lt;p&gt;
If it were up to me, I&amp;#39;d put the &amp;#34;you can start a company&amp;#34; out there
but in the background and if you want to focus on jobs then put the
focus there, on the job - the fact that you&amp;#39;ll be able to put bread
on the table regardless of how the economy turns and yes, you will be
able to start your dream company if you want but you don&amp;#39;t have to do
it out of the gate. Build your network, your skills, and, very
importantly for kids climbing out of poverty, your safety nets and
then start that company.&lt;/p&gt;
&lt;p&gt;
So, where do I stand overall with this? Basically the same place I
stood when I designed Stuy&amp;#39;s intro to CS course or, as more than a
couple of friends have termed the course &amp;#34;stuff Z likes.&amp;#34; Yes, I want
to motivate kids to go further in CS but I know the majority won&amp;#39;t and
probably shouldn&amp;#39;t, after all, it takes a village. I want to provide
that motivation while also providing value to the rest. &lt;/p&gt;
&lt;p&gt;
At a very broad, basic level, people in different disciplines look at
the world through different lenses. K12 CS should expose students with
what the world can look like through a CS lens and how all the
different lenses can relate, complement, and support each other. It
should also teach practical tech related skills that should benefit
all students. I&amp;#39;m not talking &amp;#34;using a word processor&amp;#34; here but more
so programming. Digital citizenship should also be included. With all
this it should also expose all the students with enough info so that
those that want to go further in tech or CS are both excited to and
prepared to do so.&lt;/p&gt;
&lt;p&gt;
At Stuy, we found that this could be done in a one semester 10th grade
class. We&amp;#39;ve hand a huge number of kids end up going into tech and CS
and come back later to tell us that it wasn&amp;#39;t on their radar at all
until they took the required course. I&amp;#39;ve also had plenty of kids who
went into other fields proclaim that their intro CS experience at Stuy
was still one of their most valuable classes ever. Of course, if
you&amp;#39;re offering more classes over more grade it opens many other
possibilities - embedding in other subjects, integrating classes and
more.&lt;/p&gt;
&lt;p&gt;
At the end of the day we&amp;#39;ll have a larger pool and a more diverse pool
of students going into tech and for the majority of students, who
won&amp;#39;t do pure tech, they&amp;#39;ll be more tech savvy, be able to use the
mental and practical tools of the trade to suport them in whatever
their endeavors turn out to be. &lt;/p&gt;
&lt;p&gt;
So, CSforAll in K12 isn&amp;#39;t about jobs. It&amp;#39;s about exposure and teaching
some fundamentals. Setting kids up so that they will have a better
idea as to if they want to go into tech and if they do they&amp;#39;ll be
better prepared while at the same time giving all students the
fundamentals of CS both in terms of problem solving and looking at the
world and practical skills. &lt;/p&gt;
&lt;p&gt;
The funny thing, is that on the higher ed side, I think they have to
go the other way and become more responsive to job demands. In spite
of the way so many CS programs are designed, the majority of kids have
no intention of going on to a higher degree and CS is one of the few
disciplines where there is a direct path from college to a well paying
job and that shouldn&amp;#39;t be ignored. You can keep your academic rigor
and purity but at the same time the programs that acknowledge that
the majority of their students will benefit from specific tools and
skills will better serve their students. Practical and real world are
not dirty words.&lt;/p&gt;
&lt;p&gt;
So, I&amp;#39;ve rambled on for a while and probably been a little all over
the place but you know what, education is all over the place. We&amp;#39;re
talking about taking young people and preparing them for life and
their life journeys. That means different things for different people
and so it should be with K12 CS. Not entirely a jobs program but yes,
jobs are on the radar. Not entirely CS for CS but that&amp;#39;s there too. So
is integration and support of other subject areas and more.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Public Education - Which side are you on?</title>
      <link>https://cestlaz.github.io/post/which-side/</link>
      <pubDate>Tue, 29 Mar 2022 08:20:41 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/which-side/</guid>
      <description>&lt;p&gt;
My feeds have been inundated with post after post dealing with teacher
burnout, teacher shortages, government attacks on teachers and public
schools. In response to one video, a friend of mine commented:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
This is going to be a crazy summer and fall. I wonder if we are
witnessing the end of public education.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Teaching was always a high attrition profession but given the stress
teachers have been under since the pandemic started it&amp;#39;s no surprise
that teachers who can are leaving in droves. As much as society says
that teachers are essential, the fact is that society never puts its
money where its mouth is. Teachers have been underpaid,
under resourced, and overworked for decades.&lt;/p&gt;
&lt;p&gt;
The pandemic just brought this out and accelerated it.&lt;/p&gt;
&lt;p&gt;
At the same time, young people are realizing that teaching is
becoming less and less viable as a profession. Schools of education
face declining enrollment. It doesn&amp;#39;t help that schools of education
by and large have poor reputations with the public and state
requirements for teaching force those interested to jump through far
too many hoops and the hoops won&amp;#39;t help them if the candidate decides
teaching isn&amp;#39;t for them.&lt;/p&gt;
&lt;p&gt;
The fact is that teaching and public school teaching in particular has
been under attack for decades and we might be rapidly approaching a
tipping point.&lt;/p&gt;
&lt;p&gt;
This means that if you haven&amp;#39;t, it&amp;#39;s time to pick a side. Are you for
public education and if so, what are you doing about it?&lt;/p&gt;
&lt;p&gt;
The right has been attacking public schools for as long as I can
remember. Voucher bills, supporting charters that are terrific ways of
skimming money from public schools while avoiding accountability and
most currently legislation to control schools in ways that, quite
frankly are so vile I won&amp;#39;t dive into specifics here.&lt;/p&gt;
&lt;p&gt;
The left isn&amp;#39;t much better. We had Arne Duncan claiming that Hurricane
Katrina was the best thing for New Orleans schools since it allowed
for privatization. Rahm Emanuel has also been no friend to public
education. In NY we had twelve years of Bloomberg who ran as a
republican but aligns with democrats destroying neighborhood schools
and pushing private charters and we also most recently had Andrew
Cuomo who is also no friend to public schools.&lt;/p&gt;
&lt;p&gt;
I usually post about CS Education so why am I writing about this?&lt;/p&gt;
&lt;p&gt;
Because far too often the CS Community is just happy to be in the game
and ignores the collateral damage to public education.&lt;/p&gt;
&lt;p&gt;
I wrote a little about this back in 2017 when Code.org decided to partner with
the College board (&lt;a href=&#34;https://cestlaz.github.io/posts/cs-ed-in-bed-college-board/&#34;&gt;link&lt;/a&gt;). Why was a CS Ed organiztion essentially
pushing a new, additional, and worthless standardized exams on to
eighth graders. Now, I&amp;#39;m sure that the people at Code.org don&amp;#39;t agree
with me that the College Board has too much power and is harmful and
this helped them get in the room but I disagree.&lt;/p&gt;
&lt;p&gt;
Another great example is when code.org, districts, curriculum
providers and everyone else who&amp;#39;s rolling out short form PD claiming
that &amp;#34;they&amp;#39;ve trained teachers to teach CS&amp;#34; and that those teachers
are ready to go. I&amp;#39;d like to believe all of this is well meaning and I
do believe most of it is but it does real damage to the profession.&lt;/p&gt;
&lt;p&gt;
We also see this when we see best practices preached from elite
private institutions. Practices that would never work under urban
public school challenges but that then is what the public school
teacher is held up to.&lt;/p&gt;
&lt;p&gt;
We also see this when we work for said institutions or companies who
pay lip service to public education by throwing out some crumbs. Prior
to my pushing things at Google NY, urban public schools weren&amp;#39;t on
their map. They talked the diversity game but didn&amp;#39;t walk the
walk. They&amp;#39;re doing better now but still have so far to go and to be
honest, as an institution I don&amp;#39;t think there&amp;#39; doing better. Rather,
they just have some individuals in places where they can do some good
and they&amp;#39;re doing it. What happens when they leave?&lt;/p&gt;
&lt;p&gt;
If you work at one of these big companies or at an &amp;#34;elite&amp;#34; institution
education are you just collecting your check to maintain the status
quo or are you working to make things better in public education -
particularly for the most vulnerable and most undeserved?&lt;/p&gt;
&lt;p&gt;
If you are working at said company and are trying to do good, is it
enough?&lt;/p&gt;
&lt;p&gt;
No it&amp;#39;s not  and I know that might make some people uncomfortable.&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re working at random big company or &amp;#34;elite&amp;#34; school and run a
program to provide an opportunity for a handful of &amp;#34;those&amp;#34; kids. No,
it&amp;#39;s not enough. My friend Leigh Ann Delyser talks about  &lt;a href=&#34;https://csedpodcast.org/blog/season2_episode5/&#34;&gt;Systemic
Change&lt;/a&gt;. If we just work around the edges, just run our little
programs, in the long run, how much are we changing. If we&amp;#39;re not
working to change the systems we&amp;#39;re just going to remain on the
treadmill.&lt;/p&gt;
&lt;p&gt;
One of my jobs at Hunter was to create an honors CS
program. One of the things I insisted on was that I have a chance to
move the opportunities I created to the greater Hunter population. If
I was only affecting my 30 - 60 kids a year nothing was really
changing and when I leave Hunter it would probably be all gone. That&amp;#39;s
not meaningful change. On the other hand, if I can create something
that stick and positively affects all Hunter CS students, then we&amp;#39;ve
moved the needle even if only by a bit,&lt;/p&gt;
&lt;p&gt;
I for one left Wall Street over thirty years ago because I found the
work unfulfilling and didn&amp;#39;t believe in the ethics of the system. I
just tried teaching on a lark and it stuck. I went into public
education because I believe in it and its importance and I remain in
public ed to this day. I don&amp;#39;t know if I&amp;#39;ve succeeded in any systemic
change but I think that I&amp;#39;ve at least been a part of it in my small
corner of the world.&lt;/p&gt;
&lt;p&gt;
As many of you know, I&amp;#39;ll talk shop with anyone but I also draw a
line. I&amp;#39;ll talk but I&amp;#39;m not going to work to help you if I think
you&amp;#39;re doing harm. I&amp;#39;ve talked, for instance with people from the
Success Academy charter schools but I&amp;#39;d never work with them, at least
not unless they seriously changed their practices and made amends for
past damage. To quote Carl Fox from Wall Street: &amp;#34;I don&amp;#39;t go to bed
with no whore, and I don&amp;#39;t wake up with no whore. That&amp;#39;s how I live
with myself. What about you?&amp;#34;&lt;/p&gt;
&lt;p&gt;
I titled this post &amp;#34;Which side are you on?&amp;#34; That&amp;#39;s from the &lt;a href=&#34;https://en.wikipedia.org/wiki/Which_Side_Are_You_On%3F&#34;&gt;song&lt;/a&gt; by
Florence Reece about the &lt;a href=&#34;https://en.wikipedia.org/wiki/Harlan_County_War&#34;&gt;Harlan County War&lt;/a&gt; during the labor
movement. Just like then, it&amp;#39;s time to pick sides now. Do you believe
in public education and do you think it&amp;#39;s important and what are you
going to do about it?&lt;/p&gt;
&lt;p&gt;
Below is a cover of the song by the Weavers.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll leave you with one
last story. One of my personal heroes, &lt;a href=&#34;https://cestlaz.github.io/posts/2014-01-30-pete-seeger/&#34;&gt;Pete Seeger&lt;/a&gt; was a member of the
Weavers. Pete left the group in 1958. The rest of the group had
decided to do a cigarette ad, something that Pete disagreed with. He
apparently was concerned with both selling out and the health
issues. He left the group although he did fulfill all outstanding
contractual commitments. He relayed the story during an interview. It
went something like: the band said they wanted to do this cigarett
ad. I objected. They said we needed the money. I said &amp;#34;we don&amp;#39;t need
it that much.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Something to think about.&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/Sh86h92PrH0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>A Critical Mass Of CS Teachers</title>
      <link>https://cestlaz.github.io/post/a-critical-mass-of-cs-teachers/</link>
      <pubDate>Mon, 21 Mar 2022 13:38:49 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/a-critical-mass-of-cs-teachers/</guid>
      <description>&lt;p&gt;
A big difficulty with creating CS opportunities for all our students
is the lack of CS teachers. New York City addressed this problem with
their CS4All program - quick form PD to get teachers into CS
classrooms in a hurry. One can debate if that was the best way to go
but it enabled NYC to create a whole lot of CS classes in a very short
period of time.&lt;/p&gt;
&lt;p&gt;
Of course, these teachers, by and large, only have that short form PD
so I&amp;#39;d argue that this isn&amp;#39;t a long term solution. I mean, you
wouldn&amp;#39;t want your entire language program taught by people who
barely knew Spanish 1  or Math taught by teachers how don&amp;#39;t know
beyond the basics of Algebra.&lt;/p&gt;
&lt;p&gt;
A number of institutions, including Hunter are working on rectifying
this via our CS Education programs. Some programs are legit, and some
practically as superficial as the short form PD but the legit ones are
trying to address the challenge.&lt;/p&gt;
&lt;p&gt;
I want to talk about why Hunter&amp;#39;s Advanced Certificate program, a
program, that I might add, is currently accepting applicants for this
summer, is critical to the process.&lt;/p&gt;
&lt;p&gt;
Right now, you could place K12 CS teachers into one of the following
buckets:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;People with strong CS backgrounds. CS Majors or people with
industry experience.&lt;/li&gt;
&lt;li&gt;Hobbyists who learned some CS on their own and developed an
interest or passion for the subject.&lt;/li&gt;
&lt;li&gt;Volunteers who are game for the challenge who heard about CS4All
and answered the call.&lt;/li&gt;
&lt;li&gt;Teachers who were voluntold who are taking one for the team.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Most of the home-brew CS programs in the city started with teachers
from the first two categories but currently the vast majority of
teachers teaching CS are in the last two. Eventually, CS classes in
NYC will all or mostly all be taught by qualified, certified CS teachers
but how we get there will make a difference in terms of the community
and culture we create.&lt;/p&gt;
&lt;p&gt;
Most of the approved certification programs in NY state award either a
Bachelors degree or a Masters. That is, they&amp;#39;re designed for new
teachers just entering the profession. At Hunter we run a Masters
program. Our first cohort had 3 students, our second 6 and right now
there are 3 applicants for our third cohort. I haven&amp;#39;t done any
advertising or outreach but over time we&amp;#39;ll get more and more
applicants. It will be a slow process but eventually we&amp;#39;ll have
comparable numbers as for our math and science ed programs. I&amp;#39;d
imagine that other programs across the state will have a similar
growth curve. As these programs graduate teachers, the voluntolds and
volunteers that aren&amp;#39;t up to speed will return to their other
subjects. Some will continue to teach a section or two of CS which
is fine provided that by then their base of knowledge of CS and CS
pedagogy is well beyond the canned training that DOE currently
provides.&lt;/p&gt;
&lt;p&gt;
While eventually this will normalize, there is a problem. We&amp;#39;re
basically asking our new CS teachers to also be our master CS
teachers, our CS teacher leaders. They&amp;#39;ll have deep CS knowledge and
they&amp;#39;ll have studied the CS pedagogy so it&amp;#39;ll all be on them.&lt;/p&gt;
&lt;p&gt;
The trouble is that it&amp;#39;s hard enough surviving as a new
teacher. Asking them to be the master teachers and the leaders at the
same time is just not right.&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s where my Advanced Certificate program at Hunter comes in. Right
now, we&amp;#39;re the only such program in New York state. The program&amp;#39;s an
18 credit masters level program that teaches the CS and the CS
pedagogy but understands that the participants are already experienced
teachers in some other subject area. It&amp;#39;s a program that takes an
teacher who&amp;#39;s already experienced, albeit in another subject area and
fills in the CS content and CS pedagogy gaps. &lt;/p&gt;
&lt;p&gt;
I mentioned earlier that I&amp;#39;ve done zero outreach for our masters
program and that&amp;#39;s because all my outreach has been for the Advanced
Cert. I think it&amp;#39;s vitally important that we  build a critical mass of
highly qualified CS teachers as soon as possible. Taking current,
experienced teachers and bringing them up to speed in CS and teaching
CS is the way to do this. &lt;/p&gt;
&lt;p&gt;
Other subjects already have their teacher leaders. In most schools, at
least in larger schools, there will be one or two &amp;#34;go to&amp;#34;
teachers. The ones that know the subject matter more deeply and how to
teach it, the ones who are up on the latest and greatest in the field
and in teaching, the ones who attend the conferences and bring back
best practices. I&amp;#39;m working to jump start that for New York City.&lt;/p&gt;
&lt;p&gt;
Fortunately, I&amp;#39;m not alone and our friends at &lt;a href=&#34;https://gothamgives.org/&#34;&gt;Gotham Gives&lt;/a&gt; and Google
are supporting our program by providing scholarships to pay the
tuition for qualified applicants.&lt;/p&gt;
&lt;p&gt;
Our first cohort graduated in May of 2021 and with that, New York City
(and state) had it&amp;#39;s first 21 certified computer science
teacher. They&amp;#39;ll be joined by 23 more two months from now. That&amp;#39;s 44
teachers that have both the subject knowledge and the pedagogical
knowledge to match in the system. Part of their scholarship agreement
is for them to give back. Take part in CS education efforts in the
city so they&amp;#39;re already helping to shape the community and culture of
K12 CS Education in New York.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m hoping for an even larger cohort this year. Imagine if we could
get 60 or more into our program this summer. That would mean in three
short years we&amp;#39;ll have gone from zero to 100 qualified certified
teachers and we&amp;#39;ll be well on the way to that critical mass of teacher
leaders.&lt;/p&gt;
&lt;p&gt;
As we get closer to that critical mass of qualified teachers, interest
in programs like my certificate program will wane but at the same
time, there will be more demand from teaching newcomers for our
Masters program as there will be a career path for young CS minded
teachers.&lt;/p&gt;
&lt;p&gt;
Once again it&amp;#39;s the long game but that&amp;#39;s what it takes. &lt;/p&gt;
&lt;p&gt;
So, if you&amp;#39;re a New York City CS teacher and are looking for state
certification, come join us. All the information can be found &lt;a href=&#34;http://info.huntercs.org/teacher_ed/summer-2022.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>