<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#39;est la Z</title>
    <link>https://cestlaz.github.io/</link>
    <description>C&#39;est la Z</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Sep 2022 15:05:19 -0400</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>Subtle Errors</title>
      <link>https://cestlaz.github.io/post/subtle-errors/</link>
      <pubDate>Fri, 02 Sep 2022 15:05:19 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/subtle-errors/</guid>
      <description>&lt;p&gt;
The semesters back up in full swing again - teaching 2 undergrad
classes in person - CS0 in Python and CS1 in C++ along with my teacher
certification class - Ethics via Zoom. Grand total of about 125
students. An error came up in the CS0 class the other day that
reminded me how tough it is not only to prepare students to deal with
all the things that can go wrong when learning to program but even for
a teacher to realize what&amp;#39;s going on.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the code. It looks pretty straightforward and should work to
draw a square.&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; turtle

wn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; turtle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Screen()

crush &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; turtle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Turtle()

crush&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;forward(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)
crush&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;left(&lt;span style=&#34;color:#ae81ff&#34;&gt;90&lt;/span&gt;)
crush&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;forward(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)
crush&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;right(&lt;span style=&#34;color:#ae81ff&#34;&gt;90&lt;/span&gt;)
crush&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;forward(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)
crush&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;right(&lt;span style=&#34;color:#ae81ff&#34;&gt;90&lt;/span&gt;)
crush&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;forward(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)
crush&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;right(&lt;span style=&#34;color:#ae81ff&#34;&gt;90&lt;/span&gt;)

wn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exitonclick()
wn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mainloop()&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;
Problem is, it didn&amp;#39;t. Now, algorithmicaly this is correct and in fact
the actual code looks correct as well but the student couldn&amp;#39;t get it
to run.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s an actual screenshot that resulted in the error. Can you spot
the problem?&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;&lt;img src=&#34;https://cestlaz.github.io/img/thonny-error.png&#34;/&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;
I spotted it pretty quickly. Not because I&amp;#39;m any good at this but
because I&amp;#39;ve seen the error before. It turns out the student had named
their program file &lt;strong&gt;turtle.py&lt;/strong&gt; and so when line 1 tried to &lt;strong&gt;import
turtle&lt;/strong&gt; we ended up with a circular reference. Instead of loading the
turtle graphics module, it would try to load itself. Had the actual
error message remained on the screen it would have said something
about &amp;#34;circular reference&amp;#34; but that wouldn&amp;#39;t help a student and truth
be told it probably wouldn&amp;#39;t help most CS teachers in diagnosing the
problem. Now, the student wasn&amp;#39;t faultless here - I had explicitly
stated that they should name their program file &lt;strong&gt;t1.py&lt;/strong&gt; but we all
know how well students follow directions ;-).&lt;/p&gt;
&lt;p&gt;
This is just one example of the myriad issues that arise when teaching
programming. One could try to minimize these issue by working in
sandboxed environments but then when students leave class and the
sandbox. The sandbox makes life easier for the teacher but it&amp;#39;s really
only kicking the can down to someone else.&lt;/p&gt;
&lt;p&gt;
I remember this being a big deal when codecademy wa the big thing
around a decade ago. Everyone went to their site and &amp;#34;learned&amp;#34; how to
program. So many of them realized after finishing the course that they
couldn&amp;#39;t do anything outside of the little codecademy programming
window. This isn&amp;#39;t to say that Codecadmey wasn&amp;#39;t a good product or
service but students learning about how to deal with platform and
implementation issues is a real one.&lt;/p&gt;
&lt;p&gt;
This particular issue left some hints - the error mentioned the import
and said that it was circular but there are plenty of weird errors
like this - dealing with versions, file and module locations, build
systems and even things like disk quotas and file permissions that can
make learning to program much more of a minefield than it should be. &lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t have any real answer as to how and when these issues should be
dealt with - how much we should shield our students at first and how
we should expose them to real world issues but it&amp;#39;s probably something
teachers should be talking about more.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teaching CS - How early and how often?</title>
      <link>https://cestlaz.github.io/post/cs-how-early/</link>
      <pubDate>Tue, 16 Aug 2022 15:38:55 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cs-how-early/</guid>
      <description>&lt;p&gt;
A big part of the CS4All movement has been making computer science
available at all grade levels. Of course that can mean many
things. Grade levels could be elementary, middle, and high school or
it can me k-2, 3-5, 6-8, 9-12 or maybe even every grade.&lt;/p&gt;
&lt;p&gt;
Does it mean required at every level or just an option?&lt;/p&gt;
&lt;p&gt;
This has led to many discussions and, at least from the ones I&amp;#39;ve
listened in on, the prevailing feeling from the CS side is all CS all
the time.&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t know if this should be the case. It&amp;#39;s important to think about
other factors - bang for your buck, budgets, student workload,
available faculty, what are the other requirements, and more.&lt;/p&gt;
&lt;p&gt;
This question also isn&amp;#39;t limited to computer science, or at least it
shouldn&amp;#39;t be. K12 schooling is still a zero sum game - there are only
so many minutes in a school day and while CS is important, so too are
most if not all of the other subjects and some, like art and music are
in danger or being left by the wayside at the expense of CS. Of
course, on the other hand, there are some subject that I feel are
already given too much time or the wrong amount.&lt;/p&gt;
&lt;p&gt;
That said, this post is about CS. We have neither the funds nor the
faculty to offer CS as a requirement in every grade but is it even
necessary? I don&amp;#39;t know. An important part of offering CS in K12 is so
that it&amp;#39;s on a student&amp;#39;s radar so they can consider studying more
after HS. This is particularly important with some colleges requiring
students apply as a CS major before even attending. Another side is to
give a student the base level knowledge that we feel every educated
person should have just as we seek to do this in biology, chemistry,
history and so on.&lt;/p&gt;
&lt;p&gt;
I know that we can accomplish these goals with a single class
requirement and two years of offerings overall . How do I know this?
Because we did this at Stuy. Doing this requires two basic things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A well taught, well designed intro course that exposes students to
the subject.&lt;/li&gt;
&lt;li&gt;Covering enough material deeply enough so that students are well
prepared for the next steps in college should a student take them.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The required intro gives the base level that everyone should have and
a more advanced follow up elective sets students up for success if
they want more in college. Truth be told the required course should
really be a year rather than a semester but we still made it work.&lt;/p&gt;
&lt;p&gt;
This fits well in the Stuyvesant program and given New York graduation
requirements adding a single required course or even a required year
fits pretty easily and adding electives also isn&amp;#39;t a problem.&lt;/p&gt;
&lt;p&gt;
If you can&amp;#39;t offer or require more then this can be enough. The
question, though, is - &amp;#34;is it ideal?&amp;#34; I&amp;#39;d be hard-pressed to say that
a school should require more than a year of CS. If you do it right and
follow up with electives a year is plenty. If you don&amp;#39;t do it right,
well, then multiple years of bad CS isn&amp;#39;t any better than 1. &lt;/p&gt;
&lt;p&gt;
What about earlier grades? Middle school? Standalone CS is nice but is
it necessary or are we better off embedding CS into other classes? I
haven&amp;#39;t landed on an opinion on this but I do know that we&amp;#39;ve had a
few middle school teachers graduate from my State Certification
Program and I&amp;#39;d love to get their opinions over the next few years. 
As a general statement, I think it&amp;#39;s safe to say that if you can fit
in some meaningful CS in middle school that would be great but if I
had a choice to either require it in middle school or in high school,
I&amp;#39;d opt for HS. Middle school is too far from college and work. Why
would I say this? Because of what I&amp;#39;ve noticed. There were periods of
time where CS, or at least programming or web dev were introduced in a
lot of Stuy&amp;#39;s feeder schools and more often than not, when I surveyed
students about past experiences they either barely remembered them
(wait, I think I did something like making a web page in 7th grade…)
or in any event based on my surveys, it made little difference towards
either success in High School CS nor in interest in doing more CS.&lt;/p&gt;
&lt;p&gt;
Finally, the primary grades. When the whole CSforAll thing got started
I noted that a lot of what we&amp;#39;d see in the elementary schools would be
a rebranding of stuff that already being done in schools that can
afford it - logic, problem solving, algorithms etc and also a
relabeling of already taught concepts using CS or CT vocabulary. This
is all good stuff and since it&amp;#39;s more foundational it&amp;#39;s probably
pretty important. Of course, when schools and teachers had the freedom
and budget, this was already happening prior to the CS movement even
if we didn&amp;#39;t call it CS.&lt;/p&gt;
&lt;p&gt;
So, do we need CS at all levels? Probably not. Would it be nice? Sure
but we&amp;#39;re not serving kids if we&amp;#39;re just CS zealots. We have to look
at the big picture and the whole student. If I ran a school system and
could only afford CS at one level I&amp;#39;d go high school as I outlined
above. If I could do two, I&amp;#39;d hop down to elementary school and then
fill in middle last. Of course, that&amp;#39;s just me.&lt;/p&gt;
&lt;p&gt;
Of course non of what I&amp;#39;ve said talks at all about digital citizenship
or fluency but that&amp;#39;s for another day.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>End of summer program beginning of summer break</title>
      <link>https://cestlaz.github.io/post/cohort-3-end-of-summer/</link>
      <pubDate>Wed, 03 Aug 2022 11:45:33 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cohort-3-end-of-summer/</guid>
      <description>
&lt;p&gt;
Yesterday was the last day of classes for our current cohort. The
rest of the week and maybe weekend will be all grading all the time
and then I&amp;#39;ll try to tune out work for a couple of weeks to try to
recharge the batteries. Since there are some ongoing Hunter
administrative snafus I&amp;#39;m not all that optimistic on getting real down
time but we&amp;#39;ll see.&lt;/p&gt;
&lt;p&gt;
So, how did it go?&lt;/p&gt;
&lt;p&gt;
Overall I&amp;#39;m happy with the results. We had a much larger cohort -
almost three times the size of past years so that presented challenges
but at the end of the day the participants showed a lot of growth and
based on our anonymous survey the vast majority were very happy with
the experience. There were a couple who were not happy but in a large group,
particularly of teachers being taught, you&amp;#39;re not going to please
everybody.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Challenges
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The large group was a challenge but I&amp;#39;m not really sweating it since I
don&amp;#39;t expect there to be cohorts nearly this large in the future. I
had a personal goal of getting NYC to around 100 certified teachers
ASAP and that&amp;#39;ll be done once this cohort finishes in the spring but I
suspect that as we move on, there will be less demand for teachers
getting an additional CS certificate while on the other hand, there
will be a slow and steady increase in demand for Masters programs. At
the same time, additional programs should start coming online across
the state.&lt;/p&gt;
&lt;p&gt;
The end result should be no more classes of 60.&lt;/p&gt;
&lt;p&gt;
We also had elementary school teachers for the first time. This added
an additional axis of complexity. We couldn&amp;#39;t do a whole lot about
some of it. The state created a K12 cert so there&amp;#39;s no way around it,
all students must learn the CS we feel is needed for a 12th
grader. Creating two tracks isn&amp;#39;t an option even though it would make
more sense.&lt;/p&gt;
&lt;p&gt;
The other challenge was the spread of expertise. Other than saying
that most of the participants were real troopers on both sides of the
experience spectrum I&amp;#39;ll leave this alone since it&amp;#39;s not appropriate
for a public post. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Good Stuff
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
As I just said, most participants were real troopers. Most of the
participants with strong CS backgrounds put on their teacher hats and
helped support less experienced teachers. We&amp;#39;d frequently drop in and
lurk in a breakout room to see the more expereinced guide the room and
it was rare to see one of them dominate and just &amp;#34;do the task&amp;#34;
(although it did occasionally happen). Likewise most of the
participants who came in raw showed tremendous progress and
growth. Many stayed for end of day office hours to go beyond what we
were asking because they wanted to master everything. &lt;/p&gt;
&lt;p&gt;
Also, based on the comments, the cohort is building a strong sense of
community. There were a couple of comments where a student or two felt
otherwise, but they were in an extreme minority (based on the
anonymous surveys) and from their full comments it looks like they
just didn&amp;#39;t buy into the program at all.&lt;/p&gt;
&lt;p&gt;
We also had a handful of participants from outside the city with five
from up near Ithaca. It was great adding them to the mix and I think
there will be some rich discussions in the Fall in curriculum
development when we can not only contrast schools but entire
districts.&lt;/p&gt;
&lt;p&gt;
Of course, at a base level, there&amp;#39;s also the fact that everyone got
through the program and there was a lot of growth across the board. &lt;/p&gt;
&lt;p&gt;
For me personaly, the highlight was getting to know a bunch of great
teachers and people and to be able to work with my team again. My team
from Stuy is still the thing I miss most at Hunter. It&amp;#39;s funny, we had
one of my CS colleagues from Hunter also on the team and he commented
on how great it was to work with this team and how well we worked
together. A number of students also pointed that out as a positive.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
A couple of things that stood out
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
These are just a few things that have been on my mind since
closing. Maybe they&amp;#39;re important, maybe not and I might change my own
mind down the line. Still, these are few random or tangential things
that stood out from the past month.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
The state of CS PD
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
This year, when I saw the spread of CS expertise, I decided to dig
deeper into teacher backgrounds. I also looked back to the teachers
from the first two cohorts who came in barely able to write &amp;#34;Hello
World!&amp;#34;&lt;/p&gt;
&lt;p&gt;
In many, indeed most of these cases the teacher had gone to the &amp;#34;usual
suspects&amp;#34; PD sessions - mostly through CS4All in NYC but sometimes
arranged independently by them or their school.&lt;/p&gt;
&lt;p&gt;
I then looked to see how long these teachers were doing these PDs.&lt;/p&gt;
&lt;p&gt;
In many cases it was years - three, four, five, or even more years of
going to CS training.&lt;/p&gt;
&lt;p&gt;
This really alarmed me. Well, actually, I already suspected this but
it was a sobering confirmation. I know a lot of people won&amp;#39;t want to
hear this but teachers attending CS &amp;#34;training&amp;#34; for multiple years
should be well beyond the most basic of programs. Even if they haven&amp;#39;t
used a text based language, after multiple years, they should be able
to transition to text fairly easily.&lt;/p&gt;
&lt;p&gt;
So, I know that a lot of people might be offended by my saying this
but I stand by it. There are some providers I know who do good work
but I think what I saw here is an indictment of the overall PD
approach that, to paraphrase what code.org said a few years ago,
&amp;#34;trained XXXXX CS teachers&amp;#34; in a very short period of time.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-5&#34;&gt;
Split the class
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
Another interesting thing is that there weren&amp;#39;t a lot of comments from
participants about the mixed teacher levels in terms of sharing
experiences. On the other hand many would have loved us to be able to
split based on programming experience. I haven&amp;#39;t had a chance to do a
deep debrief with JonAlf and Topher who ran the methods components but
this was a little bit of a surprise. We&amp;#39;ll see if this becomes a
larger discussion topic in Curriculum Development.&lt;/p&gt;
&lt;p&gt;
On the splitting for programming level we couldn&amp;#39;t do that for
assorted reasons and moving forward I expect it not to be an issue.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-6&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-6&#34;&gt;
Teaching Methods and Best Practices
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-6&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
We approach methods, and in fact our approach to teaching in general
is all about helping teachers build a toolbox. We have to do a better
job at communicating why this is our approach.&lt;/p&gt;
&lt;p&gt;
There were a couple of comments both in class and in the survey about
&amp;#34;best practices&amp;#34; and &amp;#34;the research&amp;#34; with respect to methods. I get it,
younger teachers are hit over the head with this type of edubabble
from their first education course through every department meeting,
PD, and observation.&lt;/p&gt;
&lt;p&gt;
The truth is that there are no &amp;#34;best practices,&amp;#34; there are practices
that under certain circumstances, based on a combination of students,
teacher, school, culture and more can be most effective for &lt;strong&gt;&lt;strong&gt;THAT
SPECIFIC TEACHER&lt;/strong&gt;&lt;/strong&gt; to use in &lt;strong&gt;&lt;strong&gt;that time at that place.&lt;/strong&gt;&lt;/strong&gt; Teachers
aren&amp;#39;t usually taught this, they get hammered with &amp;#34;best practice&amp;#34; and
&amp;#34;the research&amp;#34; but nobody ever tells them that while there are some
people doing great work in Ed research and CS Ed research, the field
is generally held in low regard, work is almost never replicated and
when you read most of it, there are tons of important variables that
the research leaves out.&lt;/p&gt;
&lt;p&gt;
On top of this, we can go down a long list of &amp;#34;best practices&amp;#34; which
were foisted upon teachers as the one true way only to be replaced a
few years later with the new &amp;#34;best practice.&amp;#34;&lt;/p&gt;
&lt;p&gt;
We believe in building a toolbox of content and techniques and we
trust teachers to know their own strengths and weaknesses as well as
their student needs and that they&amp;#39;ll use the right tool at the right
time.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-7&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-7&#34;&gt;
Writing plans from scratch 
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-7&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
Another thing I noticed was that when we got to the lesson planning
unit, a lot of teachers really wanted to base their work off of a
canned lesson. They said they wanted to adapt it but they were really
reluctant to come up with something on their own, only using other
resources for examples, references, etc.&lt;/p&gt;
&lt;p&gt;
I was a little surprised about this reluctance but upon thinking, it
makes sense. Even if they adapt lessons, CS PD and training is all
about providing canned lessons to teachers so in many cases, it&amp;#39;s what
they&amp;#39;re used to. Add to that the fact that this was for an Education
class, and to be honest, the demands and rigor of education classes
vary greatly  and in many cases the default approach is path of least
resistance. I get it. I did many an Ed class where I threw together a
quick paper from prefabbed sources to get my A for the semester. I&amp;#39;d
like to think, though that our program is a bit better than that.&lt;/p&gt;
&lt;p&gt;
I think the cohort ended up doing it right and with the right attitude
but I think it&amp;#39;s interesting to see what teachers are normally
presented with and how that contrasts, good or bad, with what my team
is selling.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-8&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-8&#34;&gt;
What&amp;#39;s next
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-8&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
So, summer&amp;#39;s in the books. We&amp;#39;ll take this group through a few more
courses and in the Spring they&amp;#39;ll join the ranks of New York State
Certified CS Teachers. &lt;/p&gt;
&lt;p&gt;
Personally, I&amp;#39;m going to try to disengage from Hunter related stuff
for the next few weeks and try to recharge. There will be a few things
I have to deal with but I&amp;#39;ll try to keep them to a minimum. After a
few really hard years I&amp;#39;m hoping I&amp;#39;ll start up again at the end of the
month with some renewed energy.&lt;/p&gt;
&lt;p&gt;
I also have to give some serious thought to the long term both for
Hunter and me. Devorah turned 55 last November and I join her in
October so, as many of you know, we&amp;#39;ve got some potential big changes to
consider. More on that though once the year starts.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>CoTeaching - learning from colleagues</title>
      <link>https://cestlaz.github.io/post/co-teach/</link>
      <pubDate>Thu, 28 Jul 2022 12:49:50 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/co-teach/</guid>
      <description>&lt;p&gt;
A few weeks ago I wrote on how &lt;a href=&#34;https://cestlaz.github.io/post/workshop-a-lesson/&#34;&gt;you can&amp;#39;t workshop a lesson&lt;/a&gt;. Besides
the slow feedback loop, teachers largely work alone. Between classes,
teachers might have a small bit of time to collaborate and bounce
around ideas but with a HS teacher typically having 5 classes a day +
professional assignment there&amp;#39;s not a lot of time.&lt;/p&gt;
&lt;p&gt;
CS teachers typically have it worse as they might be the only CS
teacher in their building. My hope is that this current cohort of
Hunter CS Ed students, like earlier cohorts form their own support
network but that&amp;#39;s not what I&amp;#39;m writing about today.&lt;/p&gt;
&lt;p&gt;
As you know, for the past month I&amp;#39;ve been working my CS Teacher
certification program. We&amp;#39;ve got close to 60 participants. This means
we were able to engage 2 teachers per class. Truth be told, I&amp;#39;ve got a
great team and the whole crew is supporting each other in all of the
classes, not just the one they&amp;#39;re teaching.&lt;/p&gt;
&lt;p&gt;
The end result is that we&amp;#39;re all working harder but we also get to
teach together and, in fact, at least partially workshop our lessons.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m loving it because the one thing I really miss teaching at Hunter
is my teaching team. I&amp;#39;m the only person doing what I do at Hunter so,
just like so many other CS teachers, I&amp;#39;m on an island.&lt;/p&gt;
&lt;p&gt;
When Sam was talking about run time analysis, he had a really nice way
of exploring the run time of the n^2 sorts. I think I do a pretty good
job when teaching this but I loved the way Sam developed and
communicated the topic. Likewise, he did a unit on Expression Trees
which was very different from my approach to trees. We had plenty of
time before he did these units to discuss them and afterwards to
debrief. I&amp;#39;m 100% stealing some of this when they come up in my
classes.&lt;/p&gt;
&lt;p&gt;
Not to just be a taker, Sam really liked the way I introduced and
developed linked list and will be stealing that from me on his next
iteration.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s being able to work with other teachers like this that makes
running the summer program special. On the other hand, the workload is
far to great to be sustainable. This is also the kind of thing that
teachers should be given the time to do. Giving teachers time to work
together in their schools is worth so much more than the professional
developments that schools usually offer and require.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m hoping that the program participants, in addition to the core
material in our classes are also reflecting on how each of the
instructors are running parts of the classes. Not saying that we&amp;#39;re
hitting everything out of the park but a fair and careful analysis of
how we teach a subject and comparing it with what they do can provide
an extra layer of development beyond what&amp;#39;s formally in the classes.&lt;/p&gt;
&lt;p&gt;
We&amp;#39;d actually highlight this more had the state not decided, in their
infinite wisdom that we couldn&amp;#39;t merge our CS and CS Ed classes. We
did that for cohort 1 and it was extremely effective.&lt;/p&gt;
&lt;p&gt;
In any event, it&amp;#39;s been a very full month with a couple more days to
go but thought this was something worth shareing about now.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Masters of CS Education</title>
      <link>https://cestlaz.github.io/post/masters/</link>
      <pubDate>Fri, 22 Jul 2022 06:45:43 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/masters/</guid>
      <description>&lt;p&gt;
I was in the middle of writing a post on how early and often we should
be teaching CS in our schools but had to jump in with a quick hit
here.&lt;/p&gt;
&lt;p&gt;
As any reader here knows, Hunter was the first institution with state
approved CS Teacher Education Masters and Certificate programs. Siena
had the first Bachelors program (Hunter doesn&amp;#39;t have undergraduate
education programs that lead to state certification).&lt;/p&gt;
&lt;p&gt;
We&amp;#39;ve been graduating certificate students for a couple of years
now. Those are professional teachers - working under another
certification area who are earning the new New York State CS
credential. We now have around 40 certificate graduates who are either
state certified or qualified to be state certified if they haven&amp;#39;t
filled out the state application. It was cool that we were the first
but more importantly that NY is getting qualified CS teachers.&lt;/p&gt;
&lt;p&gt;
We passed another milestone the other day. Our first two Masters
students graduated this past June and I just heard from one of them
that she now possesses New York State Certification to teach Computer
Science. She should be the first newly minted Masters grad to have
earned certification.&lt;/p&gt;
&lt;p&gt;
Another cool milestone passed.&lt;/p&gt;
&lt;p&gt;
I expect that in the coming years, the demand for Hunter&amp;#39;s certificate
program will go down as demand for the Masters program goes up. We&amp;#39;ll
see if I&amp;#39;m right.&lt;/p&gt;
&lt;p&gt;
For now, just wanted to share a bit of cool news.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CS - it isn&#39;t all that</title>
      <link>https://cestlaz.github.io/post/cs-all-that/</link>
      <pubDate>Wed, 13 Jul 2022 11:52:31 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cs-all-that/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve dedicated my entire career - something like 32 years, to CS
education and the spread of CS education. So, while I try to be a
cheerleader I also think it&amp;#39;s important to call out things that we do
or say that are maybe not so great.&lt;/p&gt;
&lt;p&gt;
So, I hope I don&amp;#39;t annoy too many people (or maybe I hope I do) with
this post and maybe a few more to come.&lt;/p&gt;
&lt;p&gt;
Before diving into specific CS teaching methods, we started with some
general discussion. What is CS? Why study CS? Why it&amp;#39;s important to
offer etc. This is is really red meat for CS teachers so rich
discussion quickly ensued. Nothing particularly new, I&amp;#39;ve heard and
has been part these conversations so many times.&lt;/p&gt;
&lt;p&gt;
Lots of good stuff but there were a few things that always come up in
these conversations that I think are worth calling out.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CS is creativity&lt;/li&gt;
&lt;li&gt;CS is problem solving&lt;/li&gt;
&lt;li&gt;CS is making mistakes&lt;/li&gt;
&lt;li&gt;CS is building projects.&lt;/li&gt;
&lt;li&gt;Students like CS, it&amp;#39;s fun.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These aren&amp;#39;t bad things and in fact are almost always good
things. What I want to call out is that they&amp;#39;re not CS and certainly
not exclusive to CS.&lt;/p&gt;
&lt;p&gt;
The big thing I don&amp;#39;t like about this is that the good things here are
not exclusive to CS and are not always in CS. CS can teach problem
solving but so can Math. Creativity? How about writing or the
arts. Making mistakes? Science? Math. and on and on.&lt;/p&gt;
&lt;p&gt;
On the flip side CS doesn&amp;#39;t necessarily have these and other good
attributes. CS is generally perceived as fun but then again we&amp;#39;re CS
educators. Math teachers think math is fun. Likewise, as long as CS
classes are populated by students electing to be there and as long as
the content is lightweight it&amp;#39;s not surprising that many kids think
it&amp;#39;s fun. When standardized testing sets in and teachers are
pressured to cover more with less in less time, this will probably
change.&lt;/p&gt;
&lt;p&gt;
I will not infrequently say that something I&amp;#39;m teaching is &amp;#34;inherently
cool&amp;#34; but the truth is it isn&amp;#39;t. There are plenty of things that I
might think are cool or neat or fun but that doesn&amp;#39;t automatically
mean all our students will feel the same way.&lt;/p&gt;
&lt;p&gt;
Problem solving and creativity? &lt;/p&gt;
&lt;p&gt;
As I said before, just about every other field can be about these but
CS might not. Back when the code school / bootcamp boom started in the
Ruby on Rails days, those code schools taught neither problem solving
nor creativity. They taught rote pattern programming to create a very
specific type of application to solve a specific problem that was in
demand in the early days of the second internet boom.&lt;/p&gt;
&lt;p&gt;
CS also isn&amp;#39;t also necessarily taught in a creative way in the
K-College classroom. I&amp;#39;ve seen many classes where student create a
game but they all code it together and the creativity consists of
students deciding on the sprite to use for the player. Yes, this
allows for a controlled form of creativity on the visual part of their
project but not on the problem solving side. &lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t mean to be down on CS. CS can incorporate all these good
things and more but I think it&amp;#39;s important to recognize that other
fields can be these things as well and CS might not be all we think
it&amp;#39;s cracked up to be.&lt;/p&gt;
&lt;p&gt;
CS does, though have one edge over most other fields. As the new kid
on the block K12 CS education is not as highly regulated and
restricted as other fields. We don&amp;#39;t have standardized exams nor
standardized curriculum. The closest we have are APCS-A and
APCS-Principles. This means teachers are more free to teach what they
want how they want. This can be great with a well prepared, qualified
tearch or less great with a less ready one.&lt;/p&gt;
&lt;p&gt;
As CS becomes more part of the system I expect teachers to have less
freedom in what they teach and how they teach. As a community we might
be able to steer the ship towards keeping the good stuff but then
again, we might not.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s important, as a community of educators, that as CS becomes more
standardized that the teachers and not the curriculum providers, not
the standards makers, and not the gorillas in the room with the
oversized influence but none of the actual teaching or CS experience
have a voice to keep the good stuff and not go the way of other
disciplines that are no longer considered cool.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teacher Preparation - know what&#39;s under the hood</title>
      <link>https://cestlaz.github.io/post/arraylists-under-the-hood/</link>
      <pubDate>Tue, 12 Jul 2022 11:52:31 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/arraylists-under-the-hood/</guid>
      <description>&lt;p&gt;
Yesterday was the last day on our first course for teacher
certification. A programming course similar to a college CS1 - think
APCS-A. We&amp;#39;re now moving to a data structures course.&lt;/p&gt;
&lt;p&gt;
There are a few reasons for this. First, it&amp;#39;s depth of knowledge. The
most advanced class a high school student will normally take would be
APCS-A. Data structures is the next course. A teacher should have
studied a topic to a greater depth than the students. We fill in the
breadth in our topics course. Now, this means that our elementary
school candidates need data structures and I&amp;#39;m the first one who&amp;#39;ll
agree that elementary school teachers don&amp;#39;t need the same depth of
knowledge as a high school teacher but New York State in it&amp;#39;s infinite
wisdom decreed that their CS Certification would be K12 - same thing
for all teachers from Kindergarten through the end of high school.&lt;/p&gt;
&lt;p&gt;
A second reason, and this is a big one, is that studying data
structures is a computer scientist or programmers first opportunity to
understand what&amp;#39;s going on under the hood. Why is this important?
Well, to me, it&amp;#39;s one of the differences between what, for lack of a
better word I&amp;#39;ll call a coder or programmer with a computer scientist.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not talking about a computer scientist as a college employed
researcher, I&amp;#39;m using the term as someone who problem solves and
creates solutions using the tools and techniques of computer
science. For a coder / programmer, I mean someone who creates working
programs but doesn&amp;#39;t think deeply about the solution but rather uses
built in constructs, libraries and packages blindly.&lt;/p&gt;
&lt;p&gt;
This is not to say that someone employed as a coder can&amp;#39;t be or isn&amp;#39;t by my
definition, a computer scientist, they certainly can. &lt;/p&gt;
&lt;p&gt;
Back to the point. We closed out the programming class learning about
classes and implementing something that we called a SuperArray,
basically a cut down Java Arraylist.&lt;/p&gt;
&lt;p&gt;
On day one of data structures we went over the ArrayList. This is our
usual strategy - implement something and then you learn about and can
use the built in one.&lt;/p&gt;
&lt;p&gt;
A poorly trained programmer will just learn about the ArrayList and
then use it blindly. But by first exploring something
like the SuperArray, the computer scientist has deeper knowledge.&lt;/p&gt;
&lt;p&gt;
An ArrayList has a number of nice features. You can keep adding to
them paying little attention to size, you can delete from the middle,
insert anywhere and more. All these operations take time. If you try
to remove an element from an ArrayList, the ArrayList has to shift all
the elements past the element in question down. If you want to insert
at the front, you&amp;#39;ve got to shift everything down to make room. Adding
something to the end, however, takes no time at all unless the
underlying array is full, in which case, more work is to be done.&lt;/p&gt;
&lt;p&gt;
When writing the SuperArray, students had to write the code necessary to
do all of these operations so we can discuss the good, the bad, and
the ugly.&lt;/p&gt;
&lt;p&gt;
If you are using an ArrayList and you blindly do all your insertions
at the front, you&amp;#39;re going to have horrible performance but if you
always add to the end, things will be much faster. The coder doesn&amp;#39;t
understand this but the computer scientist does.&lt;/p&gt;
&lt;p&gt;
When we do LinkedLists next week we can dig deeper on these ideas and
even more when we get to sorting and searching.&lt;/p&gt;
&lt;p&gt;
The bottom line is that even if one doesn&amp;#39;t write an entire ArrayList,
exploring under the hood can arm a coder (or teacher) so that they
make wise choices instead of treating every problem like a nail.&lt;/p&gt;
&lt;p&gt;
A side added bonus on this specific SuperArary / ArrayList
project is that when you&amp;#39;re done you can actually look at the Java
ArrayList code. The class won&amp;#39;t understand all of it but they should
be able to get the gist and they&amp;#39;ll see that the Java code is very
similar to what the students wrote. This can be very empowering.&lt;/p&gt;
&lt;p&gt;
After this data structures course, the teachers may never again write
the code for a linked list, implement a hash table or tree or manually
sort a data set but the underlying knowledge will help them understand
and teach all sorts of computer science concepts. A web page is
represented in a a tree, a network is a graph. Understanding hash
tables and search trees are a gateway to databases.&lt;/p&gt;
&lt;p&gt;
Sometimes the specific implementations one studies are never used
again but for teachers, the underlying concepts can be game changes
for their students.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CS Teacher Certification - starting Cohort 3</title>
      <link>https://cestlaz.github.io/post/teacher-cert-cohort-3/</link>
      <pubDate>Tue, 28 Jun 2022 10:25:35 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-cohort-3/</guid>
      <description>&lt;p&gt;
Tomorrow we&amp;#39;ll kick off cohort 3 of Hunter&amp;#39;s Computer Science teacher
Advanced Certificate program. That is, New York State&amp;#39;s only currently
approved program for working, certified teachers that leads to New
York&amp;#39;s new Certificate to teach Computer Science.&lt;/p&gt;
&lt;p&gt;
This is not our first rodeo, having gone through this twice already
but there are a few differences this time out.&lt;/p&gt;
&lt;p&gt;
First off, we&amp;#39;re going big. Cohorts one and two had about 20
candidates each. This time, we&amp;#39;ll have around 55 teachers who will be
joined by around 5 masters students. That&amp;#39;s exciting but a little
scary. I&amp;#39;m sure I&amp;#39;ve also mentioned before that a handful of our
teachers are from the Dryden school district up around the finger
lakes. I&amp;#39;m super excited that we&amp;#39;re able to not only work with NYC
teachers but also to help build the community beyond the five
boroughs. &lt;/p&gt;
&lt;p&gt;
Bigger cohort means more instructors. Adding to the team this
year is my long time partner in crime Sam. I wanted to include Sam
from the start but unfortunately he was on sabbatical the year prior
to cohort 1 and according to DOE rules (he&amp;#39;s a K12 teacher) you can&amp;#39;t
work in any capacity during your sabbatical year. Sam&amp;#39;s been involved
in almost all of my teaching side projects along with JonAlf and
Topher so it&amp;#39;s great that we can get the band back together.&lt;/p&gt;
&lt;p&gt;
We&amp;#39;re also adding on my friend and colleague on the Hunter CS side,
William and I&amp;#39;ve been looking to be able to actually work with him for
years.&lt;/p&gt;
&lt;p&gt;
We&amp;#39;ll also have  4 TAs per class. That is going to be interesting. The
TAs are undergrads - they&amp;#39;re all terrific but it&amp;#39;s possible that some
of the candidates teach in the schools that the TAs attended. It&amp;#39;ll
all be good but it will be interesting.&lt;/p&gt;
&lt;p&gt;
As to running the show, we&amp;#39;ll still use Zoom - one big Zoom when
appropriate but breaking into groups of assorted sizes as appropriate
from small breakout rooms to midsize &amp;#34;sections&amp;#34; for sharing. This will
be a bit of an experiment but we&amp;#39;ll get it right. One nice thing about
teaching teachers is that they know when you&amp;#39;re trying something new
and if you&amp;#39;re open and honest they&amp;#39;ll help you to get it right. I
think that&amp;#39;s also probably something unique about our program. Since
it&amp;#39;s designed by and for K12 teachers and many of the instructors are
K12 teachers we&amp;#39;re all part of the same community. It&amp;#39;s not a bunch of
K12 teachers taking some classes taught by college people who have
theories of how to teach K12. I mean, yes, we do have college profs
involved as well but we also have K12 teachers, including myself
who&amp;#39;ve walked the walk. The teachers in the program get this and know
we&amp;#39;re a family and our goal is to make the program as strong as
possible, not only for them but for future participants.&lt;/p&gt;
&lt;p&gt;
Now, that might sound a little hokey but I really believe it.&lt;/p&gt;
&lt;p&gt;
Beyond Zoom we&amp;#39;ll be using Slack for all discussion - much better than
using Zoom chat. Besides the extra Slack features, Zoom chat goes away
when the Zoom closes. Our Slack from even cohort 1 lives on and is
still active. Truth be told, I prefer Zulip to Slack but we had
already committed to Zoom which is fine.&lt;/p&gt;
&lt;p&gt;
The final piece for tooling is repl.it and that&amp;#39;s been a game
changer. During our first year, repl.it wasn&amp;#39;t quite up to speed so
teachers had to install environments on their own computers. This was
at the start of the pandemic so it was 100% remote. Woof. All sorts of
issues including some nice ones like a teacher with a DOE laptop that
used to have Java on it but not any more (but the registry still had
some hidden settings). Repl.it allows us to have one single consistent
interface that everyone can use plus it integrates with GitHub. Of
course, if a student comes in with a stronger background they can do
their own thing but using repl.it has made things so much easier.&lt;/p&gt;
&lt;p&gt;
So, tomorrow at 9:00am we&amp;#39;re off to the races. An 8 day all day
programming class followed by 16 half days of more advanced
programming along with 16 half days of CS teaching methods. In the
Fall we&amp;#39;ll do our ethics class and curriculum development and then
finally topics in the Spring.&lt;/p&gt;
&lt;p&gt;
That will bring us to around 100 certified teachers.&lt;/p&gt;
&lt;p&gt;
Probably won&amp;#39;t sleep tonight but looking forward to tomorrow.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>You can&#39;t workshop a lesson</title>
      <link>https://cestlaz.github.io/post/workshop-a-lesson/</link>
      <pubDate>Tue, 07 Jun 2022 10:02:36 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/workshop-a-lesson/</guid>
      <description>&lt;p&gt;
The other day, Natan scored tickets for us to see an interview with High
Jackman and Sutton Foster. We&amp;#39;ll be seeing them in &amp;#34;The Music Man&amp;#34;
come this fall.&lt;/p&gt;
&lt;p&gt;
It was fun but it was the taping for a radio interview so nothing
earth shattering or surprising. Still, one thing stuck with me and got
me thinking.&lt;/p&gt;
&lt;p&gt;
Jackman told a story about how, during rehearsals, he wandered down from
his dressing room to find  Foster was working with Jerry
Zaks, the director on &amp;#34;My White Knight.&amp;#34; He remained and observed,
entranced as Foster and Zaks spent an hour or so working on the song.
It reminded me of a Master Class taught by Maxim Vengerov, my favorite
current violinist that I caught on cable one day. &lt;/p&gt;
&lt;p&gt;
It got me thinking about how horribly pathetic our model of teacher
observation, support and improvement is and that you can&amp;#39;t have a
master class for a lesson.&lt;/p&gt;
&lt;p&gt;
The two things in teaching that would be closest to a master class
would be either teaching a mock lesson to a colleague or supervisor or
an observation. Mock lessons rarely occur outside of teacher
interviews but colleagues will observe each other. The problem is,
those aren&amp;#39;t Master Classes. In a Master Class, you have an immediate
feedback loop. You perform, stop, get feedback, rinse and repeat. When
teaching, you get some feedback at the end of the lesson and even if
it&amp;#39;s good you generally can&amp;#39;t implement any changes until next
year. If you&amp;#39;re lucky, next semester. Sometimes you might be able to
rush try things in a class later that day but usually not. Of course,
if and when you do try that change you likely won&amp;#39;t be getting any
feedback on that.&lt;/p&gt;
&lt;p&gt;
The problem is, you can&amp;#39;t stop the lesson in the middle becuase, you
know, the students and you certainly can&amp;#39;t then go back  and reteach
the last 10 minutes again to them to see if it&amp;#39;s better.&lt;/p&gt;
&lt;p&gt;
Although there are many similarities between teaching and performing
there are of course crucial differences. The bar for a performer is
pretty simple - will the audience get something out of the
performance - enough to think positively about it. That&amp;#39;s pretty much
it. To get there, Sutton and Zaks worked on a challenging song. There
wasn&amp;#39;t any audience feedback but rather they worked to achieve the
director&amp;#39;s vision. When Vengerov runs his class, he&amp;#39;s working with his
students on their interpretation of the work. These work in performance
becuase first, presumably they know what works with an audience and
second, an audience may very well go to something to see or hear an
artists interpretation. Personally, I&amp;#39;ll go to one violinist or
anther&amp;#39;s performance of a work specifically to hear their
interpretation.&lt;/p&gt;
&lt;p&gt;
When teaching the bar is harder to define, at least if you&amp;#39;re serious.
about education. My first chairman kept it simple. He said, when you
observe a class, just keep asking yourself &amp;#34;is learning going on?&amp;#34; And
then figure out where and how. I always liked that and always lived by
that.  Of course these days observations aren&amp;#39;t about learning but
about teacher evaluation using garbage metrics like Danielson where
it&amp;#39;s all about checking off the boxes.&lt;/p&gt;
&lt;p&gt;
Of course, good teachers do work to improve their lessons. They try
different techniques, work within the extremely slow feedback loop and
they work with their colleagues even though they&amp;#39;re never given the
time.&lt;/p&gt;
&lt;p&gt;
None of this really means anything. Just something I found interesting
to ponder. Would a master class work for teachers? Maybe. Maybe you
could run a department meeting as one with one teacher presenting and
the rest of the department playing students, both good and bad. That
would actually be pretty interesting. If anyone tries this, let me
know.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Big Four Four</title>
      <link>https://cestlaz.github.io/post/the-big-four-four/</link>
      <pubDate>Wed, 25 May 2022 13:17:57 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/the-big-four-four/</guid>
      <description>&lt;p&gt;
Nope, not 40 years old, I&amp;#39;m closer to pushing 55. I&amp;#39;m talking about
the number of New York&amp;#39;s certified computer science teacher.&lt;/p&gt;
&lt;p&gt;
Two years ago, there weren&amp;#39;t any. Last year we got 21 and now, with
the semester wrapping up we&amp;#39;ll get another 23. &lt;/p&gt;
&lt;p&gt;
That&amp;#39;s 44 state certified computer science teachers in a hurry and
what&amp;#39;s more, 44 teachers that I can comfortably say really know their
stuff both in terms of CS content and how to teach it.&lt;/p&gt;
&lt;p&gt;
Our first cohort were all working teachers coming back for their
advanced certificate and NY State Certification. This year, it was the
same for the majority of people in the program this past year. We did,
however, have two Masters students both graduating. They should be the
first Masters in CS Education students in the state and will be the
first two such teachers certified once they file the paperwork.&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s really cool. Another box checked off.&lt;/p&gt;
&lt;p&gt;
I was also happy with the whole model we set up of having the Masters
students mix with the Advanced Cert teachers, at least for their
overlapping classes. I think this was great for the Masters
students. They got to be in classes and do fieldwork with experienced
NYC teachers so they learned the real deal. I pride my program as
being designed by teachers and taught by and for teachers but if we
give a standard &amp;#34;professor&amp;#34; answer that&amp;#39;s patently not workable in the
real world, you can be sure, when talking to a room of 20 pro teaches,
you&amp;#39;re going to get called on it. Those two masters students also get
the benefit of starting out in a network of CS teachers from across
the city. In fact, one of the Masters students got a job this past
year (you can do that in NY State by applying for intern
certification) at the school of one of our Cert student.&lt;/p&gt;
&lt;p&gt;
The Advanced Cert students on the other hand benefit from the new
teacher energy and fresh ideas that the Masters students bring to the
table and in general the Masters students come in with a stronger CS
background than many of the Cert teachers.&lt;/p&gt;
&lt;p&gt;
I thought it would work well when designing things and I&amp;#39;m happy with
how it&amp;#39;s been working out.&lt;/p&gt;
&lt;p&gt;
Back to the title - that&amp;#39;s 44 teachers in a hurry. This summer we&amp;#39;re
upping the ante. We&amp;#39;ll have around 5 Masters students joining in with
around 55 Cert teachers. Five of the cert teachers are from upstate
New York which I think is pretty awesome but almost all the rest are
from NY City.&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s pretty huge going 0 - 44 in two years and we&amp;#39;ll be at 100 in
one more. That&amp;#39;s getting to the critical mass in the system that I&amp;#39;m
personally aiming for. Just like other subject areas have a small
subset of the teachers who go to the conferences, attend the optional
PDs and are, in fact the experts, we&amp;#39;ll have the same in NYC for CS.&lt;/p&gt;
&lt;p&gt;
After this? It&amp;#39;ll be time to change gears. Less emphasis on the
Advanced Certificate and time to start advertising the Masters
program.&lt;/p&gt;
&lt;p&gt;
Why? Besides having achieved the minimum critical mass, I don&amp;#39;t think
there will be as much demand for the certificate program moving
forward. There are a number of reasons why I believe this but I&amp;#39;m not
going to go down that rabbit hole right now.&lt;/p&gt;
&lt;p&gt;
There will still be interest and we&amp;#39;ll still run the program but I don&amp;#39;t
see another set of 50+ teachers banging down the door.&lt;/p&gt;
&lt;p&gt;
On the other hand, now is the time to start pushing the
pre-service. I&amp;#39;d like to get more students into my Masters
program. Now that we&amp;#39;ll have a critical mass of real CS teachers in
the system the newly minted Masters students won&amp;#39;t have to be the
&amp;#34;experts.&amp;#34; They get to be the &amp;#34;new teachers&amp;#34; which is as it should be.&lt;/p&gt;
&lt;p&gt;
Things can then settle in and CS teacher prep will become the same
more or less as other fields.&lt;/p&gt;
&lt;p&gt;
Of course, it&amp;#39;s not quite that simple. Right now, I&amp;#39;m the only game in
town but other programs are registered in the state and more should
register over time. Some of those programs will be good and others bad
but it will certainly complicate the landscape. As I&amp;#39;m sure you know,
I&amp;#39;m proud of my program and will put it up against anything out there
and would love other institutions to come up with similar programs but
you also know I fear that there will be many &amp;#34;you take it you teach
it&amp;#34; programs that&amp;#39;ll meet the state&amp;#39;s requirements but do little more
than the current PD based &amp;#34;teacher prep&amp;#34; that is all too common and
too commonly touted as successful. &lt;/p&gt;
&lt;p&gt;
In any event, time will tell and I can really just try to worry about
the parts I can control.&lt;/p&gt;
&lt;p&gt;
So, now that this past semester is in the books I&amp;#39;ll be spending the
next few weeks getting the team together and planning out how we&amp;#39;re
going to wrangle the group of 60 we&amp;#39;ll be working with this
summer. Should be fun.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Put It In The Books</title>
      <link>https://cestlaz.github.io/post/put-it-in-the-books/</link>
      <pubDate>Fri, 20 May 2022 17:20:10 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/put-it-in-the-books/</guid>
      <description>&lt;p&gt;
Just finished entering grades closing out my 32nd year teaching.&lt;/p&gt;
&lt;p&gt;
Whew!&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s been a hard year for me and I&amp;#39;m sure even harder for the K12
teachers out there. Still this year I&amp;#39;m really missing what I was oh
so many years ago - a regular teacher.&lt;/p&gt;
&lt;p&gt;
Teaching from September through June is a beast and from my first day
on the job I had to work ten times harder than I ever had to as a
software engineer and was commensurately exhausted. In spite of what
the &amp;#34;real world&amp;#34; says teachers need their summers to recharge the
batteries. This isn&amp;#39;t to say that teachers don&amp;#39;t work over the
summer - they lesson plan, attend PD and in fact a bunch of them will
be with me, working towards their NY State CS teaching certification.&lt;/p&gt;
&lt;p&gt;
Now, I&amp;#39;m also technically on a school year contract so why do I wish I
was a regular teacher? Because once you enter those final grades, you
put the past to bed. Once I clicked on &amp;#34;post grades&amp;#34; in CUNYFirst I
thought about that. Early in my career, before I had to deal with
building Stuy&amp;#39;s CS program and otherwise getting involved in the
movement, once those grades were entered I was done. I could mentally
turn off. My responsibilities to student and school were done and I&amp;#39;d
have a couple of months before the next go around. &lt;/p&gt;
&lt;p&gt;
I noted that I should have been feeling that but wasn&amp;#39;t. Why not?
Because I&amp;#39;m still immersed in dealing with issues for my advanced
certificate program - working on scholarship issues, getting the
teachers, making sure they&amp;#39;re up to speed, finding instructors under
some draconian restrictions placed on me by both Hunter and the staet,
andto be honest, the self imposed stress of feeling responsible for
making everything work.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s been a while since I&amp;#39;ve &amp;#34;just taught&amp;#34; and maybe would like to get
back to that but even then, all this is making me seriously think
about that possible (probable?) retirement in a year to scale things
back or change things up.&lt;/p&gt;
&lt;p&gt;
In any event, ploughing ahead with the teacher certification program
this month to get things in order and then teaching through
July. Should get a week or two of downtime in August so that&amp;#39;ll be the
time to reflect on the year in depth. Until then it&amp;#39;s nose to the
grindstone.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Yes, deadlines do matter</title>
      <link>https://cestlaz.github.io/post/late-assignments/</link>
      <pubDate>Tue, 17 May 2022 08:28:56 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/late-assignments/</guid>
      <description>
&lt;p&gt;
I&amp;#39;ve been seeing a few threads lately talking about the virtues of
allowing students to hand in assignments late. Not just late but
pretty much whenever they want. This attitude seems to be related with
things like mastery or specification grading, which I believe in but
it&amp;#39;s not the same thing.&lt;/p&gt;
&lt;p&gt;
The threads start with someone saying that assignments shouldn&amp;#39;t have
deadlines or some variant and the thread proceeds with a bunch of
people chiming in as to why a teacher who actually enforces deadlines
is an inhuman monster.&lt;/p&gt;
&lt;p&gt;
Nonsense.&lt;/p&gt;
&lt;p&gt;
Now, before I dive in, I do think that a teacher should have some
flexibility with deadlines but allowing students to hand in anything
at any time is probably not a good idea in most cases and any teacher
or self styled educator who proudly proclaims that deadlines in all
cases are evil should just step off their soap box and maybe look more
into their own teaching practice. Of course, the teacher that likewise
says strict to the minute deadlines with no flexibility should do the same.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s look at both sides.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Advantages of no deadlines
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The push here is that students have things going on outside of school
and an arbitrary deadline doesn&amp;#39;t account for this. Particularly over
the past couple of years students have had to contend with all sorts
of difficulties that could be unique or semi-unique to them or at
least they hit at different times.&lt;/p&gt;
&lt;p&gt;
The other push is that students might get certain concepts at
different times so a student might not be able to finish something
when originally assigned but could very well have mastered the concept
by the end of the term.&lt;/p&gt;
&lt;p&gt;
Finally, there&amp;#39;s the thought that those most susceptible to missing
deadlines are the most in need of support. &lt;/p&gt;
&lt;p&gt;
I agree with these issues and do feel that some deadline flexibility
is warranted or at least some mechanism to mitigate a missed deadline
or two or a bad grade and I certainly agree with the idea that the
important thing is that the student gets it at the end and not
necessarily that they get it when first introduced.&lt;/p&gt;
&lt;p&gt;
That said, the idea of largely or wholly eliminating deadlines just
doesn&amp;#39;t fly.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Why deadlines matter
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The usual first response is that having no deadlines rewards bad
behavior. This can be true but it really depends on circumstances. On
the other hand there are some legit reasons for deadlines.&lt;/p&gt;
&lt;p&gt;
A big one is snowballing - some courses are compartmentalized. The CS
topics course I just taught was. Each unit was independent so in
theory any could be completed at any time. Here the snowballing is
just the overall amount of work. If completing one assignment say,
every two weeks is a challenge for a particular student, imagine when
they let the deadlines slip and then have to complete 6 at once.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s worse though in courses that do build. I taught data structures
last semester. You can&amp;#39;t build your linked lists without understanding
your pointers and you can&amp;#39;t build an open hash table without those
linked lists. If you can&amp;#39;t do the pointers you&amp;#39;re going to really be
at a loss for those other topics. This means making sure a student
&lt;strong&gt;can&lt;/strong&gt; successfully master what&amp;#39;s needed by the dealine &lt;strong&gt;is&lt;/strong&gt; important
and not arbitarary.&lt;/p&gt;
&lt;p&gt;
Another reason is that, in spite of the no-deadline crowds
contentions, deadlines &lt;strong&gt;do matter&lt;/strong&gt; in the real world. You&amp;#39;re not
getting on that plane once the door at the gate closes. Likewise, I&amp;#39;m
sure you&amp;#39;d be pretty unhappy if your house burned down because the
fire department had to finish their dinner before heading over to put
out the blaze. Also, try getting into college if you miss the
application deadline. &lt;/p&gt;
&lt;p&gt;
Usually, deadlines are more flexible and the penalties for missing
them are less severe but they do indeed exist. If you miss a client
deadline you might lose the client, if you don&amp;#39;t pay your bills,
eventually the collectors will come for you. &lt;/p&gt;
&lt;p&gt;
Even without the penalties there&amp;#39;s also a matter of respect - not just
for the teacher but also for your classmates. Putting aside the legit
reasons for missing deadlines, some students will indeed either be
lazy on not focused or might just be taking advantage of a more
lenient teacher. This student is then given more attention from the
teacher - since teacher time is limited, that&amp;#39;s going to be at the
expense of the other students - not fair and not cool. If the reason
for missing a deadline is legit, then no problem but as we all know
there are plenty of people who&amp;#39;ll take advantage of any system that
lets them.&lt;/p&gt;
&lt;p&gt;
Another big reason for deadlines that&amp;#39;s never talked about is that
many students want and/or need them. Over my 30+ years as a teacher,
I&amp;#39;ve tried strict deadlines, no deadlines and everything in between. I
can&amp;#39;t tell you how many students have told me that they needed
deadlines to keep them on task and in fact, deadlines with internal
targets to meet helped even more. &lt;/p&gt;
&lt;p&gt;
Finally, one has to consider the teachers workload and schedule. It&amp;#39;s
time to drop the &amp;#34;hero teacher&amp;#34; bit. Teachers &lt;strong&gt;should&lt;/strong&gt; have a work
life balance and that means not being available to handle student
issues 24/7. I hate grading and it takes me a lot of time and
effort. When I grade, I set up my systems to be efficient and I get
into a grading groove. If a student hands in something late, even with
a good reason, it breaks my flow and takes me much longer and also
ties me up in other ways. Sure, if I taught at an &amp;#34;elite&amp;#34; private
school and only had a dozen kids in a class I could make all sorts of
accommodations but when you teach 5 of 34 every day somethings got to
give. The teacher also has their own deadlines - students must know
this or that before the AP or standardized test and of course the big
deadline - getting those grades in.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
What do I do?
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
So, where do I ultimately fall on this? I do believe in deadlines but
I believe in some flexibility. I also like to have enough information
on my students so that by the end of the term I can assess them even
if one or two things are missing.&lt;/p&gt;
&lt;p&gt;
Are my deadlines hard? Not really - anyone can ask for an extension
but my two requirements are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;They have to have shown that up to the request they&amp;#39;ve tried to
make some headway on the project. This is easy since I use Git and
GitHub so I can just log at their logs.&lt;/li&gt;
&lt;li&gt;They speak to me about the extension before the deadline and by
this I mean as soon as there might be an issue, not the evening
before the project is due. I encourage them to speak to me even if
they think there might be an issue to get my okay and then, more
often than not, they don&amp;#39;t use the extension.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Some teachers don&amp;#39;t like the fact that I require that the student
actually talk to me about an extension and that they do it in what I
consider a timely manner but I think at some point the students must
advocate for themselves.&lt;/p&gt;
&lt;p&gt;
So, how does it work for my classes? I think pretty well. I&amp;#39;ll take
almost any reason - sickness, family event, lots of other things due,
something&amp;#39;s unclear or almost anything else. We discuss it and come up
with a fair extension. I usually ask &amp;#34;what do you need&amp;#34; in terms of
time, resources, and in some cases help and then I try to give that
plus a cushion.&lt;/p&gt;
&lt;p&gt;
So, what do you think? Are you part of the no deadline crowd? What am
I missing? Got other strategies and techniques? Let&amp;#39;s hear them as
well.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>When Your Program Crashes</title>
      <link>https://cestlaz.github.io/post/when-your-program-crashes/</link>
      <pubDate>Fri, 13 May 2022 14:22:57 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/when-your-program-crashes/</guid>
      <description>&lt;p&gt;
&lt;figure class=&#34;z_image_center&#34;&gt;&lt;img src=&#34;https://neoteric.eu/wp-content/uploads/2017/06/It-doesnt-work-I-dont-know-why-1024x512.png&#34;/&gt;
&lt;/figure&gt;
 &lt;/p&gt;
&lt;p&gt;
We all have to deal with bugs - students, teachers, hobbyists,
professionals. It&amp;#39;s rare that we&amp;#39;ll take a concept to working program
without some bumps along the way. Well, once or twice I did but that&amp;#39;s
once or twice over the course of a lifetime, those cases are the
exceptions.&lt;/p&gt;
&lt;p&gt;
The errors and the bugs are inevitable so what can we do to help
students deal with the invariable frustration?&lt;/p&gt;
&lt;p&gt;
Why am I thinking about this now?&lt;/p&gt;
&lt;p&gt;
For two reasons.&lt;/p&gt;
&lt;p&gt;
One is that I was recently observed - it was the usual peer
observation. At Hunter, everyone except tenured full (research)
professors get peer reviews and those faculty members along with other
full time instructors do the reviews. I can&amp;#39;t take it too seriously
since in my experience, of all those teaching at the college level,
research professors are the least qualified to productively comment on
teaching.&lt;/p&gt;
&lt;p&gt;
Anyway, I was observed in a remote lesson that included a video and in
the video I was doing some live coding and got hung up on a bug. I
worked my way through it, got stymied, paused the video and resumed it
but when I resumed, I made sure to show what I found, how I found it
and how I fixed it.&lt;/p&gt;
&lt;p&gt;
The observer commented that this was very bad - I should have edited
the video so that I coded the program perfectly since making an error
shows that I don&amp;#39;t know what I&amp;#39;m doing. Nope, my observer was 100%
wrong. I made  the error and left it in and that was the correct
choice. Model mistakes for the students. Show them that we &lt;strong&gt;don&amp;#39;t&lt;/strong&gt; get
it right the first or even the second time and that we can struggle
finding errors losing huge chunks of time over a a missing semicolon.&lt;/p&gt;
&lt;p&gt;
The other reason was that a student recently submitted a program that
didn&amp;#39;t work. First, I was upset that the student hadn&amp;#39;t asked for
help. I know it&amp;#39;s hard for many for many of them but it&amp;#39;s always been
frustrating for me when they don&amp;#39;t use their human resources - me,
classmates, and mentors. Second, when I did start working with the
student to find and fix the error I saw they were looking in the wrong
place.&lt;/p&gt;
&lt;p&gt;
The assignment was a recursive search - knights tour or something
similar. The crash was a segmentation fault and the student was
looking at the recursive logic struggling to see where they went wrong
and was making no headway.&lt;/p&gt;
&lt;p&gt;
I suggested we use the debugger. Not to trace through the code but to
get a stack trace. We&amp;#39;re using C++ and if you run a program under the
gdb debugger you can use the &lt;strong&gt;bt&lt;/strong&gt; command to get a backtrace which is
a stacktrace - where the program crashed and the sequence of function
calls made to get there. You can also easily see what all the
variables were all the way down.&lt;/p&gt;
&lt;p&gt;
The students had been exposed to gdb last semester but too few of them
use it when appropriate.&lt;/p&gt;
&lt;p&gt;
Looking at the stack trace we quickly saw that there wasn&amp;#39;t anything
wrong with any program logic and in fact the problem was that the data
file had an extra blank line at the end. We deleted that line and
everything worked.&lt;/p&gt;
&lt;p&gt;
So, even getting by the asking for help how do we get students to use
the tools they have available to help them?&lt;/p&gt;
&lt;p&gt;
This even goes for the compiler itself - the error messages. True many
error messages are cryptic, particularly for beginners and it&amp;#39;s hard
when you get that wall of text but how do we get them to learn to read
those messages.&lt;/p&gt;
&lt;p&gt;
I try two things. Read the first message since that&amp;#39;s usually the root
cause and then, even if the message doesn&amp;#39;t make sense, when you do
figure out the error you&amp;#39;ll start to develop a mapping from weir error
messages to actual problems&lt;/p&gt;
&lt;p&gt;
Of course when debugging, I, like many others fall back to, if I may
quote Brian Kernighan &amp;#34;..careful thought, couple widh judiciously
placed print statements&amp;#34; but even educating students on doing this
effectively takes work.&lt;/p&gt;
&lt;p&gt;
I think the biggest challenge is getting them to see that it&amp;#39;s not
them - we all make errors and all struggle fixing them.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve just mentioned a couple of things here and of course there are
many other debugging and development strategies that we use as
teachers and as professionals. Rubber Duck debugging, code reading,
incremental development etc.. What else? I&amp;#39;d love to hear any strategies others have used to help students along when
dealing with errors. &lt;/p&gt;
&lt;p&gt;
&lt;figure class=&#34;z_image_center&#34;&gt;&lt;img src=&#34;https://i.pinimg.com/564x/7c/9c/c8/7c9cc8769af215e0b2ca689ac9408d1a.jpg&#34;/&gt;
&lt;/figure&gt;
 &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>When will I need to know this, Data Structures edition</title>
      <link>https://cestlaz.github.io/post/when-need-ds/</link>
      <pubDate>Mon, 02 May 2022 14:23:44 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/when-need-ds/</guid>
      <description>&lt;p&gt;
One of the things we&amp;#39;re frequently faced with as computer science
teachers is the questiosn of &amp;#34;when will I need to know this.&amp;#34; This
comes up when you teach an non-mainstream language like Racket or a
language kids sometimes see as inauthentic like Scratch. It also comes
up a lot when learning data structures and algorithms.&lt;/p&gt;
&lt;p&gt;
Do I really need to know all of these sorts when I&amp;#39;m just going to use
the built in sort routine? Do I really have to implement that hash
table or linked list when I&amp;#39;ll just use the standard library&amp;#39;s
implementation? You know, once I get past the technical interview for
fill-in-the-company I&amp;#39;ll never need it again so why are we wasting all
this time and energy?&lt;/p&gt;
&lt;p&gt;
For the most part, these are valid questions to ask.&lt;/p&gt;
&lt;p&gt;
On the one hand it&amp;#39;s hard to  really say that a student &lt;strong&gt;needs&lt;/strong&gt; to
know all these things, I mean, we all know people with successful
careers in tech who know few or one of the these &amp;#34;questionable&amp;#34;
topics. On the other hand, it&amp;#39;s much easier to explain why one might
want to know or even benefit from knowing these &amp;#34;less relevant and
directly useful&amp;#34; topics.&lt;/p&gt;
&lt;p&gt;
Personally, I believe that you shouldn&amp;#39;t use a tool that you
couldn&amp;#39;t build yourself or rather, more realistically, you should
understand something of the topics underpinnings. For a hash table for
instance, one should understand that the internal storage structure
has to be sparse or be otherwise cleverly set up to avoid
collisions. Likewise if one understands the differences between an
array based structure and dynamically allocated one they can make
sensible decisions when they choose between a Java ArrayList and a
Java LinkedList.&lt;/p&gt;
&lt;p&gt;
The other biggie is that if they understand the data structures and
algorithms then they have a shot at creating derivative algorithms or
building solutions on top of data structures rather than just using
standard library implementations.&lt;/p&gt;
&lt;p&gt;
Of course it&amp;#39;s much easier to convince students they might build or
use solutions that employ standard data structures and algorithms with
real world examples and fortunately we have them.&lt;/p&gt;
&lt;p&gt;
In my data structures class, we&amp;#39;re currently covering Binary Search
Trees. At the end I talk a little about next steps - 2-3 trees,
red-black trees, B-trees etc. but to be honest students are probably
never going to write any of these. On the other hand we have a tree
implementation that students interact with on a daily basis and could
very well have to work with and manipulate.&lt;/p&gt;
&lt;p&gt;
The DOM.&lt;/p&gt;
&lt;p&gt;
For those of you who don&amp;#39;t do web development, DOM stands for Document
Object Model and is the structure that your web browser uses to store
a web page. Web pages are written in HTML - Hyper Text Markup Language
which is a specific instance of XML - eXtensible Markup Language.
HTML is a hierarchical format and in fact is a textual way of
representing a tree.&lt;/p&gt;
&lt;p&gt;
For example, this HTML example:&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
  &amp;lt;div id=&amp;#34;anchor&amp;#34;&amp;gt;
    &amp;lt;h1&amp;gt; this is a heading &amp;lt;/h1&amp;gt;
    &amp;lt;ol&amp;gt;
      &amp;lt;li&amp;gt;item 1&amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;item 2&amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;item 3&amp;lt;/li&amp;gt;
    &amp;lt;/ol&amp;gt;
  &amp;lt;/div&amp;gt;
&lt;/pre&gt;
&lt;p&gt;
has a &lt;strong&gt;div&lt;/strong&gt; as the root node with two children. the first child is the
&lt;strong&gt;h1&lt;/strong&gt; component (header 1) and the other is the ordered list -
&lt;strong&gt;ol&lt;/strong&gt;. the ordered list the has three children, those three &lt;strong&gt;li&lt;/strong&gt;
list item elements. &lt;/p&gt;
&lt;figure class=&#34;z_image_center&#34;&gt;&lt;img src=&#34;https://cestlaz.github.io/img/html-tree.png&#34;/&gt;
&lt;/figure&gt;
&lt;p&gt;
In fact, you can explore this tree through your web browser. You can
right click and explore the page or you can bring up the javascript
console and show that once you get an element with something like &lt;code&gt;d =
document.getElementById(&amp;#34;anchor&amp;#34;)&lt;/code&gt; you explore the tree with things
like &lt;code&gt;d.children&lt;/code&gt; or &lt;code&gt;d.firstChild&lt;/code&gt; and the like.&lt;/p&gt;
&lt;p&gt;
This is a pretty concrete example of a tree that CS students could
very well be working with and manipulating particularly given how many
front end opportunities exist out there.&lt;/p&gt;
&lt;p&gt;
It turns out there&amp;#39;s also a great example out there these days for the
linked list. Usually students can see the utility of the linked list
and it&amp;#39;s ability to insert and delete with a much lower cost than an
array but they also see the limitations that result from linear access
but where might they need to implement a linked type structure as
opposed to just using the built in LinkedList.&lt;/p&gt;
&lt;p&gt;
Nowadays we don&amp;#39;t have to look any further than &lt;strong&gt;blockchain&lt;/strong&gt;. A
blockchain literally is a linked list - each node has a reference to
it&amp;#39;s neighbor. It&amp;#39;s a perfect real world example. Of course once you
look at this example it&amp;#39;s easy to show others since linked constructs
are everywhere. The difficulty from the student point of view is they
frequently just think of them as &amp;#34;pointer&amp;#34; based structures where the
&amp;#34;pointer&amp;#34; is the language construct but it&amp;#39;s really just any reference
to the &amp;#34;next&amp;#34; item. That reference can be an index into an array for
instance and it would still build a linked list.&lt;/p&gt;
&lt;p&gt;
I think examples like these show students that they may indeed build
and or manipulate the data structures and algorithms they study as
budding computer scientists and in fact, they might not even realize
it. I was talking blockchain a while ago with a number of students and
it took quite a while before one said - &amp;#34;hey, this is really just a
linked list.&amp;#34; I think making that connection explicit and early can be
a big help.&lt;/p&gt;
&lt;p&gt;
So, do you have some real world examples like these that we can use to
help motivate our students to really learn some of these subjects that
at first glance are only useful to and through the technical
interview? If so, please share.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Should CSforAll focus on entrepreneurship and jobs?</title>
      <link>https://cestlaz.github.io/post/cs-for-jobs/</link>
      <pubDate>Thu, 14 Apr 2022 14:41:05 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cs-for-jobs/</guid>
      <description>&lt;p&gt;
Is CSforAll a jobs program? This came up again the other day.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I&amp;#39;m using a recent review as an excuse to ask more general questions.&lt;br&gt;&lt;br&gt;Is &lt;a href=&#34;https://twitter.com/hashtag/CSforAll?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#CSforAll&lt;/a&gt; a jobs program or preparing future citizens? &lt;br&gt;&lt;br&gt;Does learning about CS belong just to STEM education?&lt;br&gt;&lt;br&gt;Should we only teach CS to Ss with math background, or can we teach CS to Ss who hate math? &lt;a href=&#34;https://t.co/k030BHoZ93&#34;&gt;https://t.co/k030BHoZ93&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mark Guzdial (@guzdial) &lt;a href=&#34;https://twitter.com/guzdial/status/1511340494462279684?ref_src=twsrc%5Etfw&#34;&gt;April 5, 2022&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
With one of the referenced tweets talking about CS salaries.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Median pay in tech jobs:&lt;br&gt;&lt;br&gt;Snap: $327,710&lt;br&gt;Google (Alphabet): $295,884&lt;br&gt;Facebook (Meta): $292,785&lt;br&gt;&lt;br&gt;All the more reason for public schools to teach computer science so that underserved populations have a chance at these jobs.&lt;/p&gt;&amp;mdash; Hadi Partovi (@hadip) &lt;a href=&#34;https://twitter.com/hadip/status/1512592779083280388?ref_src=twsrc%5Etfw&#34;&gt;April 9, 2022&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I think Hadi&amp;#39;s numbers are a little high but that&amp;#39;s not really the
point.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve actually been meaning to write about this for a while going back
to &lt;a href=&#34;https://www.thisisgoingtobebig.com/blog/2019/1/6/sevens-dont-get-funded&#34;&gt;this really great post&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/ceonyc&#34;&gt;Charlie O&amp;#39;Donnell&lt;/a&gt; titled &lt;a href=&#34;https://www.thisisgoingtobebig.com/blog/2019/1/6/sevens-dont-get-funded&#34;&gt;Sevens Don&amp;#39;t Get
Funded&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve seen arguments on all sides of this issue. On the one hand,
people in the tech industry are big on the jobs side of things. This
is in part because the more people who go into tech the more resources
they have for their companies. I also think that a lot of the people
on the tech side have seen tech work for them and allow for successful
careers so they see CS education as providing others with a similar
path. I also see a number of teachers with this view - they&amp;#39;re
teaching kids in poverty and see this as a potential way out. Nothing
wrong with this point of view and for CSforAll to really get anywhere
it&amp;#39;s certainly helpful to have a region&amp;#39;s business leaders on board.&lt;/p&gt;
&lt;p&gt;
On the other side, I have many colleagues at Hunter and other
intuitions who get offended at the merest mention that anything we
teach be in any way practical as it hurts the purity of our academic
mission. Needless to say, I&amp;#39;m not in  this extreme camp but I do think
that CS should be much more than a jobs program.&lt;/p&gt;
&lt;p&gt;
This tension has been there from the begining. Are we teaching K12 CS
for aspiring CS majors who will go into academia? Those who will be
software engineers? Everybody else? Or a combination.&lt;/p&gt;
&lt;p&gt;
To complicate matters, at least in my experience is that the business
push very frequently comes with a push for entrepreneurship. We need
more kids starting their own tech companies. I suspect much of this is
well meaning. They see the next big thing and would love to see a
group of founders from the other side of the tracks figure it out.&lt;/p&gt;
&lt;p&gt;
In my time in CS Ed in NYC I&amp;#39;ve seen a tremendous push for
entrepreneurship. Many programs that have touted themselves as CS
programs were really entrepreneurship programs with a little tech and
this concerns me.&lt;/p&gt;
&lt;p&gt;
This is where Charlie&amp;#39;s piece got me thinking.&lt;/p&gt;
&lt;p&gt;
Charlie says he gets around 2000 pitches in his inbox a year but only
makes around 10 investments. This seems consistent with ratios I&amp;#39;ve
seen for other venture capitalists. This means if you&amp;#39;re going to get
that investment on your startup idea you&amp;#39;ve got to really stand out or
to quote the article:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It might be that your company is a seven (out of 10)  — a perfectly acceptable, but
not particularly exciting seven.&lt;/p&gt;
&lt;p&gt;
If you’re trying to be one of the best ten things I see in a
year—worth risking LP capital on, then a seven just isn’t going to
make it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Even if you are funded, the majority of startups don&amp;#39;t succeed. I&amp;#39;ve
read that 10% of startups provide nearly all the returns for a fund
and other similar numbers indicating that failure is much more likely
than success.&lt;/p&gt;
&lt;p&gt;
Now, if you&amp;#39;re a venture capitalist and looking at the big picture
from the top, the more entrepreneurs the better but if you&amp;#39;re a kid
from the lower economic rungs I don&amp;#39;t know if we should be pushing
entrepreneurship as the ticket out.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m reminded of a friend of mine who does outreach, recruiting, and
interviewing for his alma mater which is  one of the hardest
institutions to gain acceptance to in the USA. On the one hand, he had
a great experience and wants to share that with others. On the other
hand, he also recognizes that for even the best student he pitches to,
he&amp;#39;s likely to be building them up for disappointment.&lt;/p&gt;
&lt;p&gt;
As a teacher who&amp;#39;s worked with fragile kids, I can tell you that
you&amp;#39;ve got to tread lightly here. Setting kids up for failure is more
than bad, it&amp;#39;s dangerous.&lt;/p&gt;
&lt;p&gt;
If it were up to me, I&amp;#39;d put the &amp;#34;you can start a company&amp;#34; out there
but in the background and if you want to focus on jobs then put the
focus there, on the job - the fact that you&amp;#39;ll be able to put bread
on the table regardless of how the economy turns and yes, you will be
able to start your dream company if you want but you don&amp;#39;t have to do
it out of the gate. Build your network, your skills, and, very
importantly for kids climbing out of poverty, your safety nets and
then start that company.&lt;/p&gt;
&lt;p&gt;
So, where do I stand overall with this? Basically the same place I
stood when I designed Stuy&amp;#39;s intro to CS course or, as more than a
couple of friends have termed the course &amp;#34;stuff Z likes.&amp;#34; Yes, I want
to motivate kids to go further in CS but I know the majority won&amp;#39;t and
probably shouldn&amp;#39;t, after all, it takes a village. I want to provide
that motivation while also providing value to the rest. &lt;/p&gt;
&lt;p&gt;
At a very broad, basic level, people in different disciplines look at
the world through different lenses. K12 CS should expose students with
what the world can look like through a CS lens and how all the
different lenses can relate, complement, and support each other. It
should also teach practical tech related skills that should benefit
all students. I&amp;#39;m not talking &amp;#34;using a word processor&amp;#34; here but more
so programming. Digital citizenship should also be included. With all
this it should also expose all the students with enough info so that
those that want to go further in tech or CS are both excited to and
prepared to do so.&lt;/p&gt;
&lt;p&gt;
At Stuy, we found that this could be done in a one semester 10th grade
class. We&amp;#39;ve hand a huge number of kids end up going into tech and CS
and come back later to tell us that it wasn&amp;#39;t on their radar at all
until they took the required course. I&amp;#39;ve also had plenty of kids who
went into other fields proclaim that their intro CS experience at Stuy
was still one of their most valuable classes ever. Of course, if
you&amp;#39;re offering more classes over more grade it opens many other
possibilities - embedding in other subjects, integrating classes and
more.&lt;/p&gt;
&lt;p&gt;
At the end of the day we&amp;#39;ll have a larger pool and a more diverse pool
of students going into tech and for the majority of students, who
won&amp;#39;t do pure tech, they&amp;#39;ll be more tech savvy, be able to use the
mental and practical tools of the trade to suport them in whatever
their endeavors turn out to be. &lt;/p&gt;
&lt;p&gt;
So, CSforAll in K12 isn&amp;#39;t about jobs. It&amp;#39;s about exposure and teaching
some fundamentals. Setting kids up so that they will have a better
idea as to if they want to go into tech and if they do they&amp;#39;ll be
better prepared while at the same time giving all students the
fundamentals of CS both in terms of problem solving and looking at the
world and practical skills. &lt;/p&gt;
&lt;p&gt;
The funny thing, is that on the higher ed side, I think they have to
go the other way and become more responsive to job demands. In spite
of the way so many CS programs are designed, the majority of kids have
no intention of going on to a higher degree and CS is one of the few
disciplines where there is a direct path from college to a well paying
job and that shouldn&amp;#39;t be ignored. You can keep your academic rigor
and purity but at the same time the programs that acknowledge that
the majority of their students will benefit from specific tools and
skills will better serve their students. Practical and real world are
not dirty words.&lt;/p&gt;
&lt;p&gt;
So, I&amp;#39;ve rambled on for a while and probably been a little all over
the place but you know what, education is all over the place. We&amp;#39;re
talking about taking young people and preparing them for life and
their life journeys. That means different things for different people
and so it should be with K12 CS. Not entirely a jobs program but yes,
jobs are on the radar. Not entirely CS for CS but that&amp;#39;s there too. So
is integration and support of other subject areas and more.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Public Education - Which side are you on?</title>
      <link>https://cestlaz.github.io/post/which-side/</link>
      <pubDate>Tue, 29 Mar 2022 08:20:41 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/which-side/</guid>
      <description>&lt;p&gt;
My feeds have been inundated with post after post dealing with teacher
burnout, teacher shortages, government attacks on teachers and public
schools. In response to one video, a friend of mine commented:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
This is going to be a crazy summer and fall. I wonder if we are
witnessing the end of public education.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Teaching was always a high attrition profession but given the stress
teachers have been under since the pandemic started it&amp;#39;s no surprise
that teachers who can are leaving in droves. As much as society says
that teachers are essential, the fact is that society never puts its
money where its mouth is. Teachers have been underpaid,
under resourced, and overworked for decades.&lt;/p&gt;
&lt;p&gt;
The pandemic just brought this out and accelerated it.&lt;/p&gt;
&lt;p&gt;
At the same time, young people are realizing that teaching is
becoming less and less viable as a profession. Schools of education
face declining enrollment. It doesn&amp;#39;t help that schools of education
by and large have poor reputations with the public and state
requirements for teaching force those interested to jump through far
too many hoops and the hoops won&amp;#39;t help them if the candidate decides
teaching isn&amp;#39;t for them.&lt;/p&gt;
&lt;p&gt;
The fact is that teaching and public school teaching in particular has
been under attack for decades and we might be rapidly approaching a
tipping point.&lt;/p&gt;
&lt;p&gt;
This means that if you haven&amp;#39;t, it&amp;#39;s time to pick a side. Are you for
public education and if so, what are you doing about it?&lt;/p&gt;
&lt;p&gt;
The right has been attacking public schools for as long as I can
remember. Voucher bills, supporting charters that are terrific ways of
skimming money from public schools while avoiding accountability and
most currently legislation to control schools in ways that, quite
frankly are so vile I won&amp;#39;t dive into specifics here.&lt;/p&gt;
&lt;p&gt;
The left isn&amp;#39;t much better. We had Arne Duncan claiming that Hurricane
Katrina was the best thing for New Orleans schools since it allowed
for privatization. Rahm Emanuel has also been no friend to public
education. In NY we had twelve years of Bloomberg who ran as a
republican but aligns with democrats destroying neighborhood schools
and pushing private charters and we also most recently had Andrew
Cuomo who is also no friend to public schools.&lt;/p&gt;
&lt;p&gt;
I usually post about CS Education so why am I writing about this?&lt;/p&gt;
&lt;p&gt;
Because far too often the CS Community is just happy to be in the game
and ignores the collateral damage to public education.&lt;/p&gt;
&lt;p&gt;
I wrote a little about this back in 2017 when Code.org decided to partner with
the College board (&lt;a href=&#34;https://cestlaz.github.io/posts/cs-ed-in-bed-college-board/&#34;&gt;link&lt;/a&gt;). Why was a CS Ed organiztion essentially
pushing a new, additional, and worthless standardized exams on to
eighth graders. Now, I&amp;#39;m sure that the people at Code.org don&amp;#39;t agree
with me that the College Board has too much power and is harmful and
this helped them get in the room but I disagree.&lt;/p&gt;
&lt;p&gt;
Another great example is when code.org, districts, curriculum
providers and everyone else who&amp;#39;s rolling out short form PD claiming
that &amp;#34;they&amp;#39;ve trained teachers to teach CS&amp;#34; and that those teachers
are ready to go. I&amp;#39;d like to believe all of this is well meaning and I
do believe most of it is but it does real damage to the profession.&lt;/p&gt;
&lt;p&gt;
We also see this when we see best practices preached from elite
private institutions. Practices that would never work under urban
public school challenges but that then is what the public school
teacher is held up to.&lt;/p&gt;
&lt;p&gt;
We also see this when we work for said institutions or companies who
pay lip service to public education by throwing out some crumbs. Prior
to my pushing things at Google NY, urban public schools weren&amp;#39;t on
their map. They talked the diversity game but didn&amp;#39;t walk the
walk. They&amp;#39;re doing better now but still have so far to go and to be
honest, as an institution I don&amp;#39;t think there&amp;#39; doing better. Rather,
they just have some individuals in places where they can do some good
and they&amp;#39;re doing it. What happens when they leave?&lt;/p&gt;
&lt;p&gt;
If you work at one of these big companies or at an &amp;#34;elite&amp;#34; institution
education are you just collecting your check to maintain the status
quo or are you working to make things better in public education -
particularly for the most vulnerable and most undeserved?&lt;/p&gt;
&lt;p&gt;
If you are working at said company and are trying to do good, is it
enough?&lt;/p&gt;
&lt;p&gt;
No it&amp;#39;s not  and I know that might make some people uncomfortable.&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re working at random big company or &amp;#34;elite&amp;#34; school and run a
program to provide an opportunity for a handful of &amp;#34;those&amp;#34; kids. No,
it&amp;#39;s not enough. My friend Leigh Ann Delyser talks about  &lt;a href=&#34;https://csedpodcast.org/blog/season2_episode5/&#34;&gt;Systemic
Change&lt;/a&gt;. If we just work around the edges, just run our little
programs, in the long run, how much are we changing. If we&amp;#39;re not
working to change the systems we&amp;#39;re just going to remain on the
treadmill.&lt;/p&gt;
&lt;p&gt;
One of my jobs at Hunter was to create an honors CS
program. One of the things I insisted on was that I have a chance to
move the opportunities I created to the greater Hunter population. If
I was only affecting my 30 - 60 kids a year nothing was really
changing and when I leave Hunter it would probably be all gone. That&amp;#39;s
not meaningful change. On the other hand, if I can create something
that stick and positively affects all Hunter CS students, then we&amp;#39;ve
moved the needle even if only by a bit,&lt;/p&gt;
&lt;p&gt;
I for one left Wall Street over thirty years ago because I found the
work unfulfilling and didn&amp;#39;t believe in the ethics of the system. I
just tried teaching on a lark and it stuck. I went into public
education because I believe in it and its importance and I remain in
public ed to this day. I don&amp;#39;t know if I&amp;#39;ve succeeded in any systemic
change but I think that I&amp;#39;ve at least been a part of it in my small
corner of the world.&lt;/p&gt;
&lt;p&gt;
As many of you know, I&amp;#39;ll talk shop with anyone but I also draw a
line. I&amp;#39;ll talk but I&amp;#39;m not going to work to help you if I think
you&amp;#39;re doing harm. I&amp;#39;ve talked, for instance with people from the
Success Academy charter schools but I&amp;#39;d never work with them, at least
not unless they seriously changed their practices and made amends for
past damage. To quote Carl Fox from Wall Street: &amp;#34;I don&amp;#39;t go to bed
with no whore, and I don&amp;#39;t wake up with no whore. That&amp;#39;s how I live
with myself. What about you?&amp;#34;&lt;/p&gt;
&lt;p&gt;
I titled this post &amp;#34;Which side are you on?&amp;#34; That&amp;#39;s from the &lt;a href=&#34;https://en.wikipedia.org/wiki/Which_Side_Are_You_On%3F&#34;&gt;song&lt;/a&gt; by
Florence Reece about the &lt;a href=&#34;https://en.wikipedia.org/wiki/Harlan_County_War&#34;&gt;Harlan County War&lt;/a&gt; during the labor
movement. Just like then, it&amp;#39;s time to pick sides now. Do you believe
in public education and do you think it&amp;#39;s important and what are you
going to do about it?&lt;/p&gt;
&lt;p&gt;
Below is a cover of the song by the Weavers.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll leave you with one
last story. One of my personal heroes, &lt;a href=&#34;https://cestlaz.github.io/posts/2014-01-30-pete-seeger/&#34;&gt;Pete Seeger&lt;/a&gt; was a member of the
Weavers. Pete left the group in 1958. The rest of the group had
decided to do a cigarette ad, something that Pete disagreed with. He
apparently was concerned with both selling out and the health
issues. He left the group although he did fulfill all outstanding
contractual commitments. He relayed the story during an interview. It
went something like: the band said they wanted to do this cigarett
ad. I objected. They said we needed the money. I said &amp;#34;we don&amp;#39;t need
it that much.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Something to think about.&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/Sh86h92PrH0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>A Critical Mass Of CS Teachers</title>
      <link>https://cestlaz.github.io/post/a-critical-mass-of-cs-teachers/</link>
      <pubDate>Mon, 21 Mar 2022 13:38:49 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/a-critical-mass-of-cs-teachers/</guid>
      <description>&lt;p&gt;
A big difficulty with creating CS opportunities for all our students
is the lack of CS teachers. New York City addressed this problem with
their CS4All program - quick form PD to get teachers into CS
classrooms in a hurry. One can debate if that was the best way to go
but it enabled NYC to create a whole lot of CS classes in a very short
period of time.&lt;/p&gt;
&lt;p&gt;
Of course, these teachers, by and large, only have that short form PD
so I&amp;#39;d argue that this isn&amp;#39;t a long term solution. I mean, you
wouldn&amp;#39;t want your entire language program taught by people who
barely knew Spanish 1  or Math taught by teachers how don&amp;#39;t know
beyond the basics of Algebra.&lt;/p&gt;
&lt;p&gt;
A number of institutions, including Hunter are working on rectifying
this via our CS Education programs. Some programs are legit, and some
practically as superficial as the short form PD but the legit ones are
trying to address the challenge.&lt;/p&gt;
&lt;p&gt;
I want to talk about why Hunter&amp;#39;s Advanced Certificate program, a
program, that I might add, is currently accepting applicants for this
summer, is critical to the process.&lt;/p&gt;
&lt;p&gt;
Right now, you could place K12 CS teachers into one of the following
buckets:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;People with strong CS backgrounds. CS Majors or people with
industry experience.&lt;/li&gt;
&lt;li&gt;Hobbyists who learned some CS on their own and developed an
interest or passion for the subject.&lt;/li&gt;
&lt;li&gt;Volunteers who are game for the challenge who heard about CS4All
and answered the call.&lt;/li&gt;
&lt;li&gt;Teachers who were voluntold who are taking one for the team.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Most of the home-brew CS programs in the city started with teachers
from the first two categories but currently the vast majority of
teachers teaching CS are in the last two. Eventually, CS classes in
NYC will all or mostly all be taught by qualified, certified CS teachers
but how we get there will make a difference in terms of the community
and culture we create.&lt;/p&gt;
&lt;p&gt;
Most of the approved certification programs in NY state award either a
Bachelors degree or a Masters. That is, they&amp;#39;re designed for new
teachers just entering the profession. At Hunter we run a Masters
program. Our first cohort had 3 students, our second 6 and right now
there are 3 applicants for our third cohort. I haven&amp;#39;t done any
advertising or outreach but over time we&amp;#39;ll get more and more
applicants. It will be a slow process but eventually we&amp;#39;ll have
comparable numbers as for our math and science ed programs. I&amp;#39;d
imagine that other programs across the state will have a similar
growth curve. As these programs graduate teachers, the voluntolds and
volunteers that aren&amp;#39;t up to speed will return to their other
subjects. Some will continue to teach a section or two of CS which
is fine provided that by then their base of knowledge of CS and CS
pedagogy is well beyond the canned training that DOE currently
provides.&lt;/p&gt;
&lt;p&gt;
While eventually this will normalize, there is a problem. We&amp;#39;re
basically asking our new CS teachers to also be our master CS
teachers, our CS teacher leaders. They&amp;#39;ll have deep CS knowledge and
they&amp;#39;ll have studied the CS pedagogy so it&amp;#39;ll all be on them.&lt;/p&gt;
&lt;p&gt;
The trouble is that it&amp;#39;s hard enough surviving as a new
teacher. Asking them to be the master teachers and the leaders at the
same time is just not right.&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s where my Advanced Certificate program at Hunter comes in. Right
now, we&amp;#39;re the only such program in New York state. The program&amp;#39;s an
18 credit masters level program that teaches the CS and the CS
pedagogy but understands that the participants are already experienced
teachers in some other subject area. It&amp;#39;s a program that takes an
teacher who&amp;#39;s already experienced, albeit in another subject area and
fills in the CS content and CS pedagogy gaps. &lt;/p&gt;
&lt;p&gt;
I mentioned earlier that I&amp;#39;ve done zero outreach for our masters
program and that&amp;#39;s because all my outreach has been for the Advanced
Cert. I think it&amp;#39;s vitally important that we  build a critical mass of
highly qualified CS teachers as soon as possible. Taking current,
experienced teachers and bringing them up to speed in CS and teaching
CS is the way to do this. &lt;/p&gt;
&lt;p&gt;
Other subjects already have their teacher leaders. In most schools, at
least in larger schools, there will be one or two &amp;#34;go to&amp;#34;
teachers. The ones that know the subject matter more deeply and how to
teach it, the ones who are up on the latest and greatest in the field
and in teaching, the ones who attend the conferences and bring back
best practices. I&amp;#39;m working to jump start that for New York City.&lt;/p&gt;
&lt;p&gt;
Fortunately, I&amp;#39;m not alone and our friends at &lt;a href=&#34;https://gothamgives.org/&#34;&gt;Gotham Gives&lt;/a&gt; and Google
are supporting our program by providing scholarships to pay the
tuition for qualified applicants.&lt;/p&gt;
&lt;p&gt;
Our first cohort graduated in May of 2021 and with that, New York City
(and state) had it&amp;#39;s first 21 certified computer science
teacher. They&amp;#39;ll be joined by 23 more two months from now. That&amp;#39;s 44
teachers that have both the subject knowledge and the pedagogical
knowledge to match in the system. Part of their scholarship agreement
is for them to give back. Take part in CS education efforts in the
city so they&amp;#39;re already helping to shape the community and culture of
K12 CS Education in New York.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m hoping for an even larger cohort this year. Imagine if we could
get 60 or more into our program this summer. That would mean in three
short years we&amp;#39;ll have gone from zero to 100 qualified certified
teachers and we&amp;#39;ll be well on the way to that critical mass of teacher
leaders.&lt;/p&gt;
&lt;p&gt;
As we get closer to that critical mass of qualified teachers, interest
in programs like my certificate program will wane but at the same
time, there will be more demand from teaching newcomers for our
Masters program as there will be a career path for young CS minded
teachers.&lt;/p&gt;
&lt;p&gt;
Once again it&amp;#39;s the long game but that&amp;#39;s what it takes. &lt;/p&gt;
&lt;p&gt;
So, if you&amp;#39;re a New York City CS teacher and are looking for state
certification, come join us. All the information can be found &lt;a href=&#34;http://info.huntercs.org/teacher_ed/summer-2022.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Truth Tables and Logic Gates - where to teach them.</title>
      <link>https://cestlaz.github.io/post/truth-tables/</link>
      <pubDate>Mon, 14 Mar 2022 12:17:11 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/truth-tables/</guid>
      <description>&lt;p&gt;
A question was raised on Facebook last week asking about teaching
truth tables and logic gates in an intro class in programming
Python. The teacher who posed the question certainly appreciates the
value  of these topics but was wondering both how best to motivate the
topics and if they were really appropriate in an intro programming
course as opposed to, say, and intro computer architecture or
electronics course or even a more general intro CS survey course.&lt;/p&gt;
&lt;p&gt;
This came up for me when I started at Hunter. One of my classes was
and is a CS0. It was mostly an intro to programming in Python with a
touch of C++ at the end but it also included:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;binary/hex/ASCII&lt;/li&gt;
&lt;li&gt;an intro to assembly&lt;/li&gt;
&lt;li&gt;Truth tables and logic gates&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These topics were put in the class to prepare students for Hunters
Systems/Architecture classes in the CS sequence. Classes they wouldn&amp;#39;t
see for a year or more.&lt;/p&gt;
&lt;p&gt;
I worked the binary and hex into a small project and ASCII was already
covered in CS1 and I had my CS0 kids in CS1 so I left it for
then. Assembly? I also left that for CS1 and talked a bit about it
when we looked at the debugger and C++. I felt that was a much more
appropriate platform rather than a random couple of lessons out of
nowhere on assembly. In CS1, we were able to look at the assembly code
generated by a simple C++ program  and it actually meant
something.&lt;/p&gt;
&lt;p&gt;
Truth tables and logic? I just left them out.&lt;/p&gt;
&lt;p&gt;
I was in a similar situation as my friend who asked the question and
even though I couldn&amp;#39;t make an official change in the syllabus, I made
the decision to leave things out anyway.&lt;/p&gt;
&lt;p&gt;
Why did I do this?&lt;/p&gt;
&lt;p&gt;
Because you have to pay attention to the entire sequence when deciding
what topics to put in which course.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s talk about truth tables. Truth tables aren&amp;#39;t really a topic but
rather a table to keep track of truth values from boolean
expressions. It&amp;#39;s a useful tool and pretty much the same idea as
charting variables for tracing code and charting values for graphs -
something they&amp;#39;ve likely done in math, science, and even history
classes in high school. They&amp;#39;ve also seen truth tables in high
school. I can&amp;#39;t speak for localities out side of New York State but
basic logic and truth tables are covered and just about all my
students went to high school in New York state.&lt;/p&gt;
&lt;p&gt;
My kids need basic logic - &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, and &lt;code&gt;not&lt;/code&gt; mostly for use in
conditionals. They already know it and we review as needed but truth
tables just aren&amp;#39;t necessary for my kids. There&amp;#39;s another argument
that I&amp;#39;ve been given by my department for teaching truth tables again
anyway but I&amp;#39;ll get to that and refute it later.&lt;/p&gt;
&lt;p&gt;
Logic gates, the other topic I just blow off. Logic gates make sense
to teach in a computer architecture course, a systems course, any
couse where you&amp;#39;re doing low level stuff and even a general CS course
where you want to demystify what&amp;#39;s going on under the hood. In those
contexts you can do some interesting and I&amp;#39;d say exciting things. You
can show a half adder or full adder circuit to show the basics of how
computers can do math. You can also show a flip-flip - rudimentary
memory and other rudimentary circuits. This can be great in a
&amp;#34;demystify&amp;#34; course and certainly in a course that&amp;#39;s going to do a deep
dive into the low level but in an intro programming course? Not so
much.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s just something out of place. You cover it for a couple of lessons
and then the kids forget it. One could make the case that early
exposure, even if it&amp;#39;s cursory, helps students understand harder
things later on but I don&amp;#39;t buy that in this case. I buy that in the
case of recursion. There, I think early exposure is helpful. That&amp;#39;s
because recursion involves some deep thinking. In this case, the logic
gates material covered isn&amp;#39;t really deep. It&amp;#39;s basically just
present. It is what it is - there&amp;#39;s nothing deep to think about, at
least on in the intro class.&lt;/p&gt;
&lt;p&gt;
In a way, it reminded me of something I noticed years ago in Algebra 2
and Trigonometry.  Towards the end, apropos of nothing, there&amp;#39;s a unit
on the circle. It doesn&amp;#39;t really fit in the course and it doesn&amp;#39;t
really introduce anything new that&amp;#39;s meaningful but it&amp;#39;s there
nonetheless. Kids have to know it because they have to know it. Most
of the course, right or wrong you can reasonably justify - the
identities and algebra will help in calculus, for instance, but the
circle unit is just there.&lt;/p&gt;
&lt;p&gt;
Why?&lt;/p&gt;
&lt;p&gt;
The best I could figure is that it was placed in back in the day. Back
then, Alg2/Trig was a terminal course - it was the last math class
that most students would take. This was before the precalc let alone
calculus craze. Someone or some people felt that since this was the
last chance, students should at least see some circle stuff so it got
added in. Then, it just stayed there. Later, when Alg2 was no longer
the last math course, the topic made less sense. It also became more
clear that the circle unit didn&amp;#39;t really prepare students for anything
to come yet it remained.&lt;/p&gt;
&lt;p&gt;
This is why you have to look at the big picture. Not just an individual
class but what came before and what comes after. &lt;/p&gt;
&lt;p&gt;
Back to logic gates.&lt;/p&gt;
&lt;p&gt;
The big argument I heard from the CS department was that they needed
that for the Systems/Architecture sequence which is a 2 class, 6
credit part of the CS major.&lt;/p&gt;
&lt;p&gt;
The conversation would go like this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Me: Should we really be teaching logic gates in CS0?&lt;/p&gt;
&lt;p&gt;
Them: Yes, it&amp;#39;s essential.&lt;/p&gt;
&lt;p&gt;
Me: Why?&lt;/p&gt;
&lt;p&gt;
Them: They need to know it in CS160 (the first of the sys classes).&lt;/p&gt;
&lt;p&gt;
Me: So do they?&lt;/p&gt;
&lt;p&gt;
Them: No, we always have to reteach it.&lt;/p&gt;
&lt;p&gt;
Me: So if you&amp;#39;re reteaching it anyway, what&amp;#39;s the point?&lt;/p&gt;
&lt;p&gt;
Them: …&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I teach around 20 to 30 students each year in my CS0. Given that we
have over 1,000 CS majors overall, I teach a tiny fraction. My class
is also an honors section.&lt;/p&gt;
&lt;p&gt;
All the other CS0 students &lt;strong&gt;are&lt;/strong&gt; taught logic gates and truth tables
yet the CS160 professors still have to reteach the material in
CS160. What&amp;#39;s the point? Time could be much better spent in CS0 diving
more deeply into material more relevant to the CS0 experience.&lt;/p&gt;
&lt;p&gt;
So, I just didn&amp;#39;t teach those topics.&lt;/p&gt;
&lt;p&gt;
I felt this was the right move but it could also have been really bad
so i tracked my students. Each year, I surveyed them as to their CS160
experience. How&amp;#39;d they do in the class? Were logic gates taught
assuming zero background? Was it hard or harder for them? Etc.&lt;/p&gt;
&lt;p&gt;
Turns out, I made the right call. Every year my kids did fine (actually, much
better than fine). Every year the teachers retaught logic gates in
CS160 from scratch and every year my students felt they missed nothing
by not covering it in CS0.&lt;/p&gt;
&lt;p&gt;
I started writing this post because a friend asked about motivating
logic gates in an intro programming class. Sorry to say, I didn&amp;#39;t
answer that question at all but it got me further thinking about
pipeline and sequence and how we frequently don&amp;#39;t look at our students
education as a whole. Neither as a whole in our subject area or, even
more importantly as w real whole - a whole student and whole person.&lt;/p&gt;
&lt;p&gt;
We really should.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SIGCSE 2022 AP or not AP</title>
      <link>https://cestlaz.github.io/post/sigcse-2022-apcs-or-not-ap/</link>
      <pubDate>Wed, 09 Mar 2022 14:26:26 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/sigcse-2022-apcs-or-not-ap/</guid>
      <description>&lt;p&gt;
While my series on APCS-A language choice is done, I wanted to write
this brief addendum.&lt;/p&gt;
&lt;p&gt;
While reading comments over on Facebook under my APCS posts one caught
my eye. There was a comment saying they wished the College Board would
create a data science course. I responded, why not create one
yourself. The response, shared I&amp;#39;m sure by many is that if a course
doesn&amp;#39;t have an AP designation students won&amp;#39;t sign up for it.&lt;/p&gt;
&lt;p&gt;
This bothered me.&lt;/p&gt;
&lt;p&gt;
Now, there are two basic reasons why one can&amp;#39;t create their own
course. The first is that they don&amp;#39;t have the background to do
so. Unfortunately, this is frequently the current state of affairs in
K12 CS. We&amp;#39;re so new and as I mentioned in the earlier post, so many
of our teachers have been thrown in the deep end and are just learning
the CS that they need to teach. We can&amp;#39;t expect these teachers to also
generate new curriculum. This is understandable but unfortunately it also
led us to where we are today with curriculum being driven largely by
private parties, most notably the College Board but also other
independent providers.&lt;/p&gt;
&lt;p&gt;
As I said, this is understandable and doesn&amp;#39;t really bother me. It&amp;#39;s
the other reason that bothers me. It&amp;#39;s that students won&amp;#39;t take a
class without AP designation or the related, my school won&amp;#39;t let me
give a class more weight unless it&amp;#39;s AP (even though it may very well
be more rigorous).&lt;/p&gt;
&lt;p&gt;
Over the past decade or so, the College Board has managed to bamboozle
the public so that they unthinkingly equate AP for good. The truth is,
some AP classes are good, some are bad and usually it&amp;#39;s the teacher
that makes it so. The College Board curriculum can nudge the class
towards better or worse but it&amp;#39;s the teacher that ultimately makes the
grade. What&amp;#39;s more, in cases like APCS-P the class isn&amp;#39;t even college
level. I&amp;#39;ve seen APCS-P implementations that were good High School
courses but I&amp;#39;ve also seen students come out of APCS-P implementations
which were worse than nothing at all. Then you some of the AP History
classes which can be passed with drill and kill. At Stuy, for one of
them at one point you had two possible teachers. One that would
stretch you and make you think but wouldn&amp;#39;t prepare you for the exam
at all, that was on you. The other that would set you up for a 5 but
you wouldn&amp;#39;t really learn that much, mostly memorization. Side note,
those two teachers are likely long gone so I don&amp;#39;t mean to imply this
dichotomy exists today.&lt;/p&gt;
&lt;p&gt;
Basically, we&amp;#39;ve given the College Board far too much influence and
control over our High School curricula.&lt;/p&gt;
&lt;p&gt;
On the one hand we keep hearing that students should take more and
more AP classes and on the other, colleges seem to be giving less and
less credit.&lt;/p&gt;
&lt;p&gt;
The truth is, if a student is merely taking a class because it&amp;#39;s AP
then maybe they shouldn&amp;#39;t be taking it. I know that a student might
take a class for the wrong reasons and end up loving it and I also get
it that at the K12 level we have a number of required classes but the
bar for &amp;#34;good, rigorous course&amp;#34; shouldn&amp;#39;t be AP.&lt;/p&gt;
&lt;p&gt;
Over the past couple of years I&amp;#39;ve noticed a bit of a pushback against
the College Board. The SAT is being questioned so maybe AP is next. We
can have great classes taught by great teachers developed either in
house or by engaging a variety of resources. Nothing wrong with the
College board being one of them but right now their the gorilla in the
room. Maybe one day we&amp;#39;ll get back to actually trusting teachers and
letting them drive curriculum  and instruction but I&amp;#39;m not holding my
breath. &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SIGCSE 2022 APCS - Alternate Languages</title>
      <link>https://cestlaz.github.io/post/sigcse-2022-apcs-alt-langs/</link>
      <pubDate>Wed, 09 Mar 2022 11:12:13 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/sigcse-2022-apcs-alt-langs/</guid>
      <description>
&lt;p&gt;
I think I&amp;#39;ve hit on the big points on APCS-A language but a couple
more remain. This time, let&amp;#39;s look at alternative languages.&lt;/p&gt;
&lt;p&gt;
When APCS started in 1984, Pascal probably made sense - it was the
primary learning language at the time. It wasn&amp;#39;t really used in
industry but it was the language you cut your teeth on. A few years
later when I went from college to Goldman Sacks I found very few
companies using Pascal. C was big and there were more than a few
opportunities using PL/I and of course, lots of COBOL in the business
world but no Pascal to be found.&lt;/p&gt;
&lt;p&gt;
Of course there&amp;#39;s nothing wrong with that. A lot of people claim that
the language for APCS-A or college CS1 &lt;strong&gt;has&lt;/strong&gt; to be a mainstream
language used in industry. It really doesn&amp;#39;t. If someone is going to
continue through a multi-year sequence of classes for CS or a related
field it&amp;#39;s safe to say they will be exposed to many languages and
tools and the one you start with isn&amp;#39;t necessarily the one you end
with. Even if you insist on using an industry language, there are many
to choose from. Python is big in a number of areas but it isn&amp;#39;t the
only game in town. Java and C++ are still heavy hitters and will be
for a long time and many other languages have enough traction to be
considered commonly used in industry.&lt;/p&gt;
&lt;p&gt;
I thought here we could do some quick hits on some possible alternate
languages.&lt;/p&gt;
&lt;p&gt;
For all of these, I&amp;#39;ll be talking about the language as of the last
time I used it so in some cases, I could be &lt;strong&gt;years&lt;/strong&gt; out of date but I
think you&amp;#39;ll get the idea as to what I&amp;#39;m driving at.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Racket (nee Scheme).
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Really quick here. I designed Scheme into my CS0 course at Stuy. I
think it works very well in that context. That said, it would be a
tough sell today. Racket/Scheme are not widely used in industry even
though you will find LISP variants here and there.&lt;/p&gt;
&lt;p&gt;
I like it because the syntax is super simple. Just a handful of rules
and that&amp;#39;s it. I also liked that it&amp;#39;s syntax was different and new -
it leveled the playing field between people who thought they knew
something coming in and the rest. On the other hand it is esoteric and
some find it scary. Back when I created the course with it, MIT was
still using Scheme for their CS1 so that made it an easier sell as did
my reputation in the school.&lt;/p&gt;
&lt;p&gt;
That said, I don&amp;#39;t think I could start a new program easily with
Racket and the only place that I know that uses it big time is
Bootstrap World, a program that I&amp;#39;ve mentioned many times before and
like very much. It&amp;#39;s not that it&amp;#39;s bad - you can develop wonderful
courses that use it but rather, there are alternatives that would be
easier to sell to students, parents, and communities.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Javascript
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
There&amp;#39;s a vocal contingent for JS as a language in both CS1 and CS0. I
like JS a lot. In fact I was using it as much as any other language
until I discovered Clojure and Clojurescript which are now my primary
personal languages.&lt;/p&gt;
&lt;p&gt;
JS fans point out that it&amp;#39;s ubiquitous. If you have a browser, you
have a JS interpreter. It&amp;#39;s also the front end language of the web
(although you can transpile other languages like Clojurescript to JS)
and via Node you can run it server side as well.&lt;/p&gt;
&lt;p&gt;
Although I love JS, I disagree with this contingent. First and
foremost, JS has a number of, well, let&amp;#39;s say, issues. If you haven&amp;#39;t
seen this video, take a few minutes:
&lt;a href=&#34;https://www.destroyallsoftware.com/talks/wat&#34;&gt;&lt;a href=&#34;https://www.destroyallsoftware.com/talks/wat&#34;&gt;https://www.destroyallsoftware.com/talks/wat&lt;/a&gt;&lt;/a&gt;.  The JS part starts at
about 1:20 in. JS has also had issues with types. Now admitedly some
of these things have been at least partly addressed like using &lt;code&gt;val&lt;/code&gt;
and &lt;code&gt;var&lt;/code&gt; but I don&amp;#39;t think this is strictly enforced which is
problematic in a learning language.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve also found the tooling lacking. If you&amp;#39;re doing front end work
and there&amp;#39;s a problem with your code, if you&amp;#39;re lucky you&amp;#39;ll get some
feedback but sometimes things just won&amp;#39;t run and won&amp;#39;t get a clue.&lt;/p&gt;
&lt;p&gt;
Languages like Typescript could address some of these issues but I&amp;#39;m
not familiar enough with Typescript to say.&lt;/p&gt;
&lt;p&gt;
A final issue wiht JS is the tooling. Sure, you can just inject some
code in a web page but doing the real deal requires diving into a
crazy complex ecosystem. Grunt, Gulp, Webpack, Parcel, Rollup, Yeoman and
these are just the ones I can come up with off the top of my head and
none of them are trivial to know or to use. Yes, you can kindof just
take a template and use it but to really understand what&amp;#39;s going on?
Not so much.&lt;/p&gt;
&lt;p&gt;
So, I&amp;#39;ll take a pass on JS as a CS0 or CS1 language. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Ada
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
This is the language that got me thinking about this post. Adacore has
been at SIGCSE every time I&amp;#39;ve attended and they push Ada as a
language. I stopped by to chat with them. Mostly because one of the
Adacore founders, Robert Dewar, who passed away a few years ago, was a
big time mentor to me. I just wanted to chat with the people in the
booth just really to say hi.&lt;/p&gt;
&lt;p&gt;
I hadn&amp;#39;t used Ada in decades and probably won&amp;#39;t in the near future but
the Ada I remember could be a very nice language for a CS1 class. &lt;/p&gt;
&lt;p&gt;
Ada&amp;#39;s industrial strength but I seem to recall required less magic to
get started than Java. It had all the typing you could want for people
who think that&amp;#39;s important. I also like how it did objects back when I
used it. Ada back then didn&amp;#39;t have inheritence but was what was called
Object Typed as opposed to Object Oriented (I think). You could
essentially use class type constructs for abstraction and to
encapsulate state but it didn&amp;#39;t have inheritance. To me this is
perfect. Inheritance is forced in CS1/CS2 and from what I&amp;#39;ve seen is
really something for tool and library builders and not nearly as  much
for most people doing day to day programming.&lt;/p&gt;
&lt;p&gt;
Ada&amp;#39;s also the first, and maybe only language that I was able to
consistently write large complex programs and have them work the first
time. Even with tons of dynamic memory management. This was due to the
language specification and the compiler. &lt;/p&gt;
&lt;p&gt;
Are students going to use Ada in the real world? Perhaps though it&amp;#39;s
far more likely that they&amp;#39;ll work in Java, C++, Python or JS but that
doesn&amp;#39;t mean that Ada can&amp;#39;t be a great starting point in CS1 to learn
important concepts and to develop good habits&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
Go
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Next up, Go. One of the downsides of Go is it&amp;#39;s hard to search for
unless you specify golang. Other than that, Ada got me thinking of Go
since I think it shares some traits.&lt;/p&gt;
&lt;p&gt;
Go was created to address some of the perceived deficiencies in
C/C++. A small language with a clean design that could still be used
for low level tasks. I haven&amp;#39;t used it much, just some fiddling but I
could see the appeal.&lt;/p&gt;
&lt;p&gt;
The language is small and relatively simple so it should be easy to
learn. It also supports objects but no inheritance which is fine by
me. Actually, the object model is pretty different from Java or C++
and I like it a lot. Instead of declaring a Class with variables and
methods you define a struct with variables and associate methods
with it via interfaces.&lt;/p&gt;
&lt;p&gt;
Go also encourages consistent code. Python does this with
indentation. Go does it with &lt;code&gt;gofmt&lt;/code&gt; a program that takes Go source
code and formats it to the Go standard. Editors can hook into gofmt so
as to call it whenever your program is  saved.&lt;/p&gt;
&lt;p&gt;
Go also has a nice model for concurrency but that probably won&amp;#39;t come
up in a CS1 but then again, it&amp;#39;s so clean in Go, it might.&lt;/p&gt;
&lt;p&gt;
Two other features are a super fast compiler - yes this can make a
difference and a great set of libraries. A friend of mine once
described Go as a small, clean language with libraries designed by &amp;#34;a
bunch of really smart programmers with good taste.&amp;#34;&lt;/p&gt;
&lt;p&gt;
I could think of far worse choices for a CS1 class.&lt;/p&gt;
&lt;p&gt;
Interestingly enough, Go was created to replace C/C++ but most of the
adoption has come from the Python world. I personally know a number of
software engineers who ported their products from Python to Go. Maybe
Go could be a sensible alternative to Python as a Java replacement.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
Misc Languages 
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
There are few more languages that I want to briefly mention.&lt;/p&gt;
&lt;p&gt;
Java not only provides the language but also the Java Virtual Machine
and many languages run on the JVM. These include Scala, Kotlin,
Clojure (my favorite), Groovy and others. I don&amp;#39;t see Clojure as a
great CS1 choice in most cases and don&amp;#39;t know enough about the others
to comment other than they all have some level of interoperability.&lt;/p&gt;
&lt;p&gt;
Then, you have languages like Haskel or OCAML but I&amp;#39;m just not going
there.&lt;/p&gt;
&lt;p&gt;
Rust is another one to look at. It seems to have all the features but
is a little more imposing to the beginner - at least that&amp;#39;s what I&amp;#39;m
thinking from first glance but I want to dive in more sometime in the
future. &lt;/p&gt;
&lt;p&gt;
Finally, a word on Ruby - the other language mentioned in the Wat
video I linked above. Ruby came around a little after Python. Looking
at both I decided I was a Python guy and never really pursued Ruby. It
didn&amp;#39;t talk to me. Years later, Ruby on Rails hit and Ruby
exploded. Ruby and Rails were HUGE and everywhere in the startup
world. Bootcamps in fact started to appear left and right and all
focused on Ruby on Rails.&lt;/p&gt;
&lt;p&gt;
A few years later, I started to hear left and right &amp;#34;why don&amp;#39;t you
teach Ruby in high schools.&amp;#34; The answer was, of course &amp;#34;because in a
few years, you&amp;#39;ll be asking why we don&amp;#39;t teach some new thing.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Now, a decade later, Ruby has fallen to the wayside and nobody&amp;#39;s
demanding that we teach it in high schools.&lt;/p&gt;
&lt;p&gt;
Maybe that&amp;#39;s a cautionary tale. We shouldn&amp;#39;t be teaching something,
particularly in high schol because it&amp;#39;s the hot language or it&amp;#39;s big
in industry. We come back once again to what&amp;#39;s the goal of the
course. What do the students need and what&amp;#39;s the best tool to
accomplish that.&lt;/p&gt;
&lt;p&gt;
So, that&amp;#39;s it for this series. I&amp;#39;ll do one more adendum on AP vs non
Ap but it&amp;#39;s been six posts in six days - that&amp;#39;s a lot for me. I
hope it spurs some thought and good discussion.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>SIGCSE 2022 APCS-A Costs of changing the language</title>
      <link>https://cestlaz.github.io/post/sigcse-2022-apcs-costs/</link>
      <pubDate>Tue, 08 Mar 2022 07:28:46 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/sigcse-2022-apcs-costs/</guid>
      <description>&lt;p&gt;
One of the arguments for keeping APCS-A as is are the costs to
change. There are of course, many kinds of costs.&lt;/p&gt;
&lt;p&gt;
The first are the monetary costs. New text book, curricular materials
and possibly equipment. The College Board has their development costs
but I don&amp;#39;t care about those - they&amp;#39;re raking in money hand over fist
anyway. I don&amp;#39;t think these costs amount to much. Companies that sell
materials for classes are always trying to make sales and even when
subjects don&amp;#39;t change there are always new books and other
resources. So, these costs shouldn&amp;#39;t really figure into switching
languages.&lt;/p&gt;
&lt;p&gt;
Another cost relates to ancillary effects. Does changing the language
or changing the course have an effect on how well or how poorly
students are prepared for what&amp;#39;s to come. The argument here for
keeping Java is that CS2, data structures in most colleges is taught
in Java or C++ so switching APCS-A to Python wouldn&amp;#39;t prepare students
as effectively. This may or may not be the case. Students already have
to deal with the switch from Java to C++ if they go to a C++ school
adn get placement out of CS1 and some colleges do indeed teach CS1 in
Python and then switch.&lt;/p&gt;
&lt;p&gt;
So, changing languages won&amp;#39;t necessarily hamper students that take
data structures in a different language in college.&lt;/p&gt;
&lt;p&gt;
On the other hand, if the course content changes significantly -
changing from the A in APCS-A meaning Algorithm to API as Owen
Astrachan suggested at SIGCSE then that&amp;#39;s a different kettle of fish. &lt;/p&gt;
&lt;p&gt;
Digging a little deeper on this front is that when a college designs
their CS0, CS1, and CS2 classes they should look at the full
sequence - all three of these classes and beyond. If you change a
course, you really have to think about how it changes the future
ones. Hopefully colleges do this when changing curriculum but I did
talk about how Hunter didn&amp;#39;t when it rebooted their CS0 class. Now,
this really isn&amp;#39;t a reason to change or not to change since a high
school can&amp;#39;t really track and pay attention to every colleges CS0,
CS1, CS2 sequence so I guess it&amp;#39;s neither here nor there.&lt;/p&gt;
&lt;p&gt;
I guess the bottom line for this cost is that as long as APCS-A
remains fundamentally the same content wise it may not matter what the
language is and if the College Board clearly states that APCS-A is
&lt;strong&gt;not&lt;/strong&gt; going to be a college CS1 then any language is fair game.&lt;/p&gt;
&lt;p&gt;
The biggest cost that people bring up is teacher training. All the
teachers will have to learn the new language and possibly a new
paradigm. This one is &lt;strong&gt;huge&lt;/strong&gt;. I work with a lot of teachers who are
relatively new to CS and some of them are struggling their way through
APCS-A. These teachers are basically students in CS0 or maybe CS1 and
just finding there way to and through CS. Switching languages for them
is no easy feat and concepts in one language don&amp;#39;t necessarily
translate to another. I&amp;#39;ve seen teachers who claim proficiency with
Python or JS struggle to write the simplest of Java programs or after
spending a significant amount of time in Java they have similar
struggles switching to Python.&lt;/p&gt;
&lt;p&gt;
In spite of so many people saying CS is easy and anyone can do it,
learning new things is in fact hard and takes both time and effort.&lt;/p&gt;
&lt;p&gt;
As a side note, this cost flies in the face of every PD provider (I&amp;#39;m
looking at you code.org) that claims &amp;#34;we&amp;#39;ve trained XXX teachers to be
CS teachers in just YYY sessions!&amp;#34;&lt;/p&gt;
&lt;p&gt;
This is the state we&amp;#39;re in today but this is also a warning. We &lt;strong&gt;have&lt;/strong&gt;
to do better with respect to teacher training so as to make this cost
meaningless.&lt;/p&gt;
&lt;p&gt;
When I entered teaching, I had been doing C programming professionally
but knew Pascal along with other languages from college. Teaching APCS-A/B
in Pascal was easy. Well, the language was easy. I was a new teacher
so teaching overall was hard but teaching APCS-A/B wasn&amp;#39;t any harder
than say teaching Trig or Linear Algebra. Actually, maybe it was a
little easier since I was a CS guy at heart and not a math
person.&lt;/p&gt;
&lt;p&gt;
When the class switched to C++, I figured out C++. I had never done
OOP before but I figured it out. Switching to Java? Same deal. I also
taught myself Python, NetLogo and other languages that I had to or wanted
to teach with.&lt;/p&gt;
&lt;p&gt;
The point is, I had a strong CS background so picking up a new
language wasn&amp;#39;t really a major cost. It wasn&amp;#39;t free - I had to spend
some time and at times figure out new tooling but it wasn&amp;#39;t this
insurmountable thing.&lt;/p&gt;
&lt;p&gt;
Right now, we&amp;#39;re at a point where we can&amp;#39;t really ask this of our CS
teachers. Too many are too new but we have to make sure that our
pre-service training programs and state requirements are such that in
the future we will have CS teachers that know enough CS so that a
language switch in a course isn&amp;#39;t a big deal. Rather, a teacher will
be able to do an analysis of the new tool solely based on asking if
it&amp;#39;s right for their students.&lt;/p&gt;
&lt;p&gt;
So, those are the costs. Are they enough of a reason to keep Java? I
don&amp;#39;t think so. If you give enough lead time, as pre-service programs
are getting up to speed you can minimize the training costs. Just
give it 10 years instead of 5. Of course, you have to be confident
that Python will be the language that far into the future.&lt;/p&gt;
&lt;p&gt;
That said, I&amp;#39;m not advocating for a switch to Python. We still have to
go back to my first post on this - The College Board has to decide if
this will be a college CS1 class or something else and only then can
we do the language vs language analysis.&lt;/p&gt;
&lt;p&gt;
Are we done with this thread? Almost but I think it&amp;#39;s worth spending
some time looking at some possible alternatives to both Java and
Python.&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s next time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SIGCSE 2022 - APCS-A Language strengths and weaknesses</title>
      <link>https://cestlaz.github.io/post/sigcse-2022-apcs-languages/</link>
      <pubDate>Mon, 07 Mar 2022 13:54:58 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/sigcse-2022-apcs-languages/</guid>
      <description>&lt;p&gt;
Last time we talked about the &lt;a href=&#34;https://cestlaz.github.io/post/sigcse-2022-apcs-intent/&#34;&gt;intent of APCS-A&lt;/a&gt; and without deciding on
that we can&amp;#39;t really chose a language. Still, we can talk about
strengths and weaknesses of languages. Let&amp;#39;s do that by taking a walk
down history.&lt;/p&gt;
&lt;p&gt;
APCS started in Pascal. Back then it was a one year course that
included CS1 (programming) and CS2 (data structures). Later  they
offered two exams A (programming) and AB (programming plus data
structures). The AB exam was last administered in May 2009. In it&amp;#39;s
last year, only 3,881 students took the AB exam - about 10% of those
students were from Stuy.&lt;/p&gt;
&lt;p&gt;
The exam started in Pascal but switched to C++ in 1999. Why switch? I
can&amp;#39;t say for sure. I was a young teacher back then. Under 10 years in
and wasn&amp;#39;t involved in the greater AP scene. Pascal was a nice
learning language but it had a number of deficiencies. Pascal was
pretty straight forward, encouraged structured programming, required
memory management which I say as a plus since it allowed one to study
it and overall was a strong learning language. On the other hand, programs were
limited to a single file, there was no standard for graphics or I
think even file access, and it couldn&amp;#39;t do OOP which was becoming all
the rage. It also was rarely used in industry even though I did have a
nice job offer back then from Brown Brothers Harriman &amp;amp; Co. working in
Turbo Pascal.&lt;/p&gt;
&lt;p&gt;
C++ was a hot language, it supported OOP as well as multiple files. It
had much greater complexity but I guess that wasn&amp;#39;t a deal breaker for
the College Board. I also have no idea if the conversation was
switching from Pascal to C++ or if it was switching from Pascal to
something else and then C++ was chosen.&lt;/p&gt;
&lt;p&gt;
In 2004 the exam moved to Java. Again, something gained something
lost.&lt;/p&gt;
&lt;p&gt;
Java was the new hotness so no problem there. What about other
changes? Java was &lt;strong&gt;much&lt;/strong&gt; simpler. C++ had many ways to do things while
Java nudged you into the Java way. Java also forced Object Oriented
Programming which, at the time, I guess people felt was a good
thing. C++ was more multi-modal and at the time, heck even today, was
taught more like C with objects. Java also had a standard way to do
I/O and graphics which, I guess was also a plus.&lt;/p&gt;
&lt;p&gt;
What about the downside?&lt;/p&gt;
&lt;p&gt;
Personally, I found the forced OOP to be a problem Even though the
language forced all objects all the time, the nature of problems
attacked in a CS1 don&amp;#39;t necessarily lend themselves towards Object
Oriented solutions. This made OOP forced and this is a problem.&lt;/p&gt;
&lt;p&gt;
Java also required a lot of &amp;#34;magic:&amp;#34; - ignore the &lt;strong&gt;public static void
main&lt;/strong&gt; behind the curtain. You&amp;#39;ll understand it later.&lt;/p&gt;
&lt;p&gt;
The big loss to me and others pointed to this as a gain was that Java
took out memory management. I liked that you still had to allocate
memory using &lt;strong&gt;new&lt;/strong&gt; to create things like nodes for trees and linked
lists but you didn&amp;#39;t have to manage them yourself.&lt;/p&gt;
&lt;p&gt;
True, this is generally a good thing but the problem was that APCS-A/B
was a class, not the real world. If you were going to take out memory
management from CS1/CS2 in APCS-A/B then it had to go back in
somewhere or kids would never get it. This is where looking at a
course and not the full sequence can be a problem. If you take
something important out of APCS and then it&amp;#39;s not in the college
classes later on you&amp;#39;ve taken it out of the students overall
preparation.&lt;/p&gt;
&lt;p&gt;
Based on talking to my tech friends hiring after the switch, this was
a real problem.&lt;/p&gt;
&lt;p&gt;
In any event, the class chugged along, dropping the B part up through
today.&lt;/p&gt;
&lt;p&gt;
So, why consider Python?&lt;/p&gt;
&lt;p&gt;
Python goes back to multi-modal and takes away the magic. Hello World
is just one line. No classes necessary. Python is also, by most
measures simpler. Python also has tons of libraries. You can use Flask
to build a web server, NLTK to explore language, Pygame for games and
on and on. Python is also used by many other fields besides direct CS.&lt;/p&gt;
&lt;p&gt;
But there&amp;#39;s always a cost.&lt;/p&gt;
&lt;p&gt;
Python&amp;#39;s object model is, to put it kindly, ugly and ackward. Not as
bad a Perl but having to use self and no real private kind of kills it
from a teaching point of view. The libraries and use in other fields
are also less important if the intent is to mirror college CS1 content
as opposed to rolling a new non major, more general course.&lt;/p&gt;
&lt;p&gt;
Another cost is the use of lists rather than arrays. Lists give much
more power much more quickly but at the cost of teaching array style
indexed data structures. This isn&amp;#39;t a cost for everyone but it&amp;#39;s
something to consider. Related to this is that Python doesn&amp;#39;t really
have a counting loop. It has a &lt;strong&gt;while&lt;/strong&gt; and a &lt;strong&gt;for each&lt;/strong&gt; but not a
counting &lt;strong&gt;for&lt;/strong&gt;. This may or may not be an issue depending on how you
feel about traversing data.&lt;/p&gt;
&lt;p&gt;
The potential big cost comes down to typing. Sure, writing &lt;code&gt;int a&lt;/code&gt; is
a pain in statically typed Java vs Python&amp;#39;s dynamic typing but while
dyanmic is quicker and easier and makes sense given Python&amp;#39;s scripting
roots, static is safer and makes it easier to write larger more robust
systems.&lt;/p&gt;
&lt;p&gt;
Memory management, is of course still long gone :-(.&lt;/p&gt;
&lt;p&gt;
So, what to do? &lt;/p&gt;
&lt;p&gt;
Python is used in many fields and is a startup darling but Java is
still one of the kings, along with C++ in the industrial strength and
enterprise world. I have mixed feelings and might take a strong stance
but not yet.&lt;/p&gt;
&lt;p&gt;
We still have to look at more aspects of this question. Specifically
what about the costs of switching from one language to any other
language and also does the choice of language in CS1 matter with
respect to CS2.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll do at least one more post maybe more to address those but I think
that&amp;#39;s it for today.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SIGCSE 2022 - What language APCS-A part 1 - the intent</title>
      <link>https://cestlaz.github.io/post/sigcse-2022-apcs-intent/</link>
      <pubDate>Sun, 06 Mar 2022 16:00:07 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/sigcse-2022-apcs-intent/</guid>
      <description>&lt;p&gt;
One of the first sessions of SIGCSE2022 was a panel on the choice of
language for APCS-A. Should it continue to use Java or should it shift
to Python. This topic comes up from time to time. I didn&amp;#39;t attend this
particular session but discussed it at length with a few people who
did.&lt;/p&gt;
&lt;p&gt;
Truth be told, I wasn&amp;#39;t going to start writing about SIGCSE and APCS-A
until I finished a few other SIGCSE posts but my friend &lt;a href=&#34;https://twitter.com/alfredtwo&#34;&gt;Alfred
Thompson&lt;/a&gt; said he was writing one and was planning on posting it
soon. I think it&amp;#39;s better when us CS Ed bloggers write about similar
things at similar times - fosters better discussion so I&amp;#39;m writing
this today (Sunday) and will post it as soon as I see Alfred&amp;#39;s post.&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s a lot to unpack when it comes to language choice for
APCS-A. Language strengths and weaknesses, ease of learning, tooling
and training costs and more. I&amp;#39;ll share my feelings on all of these
and maybe more but before we dig into those I think it&amp;#39;s worth
thinking about the intent of the course.&lt;/p&gt;
&lt;p&gt;
The AP program was originally created to allow advanced high school
students to get started on college work in their field of interest. An
AP class would either be the first course in a major or it would be a
requirement like calculus is for CS majors. There were fewer exams and
FAR fewer students taking them.&lt;/p&gt;
&lt;p&gt;
Over time, things evolved and today that&amp;#39;s not necessarily the
case. APCS-A, Calc and many others still fit the bill but then you
have classes like AP Euro - sometimes offered to HS sophomores and is
really a regurgitation course. Sorry but a class appropriate for HS
sophomores is not college level. Same for APCS-Principles. Might be
good, might be bad but it&amp;#39;s not college level.&lt;/p&gt;
&lt;p&gt;
So, before deciding on the language you really have to decide on
intent. If APCS-A is to be the first class in the CS major then the
college board has to really follow what colleges are doing. Some
people think that APCS-A should be a course for everybody or for non
CS majors but if the class is supposed to be a first in major course,
it &lt;strong&gt;has&lt;/strong&gt; to follow the college lead.&lt;/p&gt;
&lt;p&gt;
If colleges decide to make their CS1 a more general course, more about
APIs, less about either programming or, to it&amp;#39;s already limited extent
algorithms and data structures, then it&amp;#39;s fine to change but as long as the
college board is pushing CS1 as a first course in the CS major then
APCS-A has to follow the general CS1 outline.&lt;/p&gt;
&lt;p&gt;
So, assuming this stays the same, you might still argue a change to
Python. I&amp;#39;ll look at the pros and cons of doing this at a later post but one
argument against the change is that students having taken CS1 in
Python have a harder time transitioning to Java (or C++) in CS2.&lt;/p&gt;
&lt;p&gt;
Some people say this isn&amp;#39;t an issue but I think it is. APCS-A is
already frequently a watered down CS1 and students sometimes struggle
in CS2 even when it&amp;#39;s in the same language. Switching languages will
result in kids hitting a brick wall. This is an example of a problem
I&amp;#39;ve seen over and over again - people changing a class because they
feel there&amp;#39;s a need but not paying attention to the next class let
alone the full pipeline.&lt;/p&gt;
&lt;p&gt;
This happened at Hunter recently - I warned the department that it
would but nobody listened. Our CS0 course up until my first
year at Hunter was a pretty bad course It was a random assortment
of topics with a lot of cruft and it just didn&amp;#39;t serve anybody. In my
second semester the class was slated to change to a new course. The
new course was going to have more programming - all in Python - lots
of small programs. It was a much broader class and we all agreed that
it would be much better. It was except for one thing. Nobody was
paying attention to how well it prepared students for our CS1 and that
first CS1 class after the new CS0 was full of complaints, student
struggles, and student failures. On the one hand, the new course had
more programming than the earlier one but since it was only tiny
programs, students weren&amp;#39;t prepared for CS1 right out of the gate but
students thought they were prepared. Things have gotten better since then
but the problem was easily to predict.&lt;/p&gt;
&lt;p&gt;
If High Schools move to a less rigorous class with an &amp;#34;easier&amp;#34;
language like Python great care should be taken to make sure that it
prepares students to jump into a college CS2 which won&amp;#39;t have nearly
the supports that are present in high school.&lt;/p&gt;
&lt;p&gt;
So that&amp;#39;s it for this installment. Before you can even think about
language you have to think about class intent. Now that we&amp;#39;ve done
that we can start looking at language choice. That&amp;#39;s for next time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SIGCSE 2022 - Conference format</title>
      <link>https://cestlaz.github.io/post/sigcse-2022-hybrid/</link>
      <pubDate>Sat, 05 Mar 2022 08:05:15 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/sigcse-2022-hybrid/</guid>
      <description>&lt;p&gt;
Before diving into the content I thought I&amp;#39;d share my thoughts about
SIGCSE as a hybrid conference. Prior to Covid, SIGCSE was pushing
2,000 in person participants. This time around ther were a little
under 800 in person and a number of hundreds more remote. The in
person numbers mirrored what CSTA has grown to. It&amp;#39;s a nice size. Not
overwhelming but manageable. It&amp;#39;s at the upper edge of possibly
feeling intimate. Once you get into the thousands things feel far less
personal. You can go the entire conference not finding people you want
to connect with. On the other hand you can also blend into the crowd
should you choose that route.&lt;/p&gt;
&lt;p&gt;
Things basically ran as usual. Opening announcements and keynote,
coffee break, sessions and so on but remote was interjected
throughout. There were also remote only sessions but I can&amp;#39;t speak to
those.&lt;/p&gt;
&lt;p&gt;
We started out with the opening keynote. Barbara Liskov Zoomed in from
her home. She gave a &lt;strong&gt;great&lt;/strong&gt; talk going through her history which in
many was is &lt;strong&gt;the&lt;/strong&gt; history of some key aspects of computer science,
programming languages, and programming.&lt;/p&gt;
&lt;p&gt;
There was zero downside to having a remote keynote speaker. Barbara
was intersting and engaging. I was blown away. The only thing I found
a bit weird was that I kept glancing over to the dias where the
speaker would normally stand and it was empty. That&amp;#39;s on me though.&lt;/p&gt;
&lt;p&gt;
At the end we had Q&amp;amp;A from both people in the live audience and people
on the remote platform. This was an all around win.&lt;/p&gt;
&lt;p&gt;
The first thing that somewhat irked me about virtual was at a paper
session. The second paper was presented as a video. This part was
fine, maybe even preferable since it allows the presented to make sure
the video is set up the way they want and it also keeps within time
limits. The problem was that there was no Q&amp;amp;A. If you&amp;#39;re going to do a
video presentation, the presenter should hop on some platform at the
end for Q&amp;amp;A. There is zero value added to just showing the video. I
could do that from home.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not criticizing SIGCSE here. They tried something. In my opinion
it didn&amp;#39;t work. In the future, I&amp;#39;d love to see video presentations but
with a live, in person or via some Zoom platform Q&amp;amp;A. In theory there
could be some &amp;#34;flipped sessions&amp;#34; (although I think a lot of the
flipped classroom concepts are bunk) where you could watch the video
or read the paper prior to the session and then have a meaty
discussion.&lt;/p&gt;
&lt;p&gt;
The second hybrid thing that I didn&amp;#39;t like was a hybrid BOF. I just
think it din&amp;#39;t work. It basically turned into a few small mini
presentations by the organizers. All the prior SIGCSE BOFs I&amp;#39;ve
attended had the hosts facilitating a room wide discussion. This was
similar but slightly more awkward in the few virtual group discussion
sessions I&amp;#39;ve taken part in. This was a case of hybrid not
working. With some people in the room and some people at home you just
couldn&amp;#39;t have meaningful discussion. The people in the room couldn&amp;#39;t
talk without excluding the remote people and remote conversation
wasn&amp;#39;t available easily to the in person crowd.&lt;/p&gt;
&lt;p&gt;
Birds of a feather just don&amp;#39;t fly mixed. Do them remote or do them in
person.&lt;/p&gt;
&lt;p&gt;
A third thing that didn&amp;#39;t really bother me but I found weird was one
panel where one person was in person and the rest were remote while I
knew that at least one of the remote people were attending in
person. The mix just didn&amp;#39;t flow as well for me. I&amp;#39;ve attende all in
person panels, all remote panels, and panels where all the panelists
were in a room together but presenting remotely. All of these formats
worked. It think the mix of in person and remote was just kindof
weird. In future, I&amp;#39;d say either have all the presenters in a room
together at a big table even if it&amp;#39;s remote or have them all &amp;#34;dial
in.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Overall the conference was great so these are really nitpicks.&lt;/p&gt;
&lt;p&gt;
With this post out of the way I can get to the content posts but I
feel it would be remiss if I didn&amp;#39;t mention a couple of non content
related highlights that the SIGCSE organizers provided.&lt;/p&gt;
&lt;p&gt;
First, the opening evening reception had a &lt;strong&gt;bacon bar&lt;/strong&gt;. All
receptions, coffee breaks, snack times, and I&amp;#39;d even say sessions
should provide bacon.&lt;/p&gt;
&lt;p&gt;
The other thing which I&amp;#39;m more serious about is that they provided
coffee and tea before the opening sessions rather than their usual
practice of withholding caffeine for the 10:00 break. I can&amp;#39;t imagine
it would cost much to just put out the urns early.&lt;/p&gt;
&lt;p&gt;
Overall, great conference and great job by the organizers.&lt;/p&gt;
&lt;p&gt;
Content related posts to come.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SIGCSE2022 - Things I plan to blog about</title>
      <link>https://cestlaz.github.io/post/sigcse2022-intro/</link>
      <pubDate>Fri, 04 Mar 2022 20:07:45 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/sigcse2022-intro/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been up in Providence RI since this past Wednesday for
SIGCSE2022. The big Computer Science Educators conference. Also, my
first in person conference since pre-covid.&lt;/p&gt;
&lt;p&gt;
I wasn&amp;#39;t sure how I was going to feel about this big in person
gathering but as it&amp;#39;s turned out, it&amp;#39;s been pretty comfortable.&lt;/p&gt;
&lt;p&gt;
So far, I&amp;#39;ve attended two terrific keynotes. One by Barbara
Liskov and the other Barbara Ericson, some really interesting sessions
and some less interesting ones and have had a great time discussing CS
education.&lt;/p&gt;
&lt;p&gt;
The big highlight has been seeing friends in person and being able to
talk. Sitting down for coffee with a friend or having a rount table
discussion around a well, round table.&lt;/p&gt;
&lt;p&gt;
One of those friends I was delighted to see was Alfred
Thompson. Alfred&amp;#39;s already sumarized his &lt;a href=&#34;https://blog.acthompson.net/2022/03/sigcse-2022-day-1.html&#34;&gt;first&lt;/a&gt; and &lt;a href=&#34;https://blog.acthompson.net/2022/03/sigcse-2022-day-2.html&#34;&gt;second&lt;/a&gt; day
experiences so there&amp;#39;s not reason for me to write much the same so I
figured I&amp;#39;d just quickly list out a few of my highlights and in
particular things I plan to write more about when I get back to NYC.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Language choice for APCS. There was a panel that considered why
change to Python or why stick with Java. I didn&amp;#39;t attend this
session but talked at length about it with a number of people. It
had me reconsidering my opinions and I&amp;#39;ll certainly write about this
in the near future.&lt;/li&gt;
&lt;li&gt;I saw an interesting talk by Sam Lau in which he discussed how
statisticians and computer scientists differed in their views as to
how and what should be taught in a data science course. This got me
thinking about developing CS offerings at the high school level.&lt;/li&gt;
&lt;li&gt;I attended the &amp;#34;It seemed like a good idea at the time&amp;#34; session for
the first time where teachers discussed their failures. This was a
&lt;strong&gt;great&lt;/strong&gt; session hosted by two more friends I haven&amp;#39;t seen since
pre-covid - Dan Garcia and Jim Huggins. One topic brought up there
was dealing with late assignments as well as alternative
grading. This too is something I plan to write about.&lt;/li&gt;
&lt;li&gt;PD For CS Teachers and teacher prep programs. This is clearly
something I care deeply about and there were some sessions on this.&lt;/li&gt;
&lt;li&gt;I also spent a good amount of time catching up with my friends Jim
and Robin from Siena College. They&amp;#39;re doing some cool thing up there
so that&amp;#39;s another thing I&amp;#39;d like to write about.&lt;/li&gt;
&lt;li&gt;I also had some good discussions with vendors in the exhibit hall as
well as some great hallway tract talks.&lt;/li&gt;
&lt;li&gt;My thoughts on the hybrid format of this conference&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That&amp;#39;s a big list - a lot of things to write about. I hope to get on
this when I get back to NYC on Sunday.&lt;/p&gt;
&lt;p&gt;
In the meantime, if you&amp;#39;re in providence for tomorrow&amp;#39;s last day of
SIGCSE, please find me and say hello!!!!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>First live conference in 2 years</title>
      <link>https://cestlaz.github.io/post/sigcse-2022/</link>
      <pubDate>Tue, 01 Mar 2022 08:13:17 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/sigcse-2022/</guid>
      <description>&lt;p&gt;
Tomorrow I&amp;#39;ll be driving up to Providence Rhode Island for SIGSE 2022,
basically the largest computer science education conference out
there. I guess ITSE, a conference I&amp;#39;ve never attended, is larger but
that&amp;#39;s really EdTech with some CS.&lt;/p&gt;
&lt;p&gt;
The last in person conference I went to was two almost exactly two
years ago - also SIGCSE. I arrived in Portland and went to a
pre-conference session and on the morning of the big start, about three
hours before I ran my session, I saw an email saying we were
canceled. I flew home and a few days later we began our shelter in for
covid.&lt;/p&gt;
&lt;p&gt;
In spite of the latest CDC release, SIGCSE is still requiring
masks. This is something I support. I have no problem taking a
conservative view on health, particularly at an event that brings
together people from all over the world.&lt;/p&gt;
&lt;p&gt;
The sessions should be comfortable. Everybody will be vaccinated and
should be masked so it&amp;#39;s no different than attending a concert in
NYC. I am curious though about the lunches and big reception. Will
everyone just dump the masks for food since we&amp;#39;re all vaccinated? Will
there be some trepidation? We&amp;#39;ll see.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m also curious to see the overall attendance. The last SIGCSE had
well over 1,500 attendees. What will this one be like? &lt;/p&gt;
&lt;p&gt;
There are some sessions I&amp;#39;m really looking forward to. There are some
on K12 teacher preparation and professional development. I feel pretty
confident that the approach I&amp;#39;m taking at Hunter is the right one but
it&amp;#39;s always good to see what other people are thinking about and
trying - always happy to steal better ideas. I&amp;#39;m also looking forward
to some of the sessions that deal with teaching more advanced CS
concepts. This is something that&amp;#39;s lacking in CS Ed. The CSTA
conference which focuses on K12 is more about actual teaching but
since K12 CS is still in its infancy, most schools are still dealing
with intro level stuff and conferences like CSTA really have to work
to support our new teachers.&lt;/p&gt;
&lt;p&gt;
Most importantly though, I&amp;#39;m looking forward to seeing people that I
haven&amp;#39;t seen in a couple of years. Both those that I consider real
friends and also the many acquaintances I&amp;#39;m friendly with.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m also looking to see the breakdown of K12 and higher ed
people. Over the years the number of K12 teachers at the conference
has grown and it&amp;#39;s interesting to see the differences in the
camps. The teachers, by and large know far less CS but are much
stronger teachers while the professors know the topic but while they
might research teaching, they don&amp;#39;t nearly have the depth of teaching
knowlege that K12 teachers posess.&lt;/p&gt;
&lt;p&gt;
This is a probably unfair oversimplification but you could say that teachers teach
the student and professors teach the subject.&lt;/p&gt;
&lt;p&gt;
This can make for an interesting dynamic. I hope over time, the
teachers become stronger in the subject material and that the
professors realize that teaching is an art and a craft and that what
one does at an elite institution is worlds away from the inner city
middle school.&lt;/p&gt;
&lt;p&gt;
Anyway, enough yammering. For those of you who&amp;#39;ll be in providence
this week, make sure to say hi. I&amp;#39;m sure we&amp;#39;ll all learn a lot and have
a blast doing it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Programming Problem Solving And Crosswords</title>
      <link>https://cestlaz.github.io/post/programming-problem-solving-and-crosswords/</link>
      <pubDate>Mon, 21 Feb 2022 17:37:46 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/programming-problem-solving-and-crosswords/</guid>
      <description>&lt;p&gt;
I used to do the New York Times Crossword puzzle. I don&amp;#39;t remember
when I started - some time late in Eugene Maleska&amp;#39;s tenure as the
editor. I continued on a few years into Will Shortz&amp;#39;s puzzles. I
stopped when the Times wanted to charge me for both print and
online. I preferred reading the physical paper but liked printing the
puzzle from their online site. I was also pissed at the Times coverage
of a number of issues at the time.&lt;/p&gt;
&lt;p&gt;
I picked up the puzzle again when Covid started and have only missed a
few days since. I&amp;#39;m pretty sure the puzzle is easier these days. Way
back when, I&amp;#39;d sometimes complete or almost complete a Saturday puzzle
but more frequently I&amp;#39;d just fill in a smattering of words. On this
run, I&amp;#39;ve completed every puzzle I started except one. I say the
puzzle must be getting easier because if anything, I&amp;#39;m getting dumber.&lt;/p&gt;
&lt;p&gt;
I was doing the puzzle the other day and it got me thinking about the
advice I give my students when I first meet them. I tell them it&amp;#39;s one
of the true secrets of success. Of course, I know it&amp;#39;s my job as teacher to tell
them these critical secrets and it&amp;#39;s their job as student to ignore
it.&lt;/p&gt;
&lt;p&gt;
I tell my students that regardless of when they do an assignment they
should read over it the day they get it. It doesn&amp;#39;t matter if the
assignment isn&amp;#39;t due for two weeks -  read it and give it a bit of
thought the day you get it. Even if you don&amp;#39;t work on the assignment
right then and there, your brain will start working on it in the
background.&lt;/p&gt;
&lt;p&gt;
When I do the crossword, particularly Friday and Saturday, but
sometimes other days as well, I start the puzzle with my first cup of
coffee. Sometimes I&amp;#39;ll get a good amount done but on those Saturday
puzzles, I&amp;#39;ll sometimes get stuck with the fewest of words. I&amp;#39;ll look
at clues and, well, have no clue and think &amp;#34;guess I won&amp;#39;t be finishing
this one.&amp;#34; At some point I stop - do something else. I check my email,
read some blogs in my feeds and a little later go back to the
puzzle. Invariably, I&amp;#39;ll read some clues that while opaque just a few
minutes earlier are trivial now. Hitting another wall I take another
break. I&amp;#39;ll come back after breakfast and fill in some more. So far,
this has just about always resulted in a solved puzzle.&lt;/p&gt;
&lt;p&gt;
This got me thinking of a few things. One, the break is giving my
brain time to work in the background while focusing on something
else. It also lets me look at the puzzle with fresh eyes when I pick
it up again. A last little point that&amp;#39;s neither here nor there is that
it is a manner of perseverance (no, I won&amp;#39;t use that term grit which
I hate).&lt;/p&gt;
&lt;p&gt;
To me this was a really clear and concise example of exactly what I&amp;#39;ve
been preaching to my kids for decades. Not only read the assignment
early but also when you hit a roadblock, take a break - clear your
head. Come back with fresh eyes. Work smarter not harder. &lt;/p&gt;
&lt;p&gt;
Unfortunately, I don&amp;#39;t think this example is more relatable to my kids
than the other ways I try to share this wisdom with them but I still
think it&amp;#39;s a great example.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rubrics for teacher observations are garbage</title>
      <link>https://cestlaz.github.io/post/observation-rubrics/</link>
      <pubDate>Wed, 09 Feb 2022 12:12:26 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/observation-rubrics/</guid>
      <description>&lt;p&gt;
There have been a lot of bad ideas foisted onto educators over the
course of my career. One of the ones that always pissed me off was the
use of a rubric for teacher observation. Specifically, using the
Danielson Framework. &lt;/p&gt;
&lt;p&gt;
The Danielson Framework is a LONG laundry list of topics and concepts
and for each a teacher could be rated ineffective, developing,
effective, or highly effective.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s garbage.&lt;/p&gt;
&lt;p&gt;
Sure, there are some good things in the framework but using a
restrictive rubric to judge a teacher is just a bad idea. Even the
frameworks creator, Charlotte Danielson publicly stated when this
nonsense got started that the framework should not be used to evaluate
teachers. Of course departments of education would give a nod nod
wink wink and say &amp;#34;no, it&amp;#39;s not for evaluation, it&amp;#39;s for teacher
improvement.&amp;#34;&lt;/p&gt;
&lt;p&gt;
I remember talking to a colleague at Stuy. She hated the Danielson
Framework that was being forced on teachers for observations. She was
known to be a strong teacher but according to Danielson, she was off
the charts good. She reason she hated it was because she recognized
that her teaching style just happened to map well to the framework du
jour and eventually it would be a different rubric and she would no
longer be good.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve actually seen this happen - teachers going from good to bad or
the reverse based on an observation rubric. The teacher didn&amp;#39;t change,
nor the students but change the rubric and you can get the results you
want. Good, or more frequently bad, I mean it was then Governor Cuomo
who said that his teacher evaluation metric was clearly no good
because too many teachers were scoring well.&lt;/p&gt;
&lt;p&gt;
Why am I bringing this up? Because student teachers. My CS Education
Masters program is about to have it&amp;#39;s first graduates and New York
State will have it&amp;#39;s first two newly certified CS teachers with said
degrees. They&amp;#39;re both finishing up our program with a last course (CS
Topics) and student teaching. Both of our student teachers will have
to be officially observed three times and ultimately I&amp;#39;ll have to rate
them and enter those ratings into Hunter&amp;#39;s system.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m ranting on Danielson because Hunter uses said framework to
evaluate its student teachers. Like an institution, Hunter&amp;#39;s a complex
beast and there&amp;#39;s both good and bad but seeing what is essentially the
Danielson framework being used to evaluate student teachers knocked
them (us) down a peg in my book.&lt;/p&gt;
&lt;p&gt;
Now, from a top down approach, using something like Danielson makes
sense. It gives a series of check boxes making things easy to measure
even if they&amp;#39;re the wrong things. It also made sense back when it came
to be because of the leadership model espoused by people like Michael
Bloomberg where he would take young teachers with a year or two of
experience and make them principals. A horrible idea which persists to
this day. Traditionally, an AP or P would have decades of teaching
under their belt. They knew what a good lesson looked like. Not
Bloomberg era principals. I mean, it takes a dozen years before you&amp;#39;re
really an intermediate stage teacher. A two year principal doesn&amp;#39;t
have a chance nor a clue.&lt;/p&gt;
&lt;p&gt;
The bottom line is that good (and bad) teaching is so varied and
nuanced that you can&amp;#39;t boil it down to a rubric. All you can say are
things like look for questioning, engagement etc..&lt;/p&gt;
&lt;p&gt;
My approach to observations was set by my first supervisor at Seward
Park High School. He was a master teacher. Just ask him. Unlike many
APs who just teach honors or the top level class, he would rotate
classes among his entire department. He would teach everything from
calculus to remedial math. He&amp;#39;d say &amp;#34;those kids deserve me too.&amp;#34; Yeah,
he was arrogant, but he really was a master teacher. He was also great
if he liked you but a horror if he didn&amp;#39;t. Fortunately, he liked me.&lt;/p&gt;
&lt;p&gt;
He said that the one thing you have to keep asking yourself when you
observe a class is &amp;#34;is learning happening.&amp;#34; It&amp;#39;s that simple. Then,
it&amp;#39;s up to you as the observer to figure out where, how and why and
what you can suggest to make it better (while observing the cardinal
rule of not fixing the lesson). This makes all the sense in the world
to an experienced educator and it allows them to hone in on an
observee&amp;#39;s strenghts and weaknesses while also adjusting for the class
and circumstances.&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;ve got good observers and trust them, it works and works very
well.&lt;/p&gt;
&lt;p&gt;
What don&amp;#39;t work? Detailed rubrics by non teachers.&lt;/p&gt;
&lt;p&gt;
Unfortunately, right now, this is just another idiotic idea that
teachers are forced to deal with and just another thing driving
teachers away from the profession.&lt;/p&gt;
&lt;p&gt;
Will the powers that be ever learn? Probably not so for now it&amp;#39;s up to
good supervisors to shield their teachers from the nonsense and I
hope, in my capacity, when I&amp;#39;m able I can do the same.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>When is remote better</title>
      <link>https://cestlaz.github.io/post/whats-better-remote/</link>
      <pubDate>Fri, 28 Jan 2022 08:13:17 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/whats-better-remote/</guid>
      <description>
&lt;p&gt;
With my first classes of the semester coming up on Monday I thought
I&amp;#39;d write a bit about what worked better remote than in person. When I
say better I mean specifically, worked better for me given my
situation. I think they worked better for the class but I can&amp;#39;t say
with any certainty given the length of the educational feedback loop
and other factors.&lt;/p&gt;
&lt;p&gt;
My in person teaching situation is as follows. Last semester I taught
2 in person classes (plus one remote). Both were in computer
labs. Minimal distance between the kids. Everyone had to have set
assigned seats and masks had to be on at all times. As the instructor,
I was allowed to remove my mask but I never would.&lt;/p&gt;
&lt;p&gt;
So, here we go.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
feeling safe
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Big one. Remote felt safer. It doesn&amp;#39;t really matter if it was safer
or not. This is a case of perception being reality. Since I felt less
safe - particularly at the start of the year before the students were
vaccinated, I can say for sure that I wasn&amp;#39;t as effective. If the
students didn&amp;#39;t feel safe I&amp;#39;m sure their learning also took a hit.&lt;/p&gt;
&lt;p&gt;
For all the dings on remote teaching, we all felt safe.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
participation
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
In my personal opinion, my classes last semester went from what I hope
were good classes to not so good lectures. Since students wore masks
and don&amp;#39;t project their voices in any case, student participation was
really tough. It would turn into asking students to repeat their
answers multiple times and to project louder and louder. It didn&amp;#39;t
help that windows had to be open and we&amp;#39;re in the heard of NYC with
all the associated street noise.&lt;/p&gt;
&lt;p&gt;
Now, remote participation is no great shakes. It&amp;#39;s really easy for a
student to just tune out but at least it was possible. Students could
be called on or could volunteer and between the Zoom and our Zulip
chat, there were far more opportunities for students to be involved.&lt;/p&gt;
&lt;p&gt;
Now, once we&amp;#39;re safe and mask free, in class will probably be better
than remote for this but for now, I can&amp;#39;t say that it is.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Group work
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Group work in person was pretty much impossible. Even though there was
little distancing between the students, they had to stay in their
assigned locations. On Zoom we had breakout rooms and on our Zulip,
group chats. In normal times, in person would blow away remote but
something reasonable on zoom and zulip was far better than nothing in
person.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
Working with individuals / small groups
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
I also couldn&amp;#39;t really work well with individual students (or small
groups if we were able to set them up). Online I could do a breakout
visit or an individual or group chat. Again, something being better
than nothing. The one place where in person was better is that, while
it was limited, I could eaves drop on the kids - look over while they
worked. It was limited because I didn&amp;#39;t want to get too close and also
for the reasons cited above but it was something. Can&amp;#39;t do that with
Zoom. Interestingly enough, Big Blue Button - an opensource Zoomalike
does have an eavesdrop on breakout rooms feature as it&amp;#39;s made for
teachers but last I checked the overall platform was not quite ready
for prime time.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
Polls
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Another big win for remote was the use of the Zulip chat. Emoji polls
replicate the use of a clicker but with more power and flexibility and
less overhead.&lt;/p&gt;
&lt;p&gt;
You can also give a question and have them all type a response but
not hit  the &lt;strong&gt;enter&lt;/strong&gt; key. The can then all post at once. You can do
similar things with hand signals in class but this is much more
flexible and robust. Big win.
.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-6&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
Discussion of student work
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-6&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Finally, the chat platform gave us the ability to discuss more
student&amp;#39;s work. Typically, in class you can only look at one or two
student solutions for a given problem but using the chat, you can
stretch out the discussion. A typical strategy is to have  everyone
post their initial answer/response/whatever and then over the course
of time have each student comment on at least two other student
posts. Yes, this has it&amp;#39;s kinks but it&amp;#39;s a nice way to get more
students to look at more other student&amp;#39;s work.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-7&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
Takeaways
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-7&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
At the beginning of last semester, I felt that we should have at least
started online - particularly with the students potentially
unvaccinated. Looking back, I think it would have been better
overall.&lt;/p&gt;
&lt;p&gt;
Truthfully, the ideal would have been to do remote until students were
vaccinated then allow professors to mix and match as best suits their
classes.&lt;/p&gt;
&lt;p&gt;
If we ever get past this and back to regular old school in person
classes, sure, that beats remote for instruction overall but remote
does have it&amp;#39;s moments. On top of that, good remote can beat crippled
in person and sometimes there are other good reasons for a remote
option such as why I want my teacher prep program to remain online.&lt;/p&gt;
&lt;p&gt;
So, there it is. Where I think remote teaching outshone in person for
me over the last year. As a college istructor I have more flexibility
than a K12 teacher so can mix in remote practices that I feel work
better. I&amp;#39;m hoping that over time those that set the K12 structure
would make it similarly possible at that level.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Trends In Professional Development in CS - it&#39;s not all good</title>
      <link>https://cestlaz.github.io/post/trends-in-pd/</link>
      <pubDate>Tue, 25 Jan 2022 17:46:43 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/trends-in-pd/</guid>
      <description>&lt;p&gt;
My friend &lt;a href=&#34;https://twitter.com/mrtomocon/status/1486012499304587269&#34;&gt;Tom&lt;/a&gt; tweeted earlier which led me to &lt;a href=&#34;https://csforall.medium.com/virtual-professional-development-is-here-to-stay-d2a3888f2d1a &#34;&gt;this piece&lt;/a&gt; on trends in
CS professional development (PD). Tom&amp;#39;s tweet was talking about virtual vs
in person PD so I initially thought I&amp;#39;d write about that and PD in
general but the article actually led to some deeper issues with PD.&lt;/p&gt;
&lt;p&gt;
The article talks about PD being focussed on specific units or
modules, narrowing to more popular offerings and also becoming less
localized. This led me to think about a real issue with CS PD that a
few of us have been harping on for years. The &lt;strong&gt;VAST&lt;/strong&gt; majority of CS PD
is provided for by &amp;#34;content providers&amp;#34; - people with a product to
sell. That might be a curriculum, a technical platform, or both but
something to sell. It&amp;#39;s not just CS knowledge and how to teach
it. I include organizations like code.org in this bucket because while
they&amp;#39;re not selling in the same sense as a textbook publish, they are
selling or pitching their curriculum and platform.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s easy to see how we got here. There are so few people out there
that actually know both the CS content and how to teach it that there
was a void so EdTech and a few others stepped in. The truth is, most
of the big PD providers also don&amp;#39;t have both deep CS and deep CS
pedagogical knowledge. What they do have is influence. This isn&amp;#39;t to
say that they&amp;#39;re all bad. There are some providers whom I like very
much and I think are doing a great job but that&amp;#39;s not the point here.&lt;/p&gt;
&lt;p&gt;
So, we&amp;#39;re left with a system where the majority of CS teachers have
very little CS or CS teaching experience and the providers are pushing
very specific training tied closely with their product, course, or
curriculum. I know I&amp;#39;ll get some hate for this but it&amp;#39;s just where we
are right now.&lt;/p&gt;
&lt;p&gt;
This might change over time as preservice teaching programs start to
emerge but I fear that many of them will just continue the trend of
pushing canned curricula. I&amp;#39;ve already seen proposed and existing
programs that essentially have a teacher candidate go through a
version of APCS-A, APCS-P, a computers in society class and something else
similar and voila, CS teacher.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s contrast all of this with math PD or at least the math PD that I
was subject to for most of my high school teaching career. Most
department meetings I attended always had a PD piece and that was
usually something interesting, or at least supposed to be interesting
presented by a colleague. It might be one of their practices or it
might be something they got from a conference or an outside PD. We&amp;#39;d
also have larger PD sessions a couple of times a year. Topics would be
things like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How to use the graphing calculator to explore functions&lt;/li&gt;
&lt;li&gt;History and math&lt;/li&gt;
&lt;li&gt;Math in your student&amp;#39;s worlds&lt;/li&gt;
&lt;li&gt;Exploring math competition problems&lt;/li&gt;
&lt;li&gt;An introduction to some advanced or new math topic&lt;/li&gt;
&lt;li&gt;Motivating a lesson on something or other&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Few of these were tied to a specific course and none were tied to a
specific implementation or curriculum. There might be a special
section on something like Geometers Sketchpad or a vendor might run a
session but those were in the minority.&lt;/p&gt;
&lt;p&gt;
It was mostly about math and how to teach math and most offerings were
by teachers not content providers.&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t know what math education PD is like now but what a word of
difference.&lt;/p&gt;
&lt;p&gt;
Will CS PD get better, and I do think locally, teacher  generated PD
is better? I don&amp;#39;t know. I&amp;#39;ve been told that the sessions I ran
pre-covid were worthwhile but I don&amp;#39;t see those happening again until
we can do in person events and in any event that&amp;#39;s small scale.&lt;/p&gt;
&lt;p&gt;
All this said and I haven&amp;#39;t touched on what led me to the article to
begin with - the point that PD is going much more virtual. Is this a
good thing? Sometimes but it&amp;#39;s also, in my opinion a confirmation on
the sad state of PD in general.&lt;/p&gt;
&lt;p&gt;
The idea behind PD is ongoing professional growth but the truth is,
teachers don&amp;#39;t really have time for PD during the school year so what
they do is mostly mandated. In my own experience and in talking to
many teachers in many subject areas the majority of PD forced upon
teachers is garbage. Even if it is good, too often it&amp;#39;s not relevant
to the teachers day to day and by the time it matters, if it ever
does, it&amp;#39;s long forgotten. Unfortunately, many teachers are required
to accumulate PD hours. In NY they&amp;#39;re called CTLE hours (Continuing
Teacher and Leader Education).&lt;/p&gt;
&lt;p&gt;
Since teachers are being forced to accumulate these hours and they
don&amp;#39;t find them valuable they&amp;#39;re taking the path of least
resistance. That frequently means online offerings.&lt;/p&gt;
&lt;p&gt;
None of this is to say that online PD is bad or always bad. It can be
very effective for some things. Others really should be done in
person. I&amp;#39;m just saying that it&amp;#39;s not a surprise that we&amp;#39;re here and
that we have to look deeper to figure out how we got here and why.&lt;/p&gt;
&lt;p&gt;
Where do we go from here? I have no idea. I&amp;#39;ve long resigned myself to
try to just worry about my corner of the world. I&amp;#39;ll make the best
offerings I can be they in my pre/in service courses or in PD wether
they&amp;#39;re in person or online. I think that those that come will find
value so those are the ones I&amp;#39;ll worry about.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Do you need to know assembly to be a computer scientist?</title>
      <link>https://cestlaz.github.io/post/assembly/</link>
      <pubDate>Wed, 19 Jan 2022 06:47:18 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/assembly/</guid>
      <description>&lt;p&gt;
Another recent discussion online asked &amp;#34;do you need to know assembly
language to be a computer scientist?&amp;#34;&lt;/p&gt;
&lt;p&gt;
Sides quickly formed. On one side, it was a strict requirement. Some
going so far as saying you &lt;strong&gt;had&lt;/strong&gt; to start with it or at worst a
language like C. On the other side you had people claiming that it&amp;#39;s
wholly unnecessary for most CS graduates like many of the classes we
require of a CS major (I&amp;#39;m looking at you Calc II and beyond).&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t dispute that many people with CS degrees have great tech
careers and never program in assembly. Further, the idea that a low
level assembly programmer describes what a &amp;#34;computer scientist looks
like&amp;#34; or &amp;#34;should look like&amp;#34; is pretty off base.&lt;/p&gt;
&lt;p&gt;
On the other hand, I&amp;#39;d argue that a well educated computer scientist
should have some knowledge of low level concepts which can probably
best be explored through some exposure to assembly language.&lt;/p&gt;
&lt;p&gt;
To start, what is a computer scientist? As a field we still haven&amp;#39;t
worked that one out. Certainly, people employed as professors in
computer science departments are pretty much, by definition, computer
scientists but that&amp;#39;s the minority of CS majors.&lt;/p&gt;
&lt;p&gt;
To me, and this isn&amp;#39;t really a great formal definition, a person who
employs the creative and problem solving techniques associated with
computer science in their day to day can certainly call themselves a
computer scientist.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s a wishy washy definition, I know but to me, it works. Someone
employed as a software engineer &lt;strong&gt;can&lt;/strong&gt; be a computer scientist or they
might not be. It depends on their job and how they approach it. Say
said SE is given screen descriptions, layouts and what to do when
events happen and they write code to implement this, they&amp;#39;re not being
a computer scientist. Likewise, if they implement an algorithm
specifically given to them for a task. On the other hand, if the same
person designs the interface making creative decisions involving
accessibility and usability or solves a problem using or designing an
algorithm then implementing one, then they would be, in my view acting
as a computer scientist.&lt;/p&gt;
&lt;p&gt;
Of course, in the general sense a SE could be a real software
engineer, software architect, or many more things as well.&lt;/p&gt;
&lt;p&gt;
So, does a computer scientist &lt;strong&gt;need&lt;/strong&gt; to actively know assembly?
No. That said, do they benefit from knowing something about it? I&amp;#39;d
say yes.&lt;/p&gt;
&lt;p&gt;
Years ago, I was watching a special with Itzhak Perlman, arguably the
greatest violinist of a generation and one of my favorites. He was
talking to and playing with a bunch of &lt;a href=&#34;https://en.wikipedia.org/wiki/Klezmer&#34;&gt;klezmer&lt;/a&gt; musucians. Or rather, I
should say trying to play with. Klezmer is something of a Jewish jazz
with a lot of improvisation. Perlman understood this, could
meaningfully converse about it with the other musucians but he had the
hardest time trying to keep up with them. Nobody could seriously say
that Izhak Perlman wasn&amp;#39;t and isn&amp;#39;t a brilliant musician and artist
but he really couldn&amp;#39;t play improvisational jazz. His training and art
are just in a different corner of the music world. That said, he was
certainly well versed in it. He knew jazz even though he didn&amp;#39;t
perform it.&lt;/p&gt;
&lt;p&gt;
I also saw this at a Bobby Mcferrin concert. He was performing with a
small string orchestra. I think maybe it was Gidon Kremer&amp;#39;s Kremerate
Baltica but I don&amp;#39;t remember. At one point he was calling out the
individual orchestra members to do some improv. It did not go
well. Again, these were all clearly master artists and they certainly
knew and were comfortable with Jazz, just not performing it on the
fly.&lt;/p&gt;
&lt;p&gt;
In case you really want to see what I&amp;#39;m talking about, I&amp;#39;ll give one
more example:&lt;/p&gt;


&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/6mRT61rRSGc?t=37&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/iframe&gt;
&lt;p&gt;
Having some knowledge of assembly, or more specifically, how low level
things work is what I call a &amp;#34;latin&amp;#34; of CS. Understanding things like
memory or how a processor works help an individual understand buffer
overflows or why data types matter, why floating point calculations
are innacurate or why a hash table has to be sparse. They may never
program in assembly but some knowledge will make them a stronger
computer scientist. I would say the same for my other CS latin -
theory. They might not use it day to day but it will help shape their
decisions and make them a stronger software engineer or whatever.&lt;/p&gt;
&lt;p&gt;
So, can you be a gainfully employed tech person and never have seen
anything low level? Of course. Can you do computer science stuff and
say the same? Sure. But a well educated, well rounded computer
scientist will have had some exposure to low level concepts and have
some base level understanding.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pension Consultations</title>
      <link>https://cestlaz.github.io/post/pension/</link>
      <pubDate>Mon, 17 Jan 2022 17:41:42 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/pension/</guid>
      <description>&lt;p&gt;
Devorah and I just got off a Zoom pension consultation. Very
enlightening.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m 54 so regardless, can&amp;#39;t retire for another year but Devorah hit 55
last November and the DOE can really kill ones spirit and grind you down.&lt;/p&gt;
&lt;p&gt;
Overall I&amp;#39;ve been pretty happy at Hunter but I&amp;#39;ve written before about
the fact that I&amp;#39;ve been feeling some burn out and have been basically
doing 2+ full time jobs myself at Hunter for the past few years and
that&amp;#39;s just not sustainable.&lt;/p&gt;
&lt;p&gt;
Not saying I know what I&amp;#39;m going to do  but it&amp;#39;s important to know
your options.&lt;/p&gt;
&lt;p&gt;
I wasn&amp;#39;t sure what our retirement benefits would look like but when I
came in to teaching, looking at the older tier 1 teachers, I felt that
back then there was something of a societal pact, at least in NYC. As
a teacher back then, you weren&amp;#39;t going to get rich. In good times,
you&amp;#39;d do okay - not great but okay. On the other hand, in bad times,
you wouldn&amp;#39;t do terrible. You&amp;#39;d be able to have a decent home and
while you couldn&amp;#39;t jet set you&amp;#39;d be able to vacation reasonably and at
the end of it all, you&amp;#39;d have a comfortable retirement. Again, you
wouldn&amp;#39;t be rich, but you wouldn&amp;#39;t have to worry about making ends
meet either.&lt;/p&gt;
&lt;p&gt;
Over the course of my career, I saw that pact erode, even in NY. Young
teachers don&amp;#39;t earn enough for the housing market and the workload and
work pressures have just exploded. For the newest teachers, the
retirement end of the deal has also gotten worse.&lt;/p&gt;
&lt;p&gt;
So, what does it look like for us after putting in and paying in for
30 years?&lt;/p&gt;
&lt;p&gt;
With 30 years in, it turns out that pension will net me just a few
hundred dollars less than my current net. It&amp;#39;s much closer than I
thought it would be. Devorah doesn&amp;#39;t do quite as well. Her difference
is greater but that&amp;#39;s because she hasn&amp;#39;t crossed the 30 year barrier
yet. If she stays one more year, she will.&lt;/p&gt;
&lt;p&gt;
Add to that a substantial TDA and we&amp;#39;re actually in really good
retirement shape.&lt;/p&gt;
&lt;p&gt;
A lot of older teachers say they finally &amp;#34;had&amp;#34; to retire because based
on tax benefits and other factors, they were actually losing money by
not retiring.&lt;/p&gt;
&lt;p&gt;
Based on the differences I mentioned above we&amp;#39;re not there yet but
when you factor our housing, we might be, or if not it&amp;#39;s really
close. We currently live in what&amp;#39;s known as a &amp;#34;limited equity coop.&amp;#34;
It&amp;#39;s a coop but it receives local and state tax benefits. In return,
there are earning caps on the residents. We currently earn well over
the cap so pay a significant surcharge on our monthly maintenance.&lt;/p&gt;
&lt;p&gt;
When we retire, our lower incomes will result in a much lower
surcharge or maybe it will remove the surcharge entirely - we&amp;#39;re
working on figuring that out.&lt;/p&gt;
&lt;p&gt;
Depending on how that plays out we might actually be losing money if
we don&amp;#39;t retire.&lt;/p&gt;
&lt;p&gt;
We&amp;#39;ll have to see.&lt;/p&gt;
&lt;p&gt;
As I said at the top. I&amp;#39;m basically happy at Hunter and I think I&amp;#39;ve
accomplished a lot so I&amp;#39;m not saying I&amp;#39;m out the door as soon as I can
walk. We&amp;#39;ve got to lower my workload but they&amp;#39;ve known that for a
while so hopefully are working to solve the problem. Devorah and I
also have to figure out what we want to do in our next phase. I do
know that regardless, I think I&amp;#39;ve still got something to give in the
CS Ed space.&lt;/p&gt;
&lt;p&gt;
For any young teachers out there - make sure to max out on that
TDA. It seems like nothing at first but when you look back after 20 or
30 years it&amp;#39;ll surprise you - that + the defined pension are what
allow you to have a few years of leisure at the end of a life of
service. And don&amp;#39;t let anyone tell you that you don&amp;#39;t deserve it or
that it&amp;#39;s an entitlement. You&amp;#39;ve paid into it for your whole career
and are just getting back what you&amp;#39;ve earned.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What is a Syllabus and why does it matter?</title>
      <link>https://cestlaz.github.io/post/whats-a-syllabus/</link>
      <pubDate>Fri, 14 Jan 2022 07:14:35 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/whats-a-syllabus/</guid>
      <description>&lt;p&gt;
Over in the Facebook CS Ed groups there was a discussion of the
forthcoming code.org APCS-A curriculum. As far as I can tell, the
curriculum isn&amp;#39;t actually available yet so I can&amp;#39;t really comment on it
but the discussion started with a concern about some of the
announcement. It made me think of what a curriculum was when I started
teaching, what it is now, and the ramifications of the change.&lt;/p&gt;
&lt;p&gt;
Back when I started, I might get a math curriculum, a section of which
might have looked like this:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Day&lt;/th&gt;
&lt;th&gt;Topic&lt;/th&gt;
&lt;th&gt;Chapters&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;5,6&lt;/td&gt;
&lt;td&gt;solving simple linear equations&lt;/td&gt;
&lt;td&gt;3.1 - 3.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;solving more complex linear equations&lt;/td&gt;
&lt;td&gt;3.5, 3.6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8-10&lt;/td&gt;
&lt;td&gt;graphing linear equations&lt;/td&gt;
&lt;td&gt;4.1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
etc.&lt;/p&gt;
&lt;p&gt;
That was it. As a teacher, you knew the topic. If you had to get an
idea as to the depth of which to cover you looked at the text and
other resources you had in school and consulted with your
colleagues. You knew yourself, your school and your students and you designed
lessons to suit.&lt;/p&gt;
&lt;p&gt;
This is a far cry from what you&amp;#39;ll see today. Going back to the
forthcoming code.org apcs-a curriculum.  &lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the blurb that code.org provides:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CSA curricula have traditionally been focused on the building blocks
required to design solutions to problems through programming. Creating
this new curriculum with equity in mind means reimagining the
structure and pedagogy to excite and inspire students from
underrepresented racial and ethnic groups and young women while
teaching the technical building blocks and preparing students for the
AP® exam. Code.org’s CSA curriculum:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Incorporates culturally responsive and equitable teaching strategies
and frameworks by considering cultural references and learning styles
throughout the curriculum — from the vocabulary, to the visuals, to
the sequence of concepts taught.&lt;/li&gt;
&lt;li&gt;Acknowledges diversity of experiences and interests. Students
investigate real-world problems during class activities and make
connections to their own work. Projects are carefully designed to be
instructive yet open-ended, enabling students to demonstrate mastery
of concepts and engage in their passions without making assumptions
about their cultural background or life experiences.&lt;/li&gt;
&lt;li&gt;Brings to life a “Software Engineering for All” narrative. This
narrative helps students envision themselves as software engineers,
and the curriculum uses videos featuring presenters from different
backgrounds who work in technology to help students visualize
opportunities for their own futures.&lt;/li&gt;
&lt;li&gt;Helps students develop and model valuable, real-world career
skills. In addition to skills like tracing code segments and
documenting code, Code.org’s approach to CSA incorporates
collaboration and career skills that go beyond the AP® CSA course
requirements. For example, our curriculum includes a student-friendly
code review tool, which is a common quality assurance practice in the
technology industry.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There&amp;#39;s nothing inherently wrong with any of this but it is worth
noting that the APCS-A class is indeed a course concerned with &amp;#34;building blocks
required to design solutions to problems through programming.&amp;#34; It is
based on a college CS1 class which is all about programming to solve
problems. Like it or not, that&amp;#39;s the course.&lt;/p&gt;
&lt;p&gt;
Now, having a culturally responsive course etc. etc. is all good and I
guess that since APCS-A is usually implemented a full year course to
cover a half year of college material there should, in theory, be room
for all the additions but that&amp;#39;s not really here nor there.&lt;/p&gt;
&lt;p&gt;
The thing is, APCS-A is supposed to be about programming. A well
taught APCS-A will be culturally responsive etc. but that&amp;#39;s the
implementation. Unless something changed, that&amp;#39;s not actually in the
course as defined by the college board or the college classes on which
it&amp;#39;s based.&lt;/p&gt;
&lt;p&gt;
This says to me that when code.org publishes its curriculum, it will
most likely resemble the products pushed by most modern curriculum
providers - really not just a curriculum but a collection of very
detailed units and lessons.&lt;/p&gt;
&lt;p&gt;
Now, I do think that some of the things mentioned in the
code.org blurb like collaboration, software engineering, and other
topics like ethical ramifications &lt;strong&gt;should&lt;/strong&gt; be in curricula but even
so, the exact lessons should be teacher designed and tuned to their
school and students. &lt;/p&gt;
&lt;p&gt;
Again, nothing wrong with any of this. It can be a great and valuable resource,
particularly for an inexperienced teacher.&lt;/p&gt;
&lt;p&gt;
But then, there is something wrong overall and it&amp;#39;s with the direction
those with influence are taking as a profession. &lt;/p&gt;
&lt;p&gt;
Teachers are less and less expected as much to know their subjects, their
students, and how to teach but rather to follow the script. This
approach might get those students past the standardized exam but in
the long run it&amp;#39;s not giving students what they need nor deserve.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve seen this every year in my undergraduate CS classes. Since APCS
Principles was launched many of my students have come in having taken
the classed and &amp;#34;passed&amp;#34; the exam. Truth be told, the majority of them
come in basically knowing nothing. This wouldn&amp;#39;t be a problem if they
didn&amp;#39;t come in thinking they knew quite a bit.  You can contrast that
with the students that come in having taken APCS-A. These students, by
and large, do indeed have a reasonably solid introduction to
programming under their belts. Further investigation usually reveals
what &amp;#34;curriculum&amp;#34; they learned under and the CS background of the
teacher.&lt;/p&gt;
&lt;p&gt;
Some will argue that we need the crutch of the scripted lesson in
order to get started. Fair enough. I don&amp;#39;t disagree with this basic
premise but the truth is that history seems to indicate that we&amp;#39;re not
going to get beyond this. My favorite example is the old Cisco
networking class. Some teachers knew legit networks and decided to
teach the class - that was great. Some didn&amp;#39;t and just had their
students use the Cisco provided computer based modules which, in my
opinion, weren&amp;#39;t so great. Of those that didn&amp;#39;t start with a
networking background, just about all I&amp;#39;ve met never moved beyond
where they started in networking knowledge.&lt;/p&gt;
&lt;p&gt;
I fear we&amp;#39;re already seeing that in CS. School supervisors don&amp;#39;t know
any better so they see that they can check off the computer science
box. Many teachers probably don&amp;#39;t know better because their short term
training is focusing on how easy CS is and how you don&amp;#39;t have to learn
anything to teach it rather than the truth - it&amp;#39;s just like anything
else, it takes time and effort to really master. &lt;/p&gt;
&lt;p&gt;
I already know that my view isn&amp;#39;t the popular one but I&amp;#39;ll say it over
and over until I retire - CS teachers really do need to know CS and
providers that provide short form &amp;#34;training&amp;#34; and scripted content,
unless they push with even more vigor, the next steps, are ultimately
going leave us in no better shape than we started. Kids in well to do
schools with administrations that can afford to bring in knowledgeable
experts and the gap will widen with the poorest getting the low
end scripted curricula.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How Will Online Influence Teaching</title>
      <link>https://cestlaz.github.io/post/how-will-online-influence-teaching/</link>
      <pubDate>Mon, 03 Jan 2022 08:53:28 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/how-will-online-influence-teaching/</guid>
      <description>&lt;p&gt;
I always enjoy Fred Wilson&amp;#39;s predictions for the new year over on his
  &lt;a href=&#34;https://avc.com&#34;&gt;blog&lt;/a&gt; and &lt;a href=&#34;https://avc.com/2022/01/what-is-going-to-happen-in-2022&#34;&gt;this year&lt;/a&gt;  was no exception.&lt;/p&gt;
&lt;p&gt;
I was inspired to think a bit on his education prediction:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;K12 systems around the US (and around the world) faced with teacher
shortages and desperate to erase several years of learning shortfalls,
will increasingly adopt online learning services in the school
building in lieu of and in addition to in-class learning.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Fred&amp;#39;s a VERY sharp and perceptive guy and a friend and I think
he&amp;#39;s correct on the adoption of online learning but I thought a couple
of points merited a deeper dive from a guy who&amp;#39;s spent a lifetime in
the trenches.&lt;/p&gt;
&lt;p&gt;
The first thing I think worth talking about, and this isn&amp;#39;t really
about the adoption of online learning are learning shortfalls They
don&amp;#39;t exist. Learning shortfalls due to Covid, also described as
learning loss is a made up concept. Usually pushed by politicians.&lt;/p&gt;
&lt;p&gt;
The claim is that due to COVID students learned less than what they
were supposed to and we have to make that up. Less than what? Less
than who? Everyone in the world was hit with this.&lt;/p&gt;
&lt;p&gt;
This comes back to our countries love affair with high stakes
testing - every student MUST finish Algebra by 8th grade, or MUST have
a certain reading proficiency by 5th grade (whatever that means).&lt;/p&gt;
&lt;p&gt;
On the other hand, we&amp;#39;re told that students work at their own
pace.&lt;/p&gt;
&lt;p&gt;
Which is it?&lt;/p&gt;
&lt;p&gt;
The truth is that a large amount of specific topics we cover in K12
could be eliminated and we&amp;#39;d be none the worse for wear. In Algebra 2
/ Trig there&amp;#39;s around a month of Circle Geometry. It seems randomly
placed and really doesn&amp;#39;t introduce any new meaningful concepts. I
suspect that it originally was placed in the course when Alg2/Trig was
the terminal HS math course and people through &amp;#34;well, kids should see
this sometime&amp;#34; but now this is no longer the case. We could easily
knock it out.&lt;/p&gt;
&lt;p&gt;
Likewise, look at how Geometry evolved. Even though it&amp;#39;s supposed to
be a course about proof many schools only pay lip service to teaching
it. This is a result of high stakes testing. Teachers know that
teaching proof is HARD and learning it likewise. They also know that
the students need to pass the regents to graduate and that both
student and teacher will be judged on passing the exam. Further, they
know that the best route to get the student passing is to barely deal
with proof and focus on the rest of the class which is easier to teach
and learn and is worth the lions share of the points on the regents.&lt;/p&gt;
&lt;p&gt;
In English we can read one less Shakespeare and I&amp;#39;m sure we can go
down the list we&amp;#39;ll find that a lot of these things that kids didn&amp;#39;t
learn are really just arbitrary.&lt;/p&gt;
&lt;p&gt;
The other truth is that indeed people learn at different rates and
if we really cared about education we&amp;#39;d admit and deal with this
rather than keeping our lock step testing based system.&lt;/p&gt;
&lt;p&gt;
So, learning shortfalls are manufactured and could easily be
dismissed.&lt;/p&gt;
&lt;p&gt;
With that aside, we can look at online learning.&lt;/p&gt;
&lt;p&gt;
Just to get started - I think that online learning has a place. It can
be at times a great supplement to in person learning and at times it
can be the superior option. I&amp;#39;ll write more about that soon. Probably
not for another week or so since Devorah and I are hoping to get away
to San Diego for a little vacation later this week. My concern comes
from me being much more the pessimist than Fred.&lt;/p&gt;
&lt;p&gt;
Well, I used to be more of an optimist but working in the system for
30 years has a way of beating you down. Now I&amp;#39;m much more of a &amp;#34;hope
for the best, expect the worst&amp;#34; kind of guy.&lt;/p&gt;
&lt;p&gt;
My first fear is that online learning will be used just as Fred
mentioned, due to teacher shortages. I think this is likely to happen
and it&amp;#39;s not going to be pretty. Better to actually address teacher
shortages by, I don&amp;#39;t know, paying teachers fairly and having them
work in safe environments with reasonable work loads.&lt;/p&gt;
&lt;p&gt;
Instead, I see a new wave of technology based solutions like online
charters which have proven to be ripe for scandal or programs like the
technology based &amp;#34;credit recovery&amp;#34; courses that came online under
Bloomberg. These were self paced online courses where students clicked
through repeatedly. Great for graduation rates. Horrible for actual
learning.&lt;/p&gt;
&lt;p&gt;
We&amp;#39;re also going to see technology being used not to make teachers
more effective but either to add to their workload and/or class sizes.
A small and maybe frivolous example is when politicians were talking
about eliminating snow days - they&amp;#39;ll just teach online. Now, since
you don&amp;#39;t know a snow day is coming this leaves a teacher to scramble
at the last minute to come up with something and given how much time
can go into prep, this is a BIG add to the teachers week. As a
teacher, I loved snow days not so much as a &amp;#34;party day&amp;#34; but rather as
a day where I got the gift of a day back to catch up on planning,
grading, and paperwork. Besides, I think that rare surprise day off is
actually healthy for kids.&lt;/p&gt;
&lt;p&gt;
A bigger example is that I&amp;#39;m thinking that we&amp;#39;ll see schools expecting
teachers be available to students and parents 24x7. We already see
this starting.&lt;/p&gt;
&lt;p&gt;
A third would be instead of a small class where teachers and students
interact using technology to balloon up the class size. So much of
teaching, particularly in K12 is about relationships and interactions
and you just don&amp;#39;t get that when you decide to do a class on computers
and drive up the enrollment.&lt;/p&gt;
&lt;p&gt;
You&amp;#39;ll also see technology that seem to help teachers but even those
have a downside. Prime example - autograders. They&amp;#39;re great for
providing students with instant feedback and for grading &amp;#34;short
answer&amp;#34; or &amp;#34;right or wrong&amp;#34; questions but when a teacher grades a
teacher sees a students work and gains insights into the student. If
I&amp;#39;m not grading projects, I&amp;#39;m losing that insight.&lt;/p&gt;
&lt;p&gt;
Actually, a great example is looking at student projects in the old
world and in the new one.&lt;/p&gt;
&lt;p&gt;
In the old world, a project is assigned in class. Maybe we have a lab
day or two, then some work on their own time. More lab days, then
finally the project is due and the teacher grades. With all that in
class time, the teacher is observing and interacting and getting to
know the students and their work. To be honest, by the time I grade a
project, I already know most of the story but reading over the code
and running the program on my own is the final piece.&lt;/p&gt;
&lt;p&gt;
The new way? The project is assigned. Work is done outside of hte
teacher&amp;#39;s view. The teacher only sees the students work if they ask
for help outside of class hours (since you can&amp;#39;t use that important
synchronous class time for that with 100+ students) and then it&amp;#39;s
autograded.&lt;/p&gt;
&lt;p&gt;
The old way takes more time and more work but that&amp;#39;s teaching and
learning. The new way will work great for the autodidacts and a number
of kids will flow through the machine but here technology which would
seem like a win, really isn&amp;#39;t.&lt;/p&gt;
&lt;p&gt;
This is a lot of &amp;#34;expect the worst&amp;#34; and I do want to be clear - I love
tech and think that tech can be a great boon to education if done
right. I&amp;#39;m just really wary of past experience being a predictor of
how things will go in the future. I think Smart, well meaning people
are going to continue to come up with wonderful tools that could do
worlds of good for students and teachers but I have little confidence
in the decision makers deploying them in ways that will truly benefit
students.&lt;/p&gt;
&lt;p&gt;
I hope I&amp;#39;m wrong and none of this pessimism will stop me from working
with technologists, ed tech people, and playing with the new toys as
they become available. I just also want to be prepared for the worst
while I&amp;#39;m hoping for  the best.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Exit 2021</title>
      <link>https://cestlaz.github.io/post/exit-2021/</link>
      <pubDate>Sat, 01 Jan 2022 09:04:37 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/exit-2021/</guid>
      <description>&lt;p&gt;
So, 2021&amp;#39;s gone and 2022 just starting.&lt;/p&gt;
&lt;p&gt;
In a lot of ways, I don&amp;#39;t really see this as a new year. Maybe after I
retire but for me and I&amp;#39;m guessing other working teachers the year
really starts in early September.&lt;/p&gt;
&lt;p&gt;
Still, the calendar changed over so even if it feels like midyear to
me, it&amp;#39;s still worth a quick look back.&lt;/p&gt;
&lt;p&gt;
Obviously, a trying year for all of us so I won&amp;#39;t dwell to much on
that. Professionally, I think the highlight came in early June when
our first set of Advanced Certificate students filed and received
their state certifications as CS teachers. That was big. I had the
undergraduate CS Daedalus program running long enough to have grads
and a bit of a history but taking working teachers through my program
and to state certification let me check off another mission completed
box. It felt good, particularly to be able to do it with long time
friends and collaborators like JonAlf and Topher.&lt;/p&gt;
&lt;p&gt;
The lowlight professionally was probably my in person teaching. Don&amp;#39;t
get me wrong, teaching is still the highlight of what I do but I don&amp;#39;t
think I was up to par this past semester. Truth be told, I think I did
a better job fully remote in the prior year. There&amp;#39;s more to say about
that but I think it&amp;#39;s worth its own post in a few days. TL;DR -
teaching in masks and with fixed seating turned good lessons into bad
lectures. It also sucks when you overall don&amp;#39;t feel super comfortable
in the environment so it basically becomes, you go to class, you
teach, you leave. &lt;/p&gt;
&lt;p&gt;
There was a teaching highlight, however which was teaching my Ethics
course. That was fun and since it was remote and with the teachers I
worked with over the summer, I think it went pretty well overall.&lt;/p&gt;
&lt;p&gt;
On the personal front, I read more, programmed less, and continued to
try to learn to paint. &lt;/p&gt;
&lt;p&gt;
Overall, I can&amp;#39;t say much good about last year and I think a lot of
people feel that way so I won&amp;#39;t dwell on it.&lt;/p&gt;
&lt;p&gt;
As to this coming year and the rest of this school year? I think I&amp;#39;m
looking forward to the fact that in late May we&amp;#39;ll be graduating our
first couple of CS Education Masters students. That&amp;#39;s the last box I
feel I have to check to be able to say mission accomplished on what I
set out to do at Hunter and then some. Other than that it should
(hopefully) be business as usual and that&amp;#39;s not a horrible thing. I&amp;#39;m
unsure if things will be better in class before the Fall given omicron
but we&amp;#39;ll see.&lt;/p&gt;
&lt;p&gt;
Devorah and I are planning on going away late next week so that should
recharge the batteries to get ready for the Spring semester. Heading
off to San Diego - never been so if you&amp;#39;ve got some pointers on what
to do that might be off the beaten path, drop me a line.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Transparent Origami - Advent 2021 Day 13</title>
      <link>https://cestlaz.github.io/post/advent-2021-day13/</link>
      <pubDate>Mon, 13 Dec 2021 13:28:28 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/advent-2021-day13/</guid>
      <description>&lt;p&gt;
No post so far on &lt;a href=&#34;https://adventofcode.com/2021/day/12&#34;&gt;day 12&lt;/a&gt;. I finished part 1 but my code was pretty
messy which turned part 2 into a mess. I still have to go back to get
that second star so just like day 10, my day 12 write up is on hold.&lt;/p&gt;
&lt;p&gt;
That said, I really enjoyed [[&lt;a href=&#34;https://adventofcode.com/2021/day/13&#34;&gt;https://adventofcode.com/2021/day/13&lt;/a&gt;
][today&amp;#39;s]] challenge. Paper foldind. You&amp;#39;re given transparent paper with
a bunch of marks on it. You have to fold the paper over horizontal or
vertical lines and examine the results.&lt;/p&gt;
&lt;p&gt;
Input was in the form of lines x,y pairs followed by lines specifying
the folds.&lt;/p&gt;
&lt;p&gt;
First decision - data representation. Since we&amp;#39;ve got a grid,
temptation would be to use a 2D structure like a 2D array but there
are two problems. One is that each fold will make the paper smaller
and smaller which makes a 2D array wasteful if not clumsy. The other
issue is that we don&amp;#39;t know the ranges for our coordiates. We know
that all the values will be positive but we have no idea where they
start and end.&lt;/p&gt;
&lt;p&gt;
Just like with the cellular automaton, I decided to use a dictionary
where the key was  the x,y pair and the entry was the mark. I could
have used a plain list for the points but the dictionary gave me quick
lookup. Also, if part 2 had us change the marks based on if they
overlap after a fold, I&amp;#39;d be prepared.&lt;/p&gt;
&lt;p&gt;
For convenience (and as I learned later, part 2) I also wanted a
routine that could print the board. Here&amp;#39;s that routine in case you
want to see some clojure.&lt;/p&gt;
&lt;div class=&#34;src src-clojure&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;
  (&lt;span style=&#34;color:#66d9ef&#34;&gt;defn &lt;/span&gt;board-&amp;gt;string [board]
    (&lt;span style=&#34;color:#66d9ef&#34;&gt;let &lt;/span&gt;[maxx (apply max (map first (keys board))) &lt;span style=&#34;color:#75715e&#34;&gt;;; find the largest x&lt;/span&gt;
          maxy (apply max (map second (keys board))) &lt;span style=&#34;color:#75715e&#34;&gt;;; find the largest y&lt;/span&gt;
          k (keys board)

          &lt;span style=&#34;color:#75715e&#34;&gt;;; The next line makes a vector of maxy vectors&lt;/span&gt;
          &lt;span style=&#34;color:#75715e&#34;&gt;;; each of which has maxx spaces&lt;/span&gt;
          &lt;span style=&#34;color:#75715e&#34;&gt;;; basically a vector of vectors or 2D matrix if you would&lt;/span&gt;
          grid (into [] (repeat (inc maxy) (into [] (repeat (inc maxx) &lt;span style=&#34;color:#e6db74&#34;&gt;\ &lt;/span&gt;))))

          &lt;span style=&#34;color:#75715e&#34;&gt;;; go through the keys to our board (which is a hash table&lt;/span&gt;
          &lt;span style=&#34;color:#75715e&#34;&gt;;; and mark those squares with a #&lt;/span&gt;
          filled-grid (reduce (&lt;span style=&#34;color:#66d9ef&#34;&gt;fn &lt;/span&gt;[b [y x]] (&lt;span style=&#34;color:#a6e22e&#34;&gt;assoc-in&lt;/span&gt; b [x y] &lt;span style=&#34;color:#e6db74&#34;&gt;\#&lt;/span&gt;)) grid k)

          &lt;span style=&#34;color:#75715e&#34;&gt;;; change each line from a vector to a string&lt;/span&gt;
          &lt;span style=&#34;color:#75715e&#34;&gt;;; but leave the overall thing a vector since&lt;/span&gt;
          &lt;span style=&#34;color:#75715e&#34;&gt;;; it looks fine when I print it.&lt;/span&gt;
          string-grid (map &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;(apply str %) filled-grid)
          ]
      string-grid
      ))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Once we have our &amp;#34;board&amp;#34; we can then deal with folding. Folds had to
be over a horizontal (ex: y=7) or vertical (ex: x=5).&lt;/p&gt;
&lt;p&gt;
It was important to note that since we&amp;#39;re folding we only want to take
the points with coordinates greater than the folding line and
transform those and not just transform all the points.&lt;/p&gt;
&lt;p&gt;
The actual transformation is pretty straightforward. Given the line&amp;#39;s
coordinate L the new point value can be calculated using:&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
newcoord = oldcoord - 2 * abs(oldcoord-L)
&lt;/pre&gt;
&lt;p&gt;
We just go through the points and if they have to be transformed,
update them.&lt;/p&gt;
&lt;p&gt;
Part 1 solved.&lt;/p&gt;
&lt;p&gt;
Part 2 turned out to be far easier than I expected. Part 1 had us just
do the first fold. Part 2 had us do all of them at which point, if we
printed our board it would show us the 8 secret letters that formed
our anwer. Since the example on the problem page was a y fold and the
first fold of my data was an x fold I knew both my folds worked. I
just ran through all the folds and voila.&lt;/p&gt;
&lt;p&gt;
Now, I&amp;#39;m not complaining about an easy problem. If it were harder I
might not finish and then no write up but I was expecting something
more.&lt;/p&gt;
&lt;p&gt;
There were ways to make part two a bit more complex. I could see maybe
placing the data so far off the end so that you had to translate them
down closer to the origin so that your result would print or maybe do
something with overlapping marks when you fold as I mentioned up top.&lt;/p&gt;
&lt;p&gt;
Still, nothing wrong with an easy day mixed in and I still think it&amp;#39;s
a great problem. This could be done by a CS0 or CS1 class. What I
particularly love about problems like this is that when you
ultimately solve it you &amp;#34;decode&amp;#34; a secret message. Much cooler than
just getting some number.&lt;/p&gt;
&lt;p&gt;
So, over half way done. I still have that part 2 of day 12 to finish
but still captured half the total stars for the event. That&amp;#39;s my
starting goal each year.&lt;/p&gt;
&lt;p&gt;
If you want to see my full solution, you can check it out &lt;a href=&#34;https://github.com/zamansky/advent2021/blob/main/src/day13.clj&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
Enjoy.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dumbo Octopus and the Game of Life - AOC 2011 Day 11</title>
      <link>https://cestlaz.github.io/post/advent-2021-day11/</link>
      <pubDate>Sat, 11 Dec 2021 11:31:32 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/advent-2021-day11/</guid>
      <description>&lt;p&gt;
I wasn&amp;#39;t particularly motivated to start &lt;a href=&#34;https://adventofcode.com/2021/day/11 &#34;&gt;day 11&lt;/a&gt; but took a look over
coffee. A grid of points where on each turn or step the points are
modified by some rule. Hey, this sounds familiar - cellular automata
like Conway&amp;#39;s Game of Life.&lt;/p&gt;
&lt;p&gt;
You set up your grid and then on each turn just follow the rules. In a
traditional Cellular Automaton like &lt;a href=&#34;https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life&#34;&gt;Conway&amp;#39;s Game of Life&lt;/a&gt;, on each
turn each cell looks at its six neighbors and makes a decision as to
its next state based on the neighbors and a rule.&lt;/p&gt;
&lt;p&gt;
For &lt;a href=&#34;https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life&#34;&gt;Conway&amp;#39;s Game of Life&lt;/a&gt;, a cell is either alive or dead. On each
turn, it counts all it&amp;#39;s neighbors and then decides if it will be
alive or dead next turn based on its current state and how many
neithbors are currently alive.&lt;/p&gt;
&lt;p&gt;
I love talking about Cellular Automata in class although I haven&amp;#39;t
done it since my Stuy days. One of my favorite topics is using CS to
solve a maze in NetLogo. I wrote about that &lt;a href=&#34;https://cestlaz.github.io/posts/2016-01-17-maze-ca/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
Cellular Automata is also not a stranger to Advent of Code with three
problems being CS problems in 2020 and I think there were more in
earlier years.&lt;/p&gt;
&lt;p&gt;
This year the twist was that the rule for each step had two stages and
the second stage could repeat over and over again.&lt;/p&gt;
&lt;p&gt;
The first stage was just to increment the value of each cell. The
second involved &amp;#34;flashing.&amp;#34; This would happen if a cell&amp;#39;s value
exceeded nine. If a cell flashed, it would increment the value of each
of its neighbors. This could cause a cascade by having a neighbor&amp;#39;s
value exceed nine. This kept going until the board stabalized. You
also had to account for the fact that a cell should only flip at most
once per step.&lt;/p&gt;
&lt;p&gt;
Part one had you calculate the number of flashes over the course of
100 steps.&lt;/p&gt;
&lt;p&gt;
When I do CA in a class like APCS-A we usually use a 2D array to
represent our world. In NetLogo, the world is already a grid. Since
I&amp;#39;m using Clojure, I though a hash table would be easier. The keys are
x,y coordinates and the values are the state of the cell (the integer
value). To set things up I stole the code from my code from last year,
also coincidentally &lt;a href=&#34;https://github.com/zamansky/advent2020/blob/main/src/day11.clj&#34;&gt;day 11&lt;/a&gt;. My &lt;a href=&#34;https://cestlaz.github.io/post/advent-2020-day11/&#34;&gt;write up&lt;/a&gt; also talke about using a hash
table or dictionary instead of a 2D array.&lt;/p&gt;
&lt;p&gt;
The first stage of each step was easy. Just map the increment function
across the entire board.&lt;/p&gt;
&lt;p&gt;
The second step took more thought. First, I went through the board and
for any cell that was greater than 9 I incremented all its
neighbors. Then to make sure I don&amp;#39;t flash a cell more than once a
turn, I marked the current cell as being flashed. I did this by making
it a large negative number.&lt;/p&gt;
&lt;p&gt;
I repeated that second step over and over until it stabilized. That
is, you went through an iteration where the board didn&amp;#39;t change - no
new flashes.&lt;/p&gt;
&lt;p&gt;
Finally, I set all the negative cells, which indicated they flashed to
zero in preparation for the next step.&lt;/p&gt;
&lt;p&gt;
In the loop I counted and added up how many flashes we had and that
was part 1.&lt;/p&gt;
&lt;p&gt;
For part 2 you were looking for a step where every cell flashed at the
same time. This was pretty easy because we were able to essentially
use the same engine. The only difference was that instead of doing 100
steps, you kept going until every cell flashed in one turn. That
turned out to be easy to check. You know that happened when all of the
cells at the start of a turn are 0.&lt;/p&gt;
&lt;p&gt;
As usual, the full solution can be found on &lt;a href=&#34;https://github.com/zamansky/advent2021/blob/main/src/day11.clj&#34;&gt;GitHub.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
Wasn&amp;#39;t motivated to start today but it turned out to be a fun little
challenge.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bracket Bonanza (AOC 2021 day 10)</title>
      <link>https://cestlaz.github.io/post/advent-2021-day10/</link>
      <pubDate>Fri, 10 Dec 2021 12:15:34 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/advent-2021-day10/</guid>
      <description>&lt;p&gt;
I know, where&amp;#39;s day 9? Thursdays (and Mondays) are already tight for
me - I teach all morning and it&amp;#39;s been a rough week. I just had very
little energy and focus all day yesterday. I snuck some time in to
finish part 1 but couldn&amp;#39;t focus on part 2.&lt;/p&gt;
&lt;p&gt;
Today, however, my body gave me an extra half hour of sleep (til
4:30am) so I had extra time and energy. I was fortunate in that
today&amp;#39;s problem was essentially one that I&amp;#39;ve assigned time and time
again so I was able to wrap it up quickly and then go back to finish
day 9.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s pretty likely that there&amp;#39;ll be a day I can&amp;#39;t solve in the near
future so maybe I&amp;#39;ll write up day 9 then.&lt;/p&gt;
&lt;p&gt;
But for now, &lt;a href=&#34;https://adventofcode.com/2021/day/10&#34;&gt;day 10 - Syntax Scoring&lt;/a&gt; or as I like to say a bracket
bonanza. Inputs were lines of brackets like this:&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
[({(&amp;lt;(())[]&amp;gt;[[{[]{&amp;lt;()&amp;lt;&amp;gt;&amp;gt;
&lt;/pre&gt;
&lt;p&gt;
Both parts of the problem involve figuring out if the line is valid,
that is, if each open bracket has a matching close bracket without
overlap. For example (([])) is valid but (([)]) is not becaue the
inner () and the [] overlap.&lt;/p&gt;
&lt;p&gt;
I could be like a kid doing a technical interview and pretend I hadn&amp;#39;t
solved the problem before the interview but the truth is, I&amp;#39;ve
done problems very similar to this most times I teach data structures.&lt;/p&gt;
&lt;p&gt;
As you process through the input, whenever you see a closing bracket,
it &lt;strong&gt;has&lt;/strong&gt; to match up with the last seen open bracket otherwise the
expression is invalid. This means you have to maintain a data
structure in such a way that the last open bracket you see is the
first one you check whenever you see a closing brace.&lt;/p&gt;
&lt;p&gt;
This is, by definition, a stack. A stack is a data structure where the
last item you put in is the first item you take out.&lt;/p&gt;
&lt;p&gt;
So, the algorithm is pretty simple.&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;make an empty stack
For each character in the input:
  1. If it&amp;#39;s an open bracket put it on the stack
  2. If it&amp;#39;s a close bracket, check the top of the stack.
     1. If the stack is empty you&amp;#39;ve got an invalid expression - exit
     2. If top of the stack doesn&amp;#39;t match your bracket - invalid -exit
     3. If top of the stack does match your braket, pop it off the stack and keep going&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
That&amp;#39;s basically it. The only remaining task is to figure out the
specifics to answer the problem.&lt;/p&gt;
&lt;p&gt;
For part 1 you had to run the above algorithm on each line of input
and for each invalid expression look up the invalid character&amp;#39;s value
(provide in the problem text) and add them all up.&lt;/p&gt;
&lt;p&gt;
For part two you had to take the remaining characters in the lines
once you hit an invalid brace and figure out a slightly more complex
score.&lt;/p&gt;
&lt;p&gt;
So, given that I had basically done this problem it wasn&amp;#39;t hard but it
was fun. This could be directly assigned to any data structures class.&lt;/p&gt;
&lt;p&gt;
As usual, my code can be found here:
&lt;a href=&#34;https://github.com/zamansky/advent2021/blob/main/src/day10.clj&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/advent2021/blob/main/src/day10.clj&#34;&gt;https://github.com/zamansky/advent2021/blob/main/src/day10.clj&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Seven Segment Silliness - Advent 2021 Day08</title>
      <link>https://cestlaz.github.io/post/advent-2021-day08/</link>
      <pubDate>Wed, 08 Dec 2021 13:20:49 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/advent-2021-day08/</guid>
      <description>&lt;p&gt;
Day 8 took a lot longer than the other days. Not all that much code
and not too complex, at least after getting through a scary sounding
lead up but going from problem statement to solution took both time
and thought.&lt;/p&gt;
&lt;p&gt;
As I started to read the problem, I wasn&amp;#39;t sure I&amp;#39;d finish it let
alone have time to write it up.&lt;/p&gt;
&lt;p&gt;
Take a minute to read over the problem. You can find it [[&lt;a href=&#34;https://adventofcode.com/2021/day/8&#34;&gt;https://adventofcode.com/2021/day/8&lt;/a&gt;
][here.]]&lt;/p&gt;
&lt;p&gt;
A pretty intimidating wall of text. &lt;/p&gt;
&lt;p&gt;
You&amp;#39;ve got a bunch of lines, each looking like this:&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
be cfbegad cbdgef fgaecd cgeb fdcge agebfd fecdb fabcd edb | fdgacbe cefdb cefbgd gcbe
&lt;/pre&gt;
&lt;p&gt;
Each &amp;#34;word&amp;#34; represents a seven segment display. The side to the left
of the | is the input for that line and the stuff on the right, the
output.&lt;/p&gt;
&lt;p&gt;
The problem is that each line has the inputs scrambled. We jave to
figure out which letter maps to the top segment, which the bottom,
etc.&lt;/p&gt;
&lt;p&gt;
Oh boy.&lt;/p&gt;
&lt;p&gt;
It turns out that part one really wasn&amp;#39;t hard at all. In fact, it
could make a nice early CS assignment. If you look at the display for
a &lt;strong&gt;1&lt;/strong&gt;, it has two segment on the right hand side. It&amp;#39;s the only number
that uses 2 and only 2 of the seven segments. Likewise a &lt;strong&gt;4&lt;/strong&gt; is the
only four segment letter, &lt;strong&gt;7&lt;/strong&gt; is the only one that uses 3 segments,
and &lt;strong&gt;8&lt;/strong&gt; is the only one that uses all seven segments.&lt;/p&gt;
&lt;p&gt;
For part 1 you just had to look at all the outputs  - that is, the
stuff on each line after the | and add up the number of items that
are either a 1, 4, 7, or 8. That&amp;#39;s easily accomplished by going over
each of those items and checking if they have the correct number of
characters and then figuring out the total number of these items.&lt;/p&gt;
&lt;p&gt;
I had already parsed my data into the a two item list where the left
item is a list of inputs and the right a list of outputs:&lt;/p&gt;
&lt;div class=&#34;src src-clojure&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;[ [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cg&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cdbga&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bcg&amp;#34;&lt;/span&gt; ...] [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;geac&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ceag&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;faedcb&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cg&amp;#34;&lt;/span&gt;]]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
So all I had to do go through all the output sides, count the characters in
each item and then add up the number of them.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the code:&lt;/p&gt;
&lt;div class=&#34;src src-clojure&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;  (&lt;span style=&#34;color:#66d9ef&#34;&gt;defn &lt;/span&gt;myfilter [x]
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;takes a list of numbers and returns only those that are 2,4,3, or 7&amp;#34;&lt;/span&gt;
    (filter &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;(contains? &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;} %) x))


  (&lt;span style=&#34;color:#66d9ef&#34;&gt;defn &lt;/span&gt;part1 [  data]
    (&lt;span style=&#34;color:#66d9ef&#34;&gt;let &lt;/span&gt;[results (map second data) &lt;span style=&#34;color:#75715e&#34;&gt;;; pull out all the outputs&lt;/span&gt;
          counted (map &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;(map count %) results) &lt;span style=&#34;color:#75715e&#34;&gt;;; turn the &amp;#34;words&amp;#34; into counts of their lengths&lt;/span&gt;
          f (map &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;myfilter&lt;/span&gt; %) counted) &lt;span style=&#34;color:#75715e&#34;&gt;;; only keep the ones that are the right lengths&lt;/span&gt;
          total (map &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;(count %) f) &lt;span style=&#34;color:#75715e&#34;&gt;;; count how many are in each line&lt;/span&gt;
          ]
      (apply +  total))) &lt;span style=&#34;color:#75715e&#34;&gt;;; add them all up &lt;/span&gt;

  (&lt;span style=&#34;color:#a6e22e&#34;&gt;part1&lt;/span&gt; data)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
For part 2 we had to decode all the output lines and then turn them
into numbers and add them up.&lt;/p&gt;
&lt;p&gt;
Sounded really daunting. It required some thought but it wasn&amp;#39;t that
bad.&lt;/p&gt;
&lt;p&gt;
I wanted to build a dictionary where the keys were the digits and the
values would be the segments for that particular input line that
represent  that digit.&lt;/p&gt;
&lt;p&gt;
For a given line, we can do it pretty easily for the unique numbers 2,
4,3, and 7 so we just loop through all the items in a line  and when
we see an item with the appropriate length, we store the number in our
dictionary.&lt;/p&gt;
&lt;p&gt;
We might have something like this:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;align-right&#34;&gt;key&lt;/th&gt;
&lt;th&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;td&gt;b e&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;4&lt;/td&gt;
&lt;td&gt;b c e g&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;7&lt;/td&gt;
&lt;td&gt;b d e&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;8&lt;/td&gt;
&lt;td&gt;a b c d e f g&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
These were the values from the first line of the example data. Also, I
used a Clojure set  to store the values since that makes the rest of
the solution easier.&lt;/p&gt;
&lt;p&gt;
I then took this dictionary and tried to add to it by figuring out the
5 segment numbers - specifically, 2, 3 and 5. It turns out that of the
5 segment numbers, the &lt;strong&gt;3&lt;/strong&gt; is the only one that ovelaps with the two
segments from the &lt;strong&gt;1&lt;/strong&gt; so we can find that one pretty easily. If the
five segment number wasn&amp;#39;t a 3, I looked to see if it was a 5. For
this, I looked to see if it had the left and middle segments that the
4 had. Finally, if it wasn&amp;#39;t a &lt;strong&gt;3&lt;/strong&gt; or a &lt;strong&gt;5&lt;/strong&gt; then it had to be a &lt;strong&gt;2&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;
Next, I did the same for the remaining segments which were all 6
segments. You can look at my full code (linked below) for specifics.&lt;/p&gt;
&lt;p&gt;
Once we had the complet dictionary I flipped it - keys became values
and values became keys so we could look up the output numbers. From
there, it was easy to convert them to numbers and find the final
answer.&lt;/p&gt;
&lt;p&gt;
The part of this problem that was both fun and challenging was trying
to figure out how to decode a given letter given what you already
figured out. That took some time but getting the final answers for
problems like this are somehow more satisfying than just a straight up
&amp;#34;code it&amp;#34; problem.&lt;/p&gt;
&lt;p&gt;
You can find my full solution &lt;a href=&#34;https://github.com/zamansky/advent2021/blob/main/src/day08.clj&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
I was worried I wasn&amp;#39;t going to finished this one when I first read it
but I think it&amp;#39;s my favorite of the year so far.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How you look at a problem can make it easier - AOC 2021 Day 7</title>
      <link>https://cestlaz.github.io/post/advent-2021-day07/</link>
      <pubDate>Tue, 07 Dec 2021 09:04:53 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/advent-2021-day07/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://adventofcode.com/2021/day/7&#34;&gt;Today&amp;#39;s problem&lt;/a&gt; was similar to &lt;a href=&#34;https://cestlaz.github.io/post/advent-2021-day06/&#34;&gt;yesterday&amp;#39;s&lt;/a&gt; in that it&amp;#39;s ease or
difficulty really depended on how you looked at the question.&lt;/p&gt;
&lt;p&gt;
For yesterday, the problem was hard if you approached it by modeling
each and every lanternfish but it was much easier if you modeled the 8
days of the reproduction cycle. Sure, there was still work to be done
but looking at the problem the right way made things much easier.&lt;/p&gt;
&lt;p&gt;
Same thing for today, at least for me.&lt;/p&gt;
&lt;p&gt;
We were given a list of crabs and their locations and the challenge
was getting them all to the same spot. Fortunately, crabs in their
submarines can only move in one dimension - they can only move
horizontally. This gives us an input that&amp;#39;s just a list of integers,
each representing a crab location.&lt;/p&gt;
&lt;p&gt;
We want to move all the crabs to the same location and we want to do
it as efficiently as possible. The crab submarines use one unit of
fuel for each step taken so we want to minimize the overall amount of
fuel used.&lt;/p&gt;
&lt;p&gt;
If we look at this from the crab point of view this could seem
daunting - do we move the crabs one at a time? Do we have them
converge? Will we have to do some crazy recursive movement thing?&lt;/p&gt;
&lt;p&gt;
It turns out, none of the above. As soon as we realize that we don&amp;#39;t
have to figure out actual moves or actually move the crabs the problem
becomes much easier. It isn&amp;#39;t about the crabs but rather about the
locations. We want to figure out the minimal cost of moving all the
crabs to each location and then we can pick the lowest overall cost.&lt;/p&gt;
&lt;p&gt;
This turns out to be rather simple.&lt;/p&gt;
&lt;p&gt;
For each possible location (looping from smallest crab location to
larges):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;calculate the distance from each crab to this location.&lt;/li&gt;
&lt;li&gt;Add up all those distances.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We then just need to take the smallest distance and we&amp;#39;re done.&lt;/p&gt;
&lt;p&gt;
On to part two.&lt;/p&gt;
&lt;p&gt;
For part two, there was a change to the fuel cost. Instead of just
being the distance between the two locations, the cost of the fuel
increased by one for each step. So, for moving 1 step the cost would
be one. Two steps, 1+2, three 1+2+3 etc..&lt;/p&gt;
&lt;p&gt;
This was easy enough to model. I just changed the function that
calculated the old cost with one that calculated the new cost. To do
that, I took the difference between the two endpoints and calculated
the sum from 1 up to and including that number.&lt;/p&gt;
&lt;p&gt;
This added an additional loop but I figured might as well try it. It
was noticeably slower than part 1 - about 11 seconds as opposed to
around 90 msec but fast enough to get an answer and finish the problem
for the day. That said, it was easy enough to improve the solution if
you know that you can calculate the sum from 1 to n using the formula
(n*(n+1))/2. This got the speed back to just over 100 msec.&lt;/p&gt;
&lt;p&gt;
Looking over the adventofcode subreddit people were talking about
using the median to more quickly solve the problem but what I did was
good enough for me.&lt;/p&gt;
&lt;p&gt;
As always, the clojure code can be found &lt;a href=&#34;https://github.com/zamansky/advent2021/blob/main/src/day07.clj&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
Enjoy.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>